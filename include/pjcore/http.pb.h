// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pjcore/http.proto

#ifndef PROTOBUF_pjcore_2fhttp_2eproto__INCLUDED
#define PROTOBUF_pjcore_2fhttp_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "pjcore/error.pb.h"
// @@protoc_insertion_point(includes)

namespace pjcore {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_pjcore_2fhttp_2eproto();
void protobuf_AssignDesc_pjcore_2fhttp_2eproto();
void protobuf_ShutdownFile_pjcore_2fhttp_2eproto();

class UrlParameter;
class ParsedUrl;
class NodeAndServiceName;
class HttpVersion;
class HttpHeader;
class HttpRequest;
class HttpResponse;
class HttpServerConfig;
class HttpClientConfig;

enum HttpParserType {
  HTTP_PARSER_REQUEST = 0,
  HTTP_PARSER_RESPONSE = 1,
  HTTP_PARSER_BOTH = 2
};
bool HttpParserType_IsValid(int value);
const HttpParserType HttpParserType_MIN = HTTP_PARSER_REQUEST;
const HttpParserType HttpParserType_MAX = HTTP_PARSER_BOTH;
const int HttpParserType_ARRAYSIZE = HttpParserType_MAX + 1;

const ::google::protobuf::EnumDescriptor* HttpParserType_descriptor();
inline const ::std::string& HttpParserType_Name(HttpParserType value) {
  return ::google::protobuf::internal::NameOfEnum(
    HttpParserType_descriptor(), value);
}
inline bool HttpParserType_Parse(
    const ::std::string& name, HttpParserType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HttpParserType>(
    HttpParserType_descriptor(), name, value);
}
enum HttpServerTransactionState {
  HTTP_SERVER_TRANSACTION_READ = 0,
  HTTP_SERVER_TRANSACTION_READ_COMPLETE = 1,
  HTTP_SERVER_TRANSACTION_WAIT_WRITE = 2,
  HTTP_SERVER_TRANSACTION_WRITE = 3
};
bool HttpServerTransactionState_IsValid(int value);
const HttpServerTransactionState HttpServerTransactionState_MIN = HTTP_SERVER_TRANSACTION_READ;
const HttpServerTransactionState HttpServerTransactionState_MAX = HTTP_SERVER_TRANSACTION_WRITE;
const int HttpServerTransactionState_ARRAYSIZE = HttpServerTransactionState_MAX + 1;

const ::google::protobuf::EnumDescriptor* HttpServerTransactionState_descriptor();
inline const ::std::string& HttpServerTransactionState_Name(HttpServerTransactionState value) {
  return ::google::protobuf::internal::NameOfEnum(
    HttpServerTransactionState_descriptor(), value);
}
inline bool HttpServerTransactionState_Parse(
    const ::std::string& name, HttpServerTransactionState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HttpServerTransactionState>(
    HttpServerTransactionState_descriptor(), name, value);
}
// ===================================================================

class UrlParameter : public ::google::protobuf::Message {
 public:
  UrlParameter();
  virtual ~UrlParameter();

  UrlParameter(const UrlParameter& from);

  inline UrlParameter& operator=(const UrlParameter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UrlParameter& default_instance();

  void Swap(UrlParameter* other);

  // implements Message ----------------------------------------------

  inline UrlParameter* New() const { return New(NULL); }

  UrlParameter* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UrlParameter& from);
  void MergeFrom(const UrlParameter& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UrlParameter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const char* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  inline void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:pjcore.UrlParameter)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend void  protobuf_AddDesc_pjcore_2fhttp_2eproto();
  friend void protobuf_AssignDesc_pjcore_2fhttp_2eproto();
  friend void protobuf_ShutdownFile_pjcore_2fhttp_2eproto();

  void InitAsDefaultInstance();
  static UrlParameter* default_instance_;
};
// -------------------------------------------------------------------

class ParsedUrl : public ::google::protobuf::Message {
 public:
  ParsedUrl();
  virtual ~ParsedUrl();

  ParsedUrl(const ParsedUrl& from);

  inline ParsedUrl& operator=(const ParsedUrl& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ParsedUrl& default_instance();

  void Swap(ParsedUrl* other);

  // implements Message ----------------------------------------------

  inline ParsedUrl* New() const { return New(NULL); }

  ParsedUrl* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ParsedUrl& from);
  void MergeFrom(const ParsedUrl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ParsedUrl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string scheme = 1;
  inline bool has_scheme() const;
  inline void clear_scheme();
  static const int kSchemeFieldNumber = 1;
  inline const ::std::string& scheme() const;
  inline void set_scheme(const ::std::string& value);
  inline void set_scheme(const char* value);
  inline void set_scheme(const char* value, size_t size);
  inline ::std::string* mutable_scheme();
  inline ::std::string* release_scheme();
  inline void set_allocated_scheme(::std::string* scheme);

  // optional string userinfo = 2;
  inline bool has_userinfo() const;
  inline void clear_userinfo();
  static const int kUserinfoFieldNumber = 2;
  inline const ::std::string& userinfo() const;
  inline void set_userinfo(const ::std::string& value);
  inline void set_userinfo(const char* value);
  inline void set_userinfo(const char* value, size_t size);
  inline ::std::string* mutable_userinfo();
  inline ::std::string* release_userinfo();
  inline void set_allocated_userinfo(::std::string* userinfo);

  // optional string host = 3;
  inline bool has_host() const;
  inline void clear_host();
  static const int kHostFieldNumber = 3;
  inline const ::std::string& host() const;
  inline void set_host(const ::std::string& value);
  inline void set_host(const char* value);
  inline void set_host(const char* value, size_t size);
  inline ::std::string* mutable_host();
  inline ::std::string* release_host();
  inline void set_allocated_host(::std::string* host);

  // optional int32 port = 4;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 4;
  inline ::google::protobuf::int32 port() const;
  inline void set_port(::google::protobuf::int32 value);

  // optional string path = 5;
  inline bool has_path() const;
  inline void clear_path();
  static const int kPathFieldNumber = 5;
  inline const ::std::string& path() const;
  inline void set_path(const ::std::string& value);
  inline void set_path(const char* value);
  inline void set_path(const char* value, size_t size);
  inline ::std::string* mutable_path();
  inline ::std::string* release_path();
  inline void set_allocated_path(::std::string* path);

  // optional string query = 6;
  inline bool has_query() const;
  inline void clear_query();
  static const int kQueryFieldNumber = 6;
  inline const ::std::string& query() const;
  inline void set_query(const ::std::string& value);
  inline void set_query(const char* value);
  inline void set_query(const char* value, size_t size);
  inline ::std::string* mutable_query();
  inline ::std::string* release_query();
  inline void set_allocated_query(::std::string* query);

  // optional string fragment = 7;
  inline bool has_fragment() const;
  inline void clear_fragment();
  static const int kFragmentFieldNumber = 7;
  inline const ::std::string& fragment() const;
  inline void set_fragment(const ::std::string& value);
  inline void set_fragment(const char* value);
  inline void set_fragment(const char* value, size_t size);
  inline ::std::string* mutable_fragment();
  inline ::std::string* release_fragment();
  inline void set_allocated_fragment(::std::string* fragment);

  // repeated .pjcore.UrlParameter parameters = 8;
  inline int parameters_size() const;
  inline void clear_parameters();
  static const int kParametersFieldNumber = 8;
  inline const ::pjcore::UrlParameter& parameters(int index) const;
  inline ::pjcore::UrlParameter* mutable_parameters(int index);
  inline ::pjcore::UrlParameter* add_parameters();
  inline const ::google::protobuf::RepeatedPtrField< ::pjcore::UrlParameter >&
      parameters() const;
  inline ::google::protobuf::RepeatedPtrField< ::pjcore::UrlParameter >*
      mutable_parameters();

  // @@protoc_insertion_point(class_scope:pjcore.ParsedUrl)
 private:
  inline void set_has_scheme();
  inline void clear_has_scheme();
  inline void set_has_userinfo();
  inline void clear_has_userinfo();
  inline void set_has_host();
  inline void clear_has_host();
  inline void set_has_port();
  inline void clear_has_port();
  inline void set_has_path();
  inline void clear_has_path();
  inline void set_has_query();
  inline void clear_has_query();
  inline void set_has_fragment();
  inline void clear_has_fragment();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr scheme_;
  ::google::protobuf::internal::ArenaStringPtr userinfo_;
  ::google::protobuf::internal::ArenaStringPtr host_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  ::google::protobuf::internal::ArenaStringPtr fragment_;
  ::google::protobuf::RepeatedPtrField< ::pjcore::UrlParameter > parameters_;
  ::google::protobuf::int32 port_;
  friend void  protobuf_AddDesc_pjcore_2fhttp_2eproto();
  friend void protobuf_AssignDesc_pjcore_2fhttp_2eproto();
  friend void protobuf_ShutdownFile_pjcore_2fhttp_2eproto();

  void InitAsDefaultInstance();
  static ParsedUrl* default_instance_;
};
// -------------------------------------------------------------------

class NodeAndServiceName : public ::google::protobuf::Message {
 public:
  NodeAndServiceName();
  virtual ~NodeAndServiceName();

  NodeAndServiceName(const NodeAndServiceName& from);

  inline NodeAndServiceName& operator=(const NodeAndServiceName& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NodeAndServiceName& default_instance();

  void Swap(NodeAndServiceName* other);

  // implements Message ----------------------------------------------

  inline NodeAndServiceName* New() const { return New(NULL); }

  NodeAndServiceName* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NodeAndServiceName& from);
  void MergeFrom(const NodeAndServiceName& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NodeAndServiceName* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string node_name = 1;
  inline bool has_node_name() const;
  inline void clear_node_name();
  static const int kNodeNameFieldNumber = 1;
  inline const ::std::string& node_name() const;
  inline void set_node_name(const ::std::string& value);
  inline void set_node_name(const char* value);
  inline void set_node_name(const char* value, size_t size);
  inline ::std::string* mutable_node_name();
  inline ::std::string* release_node_name();
  inline void set_allocated_node_name(::std::string* node_name);

  // optional string service_name = 2;
  inline bool has_service_name() const;
  inline void clear_service_name();
  static const int kServiceNameFieldNumber = 2;
  inline const ::std::string& service_name() const;
  inline void set_service_name(const ::std::string& value);
  inline void set_service_name(const char* value);
  inline void set_service_name(const char* value, size_t size);
  inline ::std::string* mutable_service_name();
  inline ::std::string* release_service_name();
  inline void set_allocated_service_name(::std::string* service_name);

  // @@protoc_insertion_point(class_scope:pjcore.NodeAndServiceName)
 private:
  inline void set_has_node_name();
  inline void clear_has_node_name();
  inline void set_has_service_name();
  inline void clear_has_service_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr node_name_;
  ::google::protobuf::internal::ArenaStringPtr service_name_;
  friend void  protobuf_AddDesc_pjcore_2fhttp_2eproto();
  friend void protobuf_AssignDesc_pjcore_2fhttp_2eproto();
  friend void protobuf_ShutdownFile_pjcore_2fhttp_2eproto();

  void InitAsDefaultInstance();
  static NodeAndServiceName* default_instance_;
};
// -------------------------------------------------------------------

class HttpVersion : public ::google::protobuf::Message {
 public:
  HttpVersion();
  virtual ~HttpVersion();

  HttpVersion(const HttpVersion& from);

  inline HttpVersion& operator=(const HttpVersion& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HttpVersion& default_instance();

  void Swap(HttpVersion* other);

  // implements Message ----------------------------------------------

  inline HttpVersion* New() const { return New(NULL); }

  HttpVersion* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HttpVersion& from);
  void MergeFrom(const HttpVersion& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HttpVersion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 major = 1;
  inline bool has_major() const;
  inline void clear_major();
  static const int kMajorFieldNumber = 1;
  inline ::google::protobuf::int32 major() const;
  inline void set_major(::google::protobuf::int32 value);

  // optional int32 minor = 2;
  inline bool has_minor() const;
  inline void clear_minor();
  static const int kMinorFieldNumber = 2;
  inline ::google::protobuf::int32 minor() const;
  inline void set_minor(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pjcore.HttpVersion)
 private:
  inline void set_has_major();
  inline void clear_has_major();
  inline void set_has_minor();
  inline void clear_has_minor();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 major_;
  ::google::protobuf::int32 minor_;
  friend void  protobuf_AddDesc_pjcore_2fhttp_2eproto();
  friend void protobuf_AssignDesc_pjcore_2fhttp_2eproto();
  friend void protobuf_ShutdownFile_pjcore_2fhttp_2eproto();

  void InitAsDefaultInstance();
  static HttpVersion* default_instance_;
};
// -------------------------------------------------------------------

class HttpHeader : public ::google::protobuf::Message {
 public:
  HttpHeader();
  virtual ~HttpHeader();

  HttpHeader(const HttpHeader& from);

  inline HttpHeader& operator=(const HttpHeader& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HttpHeader& default_instance();

  void Swap(HttpHeader* other);

  // implements Message ----------------------------------------------

  inline HttpHeader* New() const { return New(NULL); }

  HttpHeader* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HttpHeader& from);
  void MergeFrom(const HttpHeader& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HttpHeader* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const char* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  inline void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:pjcore.HttpHeader)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend void  protobuf_AddDesc_pjcore_2fhttp_2eproto();
  friend void protobuf_AssignDesc_pjcore_2fhttp_2eproto();
  friend void protobuf_ShutdownFile_pjcore_2fhttp_2eproto();

  void InitAsDefaultInstance();
  static HttpHeader* default_instance_;
};
// -------------------------------------------------------------------

class HttpRequest : public ::google::protobuf::Message {
 public:
  HttpRequest();
  virtual ~HttpRequest();

  HttpRequest(const HttpRequest& from);

  inline HttpRequest& operator=(const HttpRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HttpRequest& default_instance();

  void Swap(HttpRequest* other);

  // implements Message ----------------------------------------------

  inline HttpRequest* New() const { return New(NULL); }

  HttpRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HttpRequest& from);
  void MergeFrom(const HttpRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HttpRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 method = 1;
  inline bool has_method() const;
  inline void clear_method();
  static const int kMethodFieldNumber = 1;
  inline ::google::protobuf::int32 method() const;
  inline void set_method(::google::protobuf::int32 value);

  // optional string url = 2;
  inline bool has_url() const;
  inline void clear_url();
  static const int kUrlFieldNumber = 2;
  inline const ::std::string& url() const;
  inline void set_url(const ::std::string& value);
  inline void set_url(const char* value);
  inline void set_url(const char* value, size_t size);
  inline ::std::string* mutable_url();
  inline ::std::string* release_url();
  inline void set_allocated_url(::std::string* url);

  // optional .pjcore.ParsedUrl parsed_url = 3;
  inline bool has_parsed_url() const;
  inline void clear_parsed_url();
  static const int kParsedUrlFieldNumber = 3;
  inline const ::pjcore::ParsedUrl& parsed_url() const;
  inline ::pjcore::ParsedUrl* mutable_parsed_url();
  inline ::pjcore::ParsedUrl* release_parsed_url();
  inline void set_allocated_parsed_url(::pjcore::ParsedUrl* parsed_url);

  // optional .pjcore.HttpVersion http_version = 4;
  inline bool has_http_version() const;
  inline void clear_http_version();
  static const int kHttpVersionFieldNumber = 4;
  inline const ::pjcore::HttpVersion& http_version() const;
  inline ::pjcore::HttpVersion* mutable_http_version();
  inline ::pjcore::HttpVersion* release_http_version();
  inline void set_allocated_http_version(::pjcore::HttpVersion* http_version);

  // repeated .pjcore.HttpHeader headers = 5;
  inline int headers_size() const;
  inline void clear_headers();
  static const int kHeadersFieldNumber = 5;
  inline const ::pjcore::HttpHeader& headers(int index) const;
  inline ::pjcore::HttpHeader* mutable_headers(int index);
  inline ::pjcore::HttpHeader* add_headers();
  inline const ::google::protobuf::RepeatedPtrField< ::pjcore::HttpHeader >&
      headers() const;
  inline ::google::protobuf::RepeatedPtrField< ::pjcore::HttpHeader >*
      mutable_headers();

  // optional bytes content = 6;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 6;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const void* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // optional bool should_keep_alive = 7;
  inline bool has_should_keep_alive() const;
  inline void clear_should_keep_alive();
  static const int kShouldKeepAliveFieldNumber = 7;
  inline bool should_keep_alive() const;
  inline void set_should_keep_alive(bool value);

  // @@protoc_insertion_point(class_scope:pjcore.HttpRequest)
 private:
  inline void set_has_method();
  inline void clear_has_method();
  inline void set_has_url();
  inline void clear_has_url();
  inline void set_has_parsed_url();
  inline void clear_has_parsed_url();
  inline void set_has_http_version();
  inline void clear_has_http_version();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_should_keep_alive();
  inline void clear_has_should_keep_alive();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::pjcore::ParsedUrl* parsed_url_;
  ::pjcore::HttpVersion* http_version_;
  ::google::protobuf::int32 method_;
  bool should_keep_alive_;
  ::google::protobuf::RepeatedPtrField< ::pjcore::HttpHeader > headers_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  friend void  protobuf_AddDesc_pjcore_2fhttp_2eproto();
  friend void protobuf_AssignDesc_pjcore_2fhttp_2eproto();
  friend void protobuf_ShutdownFile_pjcore_2fhttp_2eproto();

  void InitAsDefaultInstance();
  static HttpRequest* default_instance_;
};
// -------------------------------------------------------------------

class HttpResponse : public ::google::protobuf::Message {
 public:
  HttpResponse();
  virtual ~HttpResponse();

  HttpResponse(const HttpResponse& from);

  inline HttpResponse& operator=(const HttpResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HttpResponse& default_instance();

  void Swap(HttpResponse* other);

  // implements Message ----------------------------------------------

  inline HttpResponse* New() const { return New(NULL); }

  HttpResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HttpResponse& from);
  void MergeFrom(const HttpResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HttpResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pjcore.HttpVersion http_version = 1;
  inline bool has_http_version() const;
  inline void clear_http_version();
  static const int kHttpVersionFieldNumber = 1;
  inline const ::pjcore::HttpVersion& http_version() const;
  inline ::pjcore::HttpVersion* mutable_http_version();
  inline ::pjcore::HttpVersion* release_http_version();
  inline void set_allocated_http_version(::pjcore::HttpVersion* http_version);

  // optional .pjcore.HttpStatusCode status_code = 2;
  inline bool has_status_code() const;
  inline void clear_status_code();
  static const int kStatusCodeFieldNumber = 2;
  inline ::pjcore::HttpStatusCode status_code() const;
  inline void set_status_code(::pjcore::HttpStatusCode value);

  // repeated .pjcore.HttpHeader headers = 3;
  inline int headers_size() const;
  inline void clear_headers();
  static const int kHeadersFieldNumber = 3;
  inline const ::pjcore::HttpHeader& headers(int index) const;
  inline ::pjcore::HttpHeader* mutable_headers(int index);
  inline ::pjcore::HttpHeader* add_headers();
  inline const ::google::protobuf::RepeatedPtrField< ::pjcore::HttpHeader >&
      headers() const;
  inline ::google::protobuf::RepeatedPtrField< ::pjcore::HttpHeader >*
      mutable_headers();

  // optional bytes content = 4;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 4;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const void* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // optional bool should_keep_alive = 5;
  inline bool has_should_keep_alive() const;
  inline void clear_should_keep_alive();
  static const int kShouldKeepAliveFieldNumber = 5;
  inline bool should_keep_alive() const;
  inline void set_should_keep_alive(bool value);

  // @@protoc_insertion_point(class_scope:pjcore.HttpResponse)
 private:
  inline void set_has_http_version();
  inline void clear_has_http_version();
  inline void set_has_status_code();
  inline void clear_has_status_code();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_should_keep_alive();
  inline void clear_has_should_keep_alive();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pjcore::HttpVersion* http_version_;
  ::google::protobuf::RepeatedPtrField< ::pjcore::HttpHeader > headers_;
  int status_code_;
  bool should_keep_alive_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  friend void  protobuf_AddDesc_pjcore_2fhttp_2eproto();
  friend void protobuf_AssignDesc_pjcore_2fhttp_2eproto();
  friend void protobuf_ShutdownFile_pjcore_2fhttp_2eproto();

  void InitAsDefaultInstance();
  static HttpResponse* default_instance_;
};
// -------------------------------------------------------------------

class HttpServerConfig : public ::google::protobuf::Message {
 public:
  HttpServerConfig();
  virtual ~HttpServerConfig();

  HttpServerConfig(const HttpServerConfig& from);

  inline HttpServerConfig& operator=(const HttpServerConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HttpServerConfig& default_instance();

  void Swap(HttpServerConfig* other);

  // implements Message ----------------------------------------------

  inline HttpServerConfig* New() const { return New(NULL); }

  HttpServerConfig* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HttpServerConfig& from);
  void MergeFrom(const HttpServerConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HttpServerConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 port = 1;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 1;
  inline ::google::protobuf::int32 port() const;
  inline void set_port(::google::protobuf::int32 value);

  // optional int32 backlog = 2;
  inline bool has_backlog() const;
  inline void clear_backlog();
  static const int kBacklogFieldNumber = 2;
  inline ::google::protobuf::int32 backlog() const;
  inline void set_backlog(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pjcore.HttpServerConfig)
 private:
  inline void set_has_port();
  inline void clear_has_port();
  inline void set_has_backlog();
  inline void clear_has_backlog();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 port_;
  ::google::protobuf::int32 backlog_;
  friend void  protobuf_AddDesc_pjcore_2fhttp_2eproto();
  friend void protobuf_AssignDesc_pjcore_2fhttp_2eproto();
  friend void protobuf_ShutdownFile_pjcore_2fhttp_2eproto();

  void InitAsDefaultInstance();
  static HttpServerConfig* default_instance_;
};
// -------------------------------------------------------------------

class HttpClientConfig : public ::google::protobuf::Message {
 public:
  HttpClientConfig();
  virtual ~HttpClientConfig();

  HttpClientConfig(const HttpClientConfig& from);

  inline HttpClientConfig& operator=(const HttpClientConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HttpClientConfig& default_instance();

  void Swap(HttpClientConfig* other);

  // implements Message ----------------------------------------------

  inline HttpClientConfig* New() const { return New(NULL); }

  HttpClientConfig* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HttpClientConfig& from);
  void MergeFrom(const HttpClientConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HttpClientConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pjcore.HttpClientConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_pjcore_2fhttp_2eproto();
  friend void protobuf_AssignDesc_pjcore_2fhttp_2eproto();
  friend void protobuf_ShutdownFile_pjcore_2fhttp_2eproto();

  void InitAsDefaultInstance();
  static HttpClientConfig* default_instance_;
};
// ===================================================================


// ===================================================================

// UrlParameter

// optional string name = 1;
inline bool UrlParameter::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UrlParameter::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UrlParameter::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UrlParameter::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& UrlParameter::name() const {
  // @@protoc_insertion_point(field_get:pjcore.UrlParameter.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UrlParameter::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pjcore.UrlParameter.name)
}
inline void UrlParameter::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pjcore.UrlParameter.name)
}
inline void UrlParameter::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pjcore.UrlParameter.name)
}
inline ::std::string* UrlParameter::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:pjcore.UrlParameter.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UrlParameter::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UrlParameter::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pjcore.UrlParameter.name)
}

// optional string value = 2;
inline bool UrlParameter::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UrlParameter::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UrlParameter::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UrlParameter::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& UrlParameter::value() const {
  // @@protoc_insertion_point(field_get:pjcore.UrlParameter.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UrlParameter::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pjcore.UrlParameter.value)
}
inline void UrlParameter::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pjcore.UrlParameter.value)
}
inline void UrlParameter::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pjcore.UrlParameter.value)
}
inline ::std::string* UrlParameter::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:pjcore.UrlParameter.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UrlParameter::release_value() {
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UrlParameter::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:pjcore.UrlParameter.value)
}

// -------------------------------------------------------------------

// ParsedUrl

// optional string scheme = 1;
inline bool ParsedUrl::has_scheme() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ParsedUrl::set_has_scheme() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ParsedUrl::clear_has_scheme() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ParsedUrl::clear_scheme() {
  scheme_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_scheme();
}
inline const ::std::string& ParsedUrl::scheme() const {
  // @@protoc_insertion_point(field_get:pjcore.ParsedUrl.scheme)
  return scheme_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParsedUrl::set_scheme(const ::std::string& value) {
  set_has_scheme();
  scheme_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pjcore.ParsedUrl.scheme)
}
inline void ParsedUrl::set_scheme(const char* value) {
  set_has_scheme();
  scheme_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pjcore.ParsedUrl.scheme)
}
inline void ParsedUrl::set_scheme(const char* value, size_t size) {
  set_has_scheme();
  scheme_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pjcore.ParsedUrl.scheme)
}
inline ::std::string* ParsedUrl::mutable_scheme() {
  set_has_scheme();
  // @@protoc_insertion_point(field_mutable:pjcore.ParsedUrl.scheme)
  return scheme_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ParsedUrl::release_scheme() {
  clear_has_scheme();
  return scheme_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParsedUrl::set_allocated_scheme(::std::string* scheme) {
  if (scheme != NULL) {
    set_has_scheme();
  } else {
    clear_has_scheme();
  }
  scheme_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scheme);
  // @@protoc_insertion_point(field_set_allocated:pjcore.ParsedUrl.scheme)
}

// optional string userinfo = 2;
inline bool ParsedUrl::has_userinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ParsedUrl::set_has_userinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ParsedUrl::clear_has_userinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ParsedUrl::clear_userinfo() {
  userinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_userinfo();
}
inline const ::std::string& ParsedUrl::userinfo() const {
  // @@protoc_insertion_point(field_get:pjcore.ParsedUrl.userinfo)
  return userinfo_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParsedUrl::set_userinfo(const ::std::string& value) {
  set_has_userinfo();
  userinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pjcore.ParsedUrl.userinfo)
}
inline void ParsedUrl::set_userinfo(const char* value) {
  set_has_userinfo();
  userinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pjcore.ParsedUrl.userinfo)
}
inline void ParsedUrl::set_userinfo(const char* value, size_t size) {
  set_has_userinfo();
  userinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pjcore.ParsedUrl.userinfo)
}
inline ::std::string* ParsedUrl::mutable_userinfo() {
  set_has_userinfo();
  // @@protoc_insertion_point(field_mutable:pjcore.ParsedUrl.userinfo)
  return userinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ParsedUrl::release_userinfo() {
  clear_has_userinfo();
  return userinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParsedUrl::set_allocated_userinfo(::std::string* userinfo) {
  if (userinfo != NULL) {
    set_has_userinfo();
  } else {
    clear_has_userinfo();
  }
  userinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userinfo);
  // @@protoc_insertion_point(field_set_allocated:pjcore.ParsedUrl.userinfo)
}

// optional string host = 3;
inline bool ParsedUrl::has_host() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ParsedUrl::set_has_host() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ParsedUrl::clear_has_host() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ParsedUrl::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host();
}
inline const ::std::string& ParsedUrl::host() const {
  // @@protoc_insertion_point(field_get:pjcore.ParsedUrl.host)
  return host_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParsedUrl::set_host(const ::std::string& value) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pjcore.ParsedUrl.host)
}
inline void ParsedUrl::set_host(const char* value) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pjcore.ParsedUrl.host)
}
inline void ParsedUrl::set_host(const char* value, size_t size) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pjcore.ParsedUrl.host)
}
inline ::std::string* ParsedUrl::mutable_host() {
  set_has_host();
  // @@protoc_insertion_point(field_mutable:pjcore.ParsedUrl.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ParsedUrl::release_host() {
  clear_has_host();
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParsedUrl::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    set_has_host();
  } else {
    clear_has_host();
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:pjcore.ParsedUrl.host)
}

// optional int32 port = 4;
inline bool ParsedUrl::has_port() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ParsedUrl::set_has_port() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ParsedUrl::clear_has_port() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ParsedUrl::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 ParsedUrl::port() const {
  // @@protoc_insertion_point(field_get:pjcore.ParsedUrl.port)
  return port_;
}
inline void ParsedUrl::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:pjcore.ParsedUrl.port)
}

// optional string path = 5;
inline bool ParsedUrl::has_path() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ParsedUrl::set_has_path() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ParsedUrl::clear_has_path() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ParsedUrl::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_path();
}
inline const ::std::string& ParsedUrl::path() const {
  // @@protoc_insertion_point(field_get:pjcore.ParsedUrl.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParsedUrl::set_path(const ::std::string& value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pjcore.ParsedUrl.path)
}
inline void ParsedUrl::set_path(const char* value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pjcore.ParsedUrl.path)
}
inline void ParsedUrl::set_path(const char* value, size_t size) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pjcore.ParsedUrl.path)
}
inline ::std::string* ParsedUrl::mutable_path() {
  set_has_path();
  // @@protoc_insertion_point(field_mutable:pjcore.ParsedUrl.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ParsedUrl::release_path() {
  clear_has_path();
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParsedUrl::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    set_has_path();
  } else {
    clear_has_path();
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:pjcore.ParsedUrl.path)
}

// optional string query = 6;
inline bool ParsedUrl::has_query() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ParsedUrl::set_has_query() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ParsedUrl::clear_has_query() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ParsedUrl::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_query();
}
inline const ::std::string& ParsedUrl::query() const {
  // @@protoc_insertion_point(field_get:pjcore.ParsedUrl.query)
  return query_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParsedUrl::set_query(const ::std::string& value) {
  set_has_query();
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pjcore.ParsedUrl.query)
}
inline void ParsedUrl::set_query(const char* value) {
  set_has_query();
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pjcore.ParsedUrl.query)
}
inline void ParsedUrl::set_query(const char* value, size_t size) {
  set_has_query();
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pjcore.ParsedUrl.query)
}
inline ::std::string* ParsedUrl::mutable_query() {
  set_has_query();
  // @@protoc_insertion_point(field_mutable:pjcore.ParsedUrl.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ParsedUrl::release_query() {
  clear_has_query();
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParsedUrl::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    set_has_query();
  } else {
    clear_has_query();
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:pjcore.ParsedUrl.query)
}

// optional string fragment = 7;
inline bool ParsedUrl::has_fragment() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ParsedUrl::set_has_fragment() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ParsedUrl::clear_has_fragment() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ParsedUrl::clear_fragment() {
  fragment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fragment();
}
inline const ::std::string& ParsedUrl::fragment() const {
  // @@protoc_insertion_point(field_get:pjcore.ParsedUrl.fragment)
  return fragment_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParsedUrl::set_fragment(const ::std::string& value) {
  set_has_fragment();
  fragment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pjcore.ParsedUrl.fragment)
}
inline void ParsedUrl::set_fragment(const char* value) {
  set_has_fragment();
  fragment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pjcore.ParsedUrl.fragment)
}
inline void ParsedUrl::set_fragment(const char* value, size_t size) {
  set_has_fragment();
  fragment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pjcore.ParsedUrl.fragment)
}
inline ::std::string* ParsedUrl::mutable_fragment() {
  set_has_fragment();
  // @@protoc_insertion_point(field_mutable:pjcore.ParsedUrl.fragment)
  return fragment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ParsedUrl::release_fragment() {
  clear_has_fragment();
  return fragment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParsedUrl::set_allocated_fragment(::std::string* fragment) {
  if (fragment != NULL) {
    set_has_fragment();
  } else {
    clear_has_fragment();
  }
  fragment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fragment);
  // @@protoc_insertion_point(field_set_allocated:pjcore.ParsedUrl.fragment)
}

// repeated .pjcore.UrlParameter parameters = 8;
inline int ParsedUrl::parameters_size() const {
  return parameters_.size();
}
inline void ParsedUrl::clear_parameters() {
  parameters_.Clear();
}
inline const ::pjcore::UrlParameter& ParsedUrl::parameters(int index) const {
  // @@protoc_insertion_point(field_get:pjcore.ParsedUrl.parameters)
  return parameters_.Get(index);
}
inline ::pjcore::UrlParameter* ParsedUrl::mutable_parameters(int index) {
  // @@protoc_insertion_point(field_mutable:pjcore.ParsedUrl.parameters)
  return parameters_.Mutable(index);
}
inline ::pjcore::UrlParameter* ParsedUrl::add_parameters() {
  // @@protoc_insertion_point(field_add:pjcore.ParsedUrl.parameters)
  return parameters_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pjcore::UrlParameter >&
ParsedUrl::parameters() const {
  // @@protoc_insertion_point(field_list:pjcore.ParsedUrl.parameters)
  return parameters_;
}
inline ::google::protobuf::RepeatedPtrField< ::pjcore::UrlParameter >*
ParsedUrl::mutable_parameters() {
  // @@protoc_insertion_point(field_mutable_list:pjcore.ParsedUrl.parameters)
  return &parameters_;
}

// -------------------------------------------------------------------

// NodeAndServiceName

// optional string node_name = 1;
inline bool NodeAndServiceName::has_node_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NodeAndServiceName::set_has_node_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NodeAndServiceName::clear_has_node_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NodeAndServiceName::clear_node_name() {
  node_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_node_name();
}
inline const ::std::string& NodeAndServiceName::node_name() const {
  // @@protoc_insertion_point(field_get:pjcore.NodeAndServiceName.node_name)
  return node_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NodeAndServiceName::set_node_name(const ::std::string& value) {
  set_has_node_name();
  node_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pjcore.NodeAndServiceName.node_name)
}
inline void NodeAndServiceName::set_node_name(const char* value) {
  set_has_node_name();
  node_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pjcore.NodeAndServiceName.node_name)
}
inline void NodeAndServiceName::set_node_name(const char* value, size_t size) {
  set_has_node_name();
  node_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pjcore.NodeAndServiceName.node_name)
}
inline ::std::string* NodeAndServiceName::mutable_node_name() {
  set_has_node_name();
  // @@protoc_insertion_point(field_mutable:pjcore.NodeAndServiceName.node_name)
  return node_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NodeAndServiceName::release_node_name() {
  clear_has_node_name();
  return node_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NodeAndServiceName::set_allocated_node_name(::std::string* node_name) {
  if (node_name != NULL) {
    set_has_node_name();
  } else {
    clear_has_node_name();
  }
  node_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), node_name);
  // @@protoc_insertion_point(field_set_allocated:pjcore.NodeAndServiceName.node_name)
}

// optional string service_name = 2;
inline bool NodeAndServiceName::has_service_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NodeAndServiceName::set_has_service_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NodeAndServiceName::clear_has_service_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NodeAndServiceName::clear_service_name() {
  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_service_name();
}
inline const ::std::string& NodeAndServiceName::service_name() const {
  // @@protoc_insertion_point(field_get:pjcore.NodeAndServiceName.service_name)
  return service_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NodeAndServiceName::set_service_name(const ::std::string& value) {
  set_has_service_name();
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pjcore.NodeAndServiceName.service_name)
}
inline void NodeAndServiceName::set_service_name(const char* value) {
  set_has_service_name();
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pjcore.NodeAndServiceName.service_name)
}
inline void NodeAndServiceName::set_service_name(const char* value, size_t size) {
  set_has_service_name();
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pjcore.NodeAndServiceName.service_name)
}
inline ::std::string* NodeAndServiceName::mutable_service_name() {
  set_has_service_name();
  // @@protoc_insertion_point(field_mutable:pjcore.NodeAndServiceName.service_name)
  return service_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NodeAndServiceName::release_service_name() {
  clear_has_service_name();
  return service_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NodeAndServiceName::set_allocated_service_name(::std::string* service_name) {
  if (service_name != NULL) {
    set_has_service_name();
  } else {
    clear_has_service_name();
  }
  service_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service_name);
  // @@protoc_insertion_point(field_set_allocated:pjcore.NodeAndServiceName.service_name)
}

// -------------------------------------------------------------------

// HttpVersion

// optional int32 major = 1;
inline bool HttpVersion::has_major() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HttpVersion::set_has_major() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HttpVersion::clear_has_major() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HttpVersion::clear_major() {
  major_ = 0;
  clear_has_major();
}
inline ::google::protobuf::int32 HttpVersion::major() const {
  // @@protoc_insertion_point(field_get:pjcore.HttpVersion.major)
  return major_;
}
inline void HttpVersion::set_major(::google::protobuf::int32 value) {
  set_has_major();
  major_ = value;
  // @@protoc_insertion_point(field_set:pjcore.HttpVersion.major)
}

// optional int32 minor = 2;
inline bool HttpVersion::has_minor() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HttpVersion::set_has_minor() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HttpVersion::clear_has_minor() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HttpVersion::clear_minor() {
  minor_ = 0;
  clear_has_minor();
}
inline ::google::protobuf::int32 HttpVersion::minor() const {
  // @@protoc_insertion_point(field_get:pjcore.HttpVersion.minor)
  return minor_;
}
inline void HttpVersion::set_minor(::google::protobuf::int32 value) {
  set_has_minor();
  minor_ = value;
  // @@protoc_insertion_point(field_set:pjcore.HttpVersion.minor)
}

// -------------------------------------------------------------------

// HttpHeader

// optional string name = 1;
inline bool HttpHeader::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HttpHeader::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HttpHeader::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HttpHeader::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& HttpHeader::name() const {
  // @@protoc_insertion_point(field_get:pjcore.HttpHeader.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpHeader::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pjcore.HttpHeader.name)
}
inline void HttpHeader::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pjcore.HttpHeader.name)
}
inline void HttpHeader::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pjcore.HttpHeader.name)
}
inline ::std::string* HttpHeader::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:pjcore.HttpHeader.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HttpHeader::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpHeader::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pjcore.HttpHeader.name)
}

// optional string value = 2;
inline bool HttpHeader::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HttpHeader::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HttpHeader::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HttpHeader::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& HttpHeader::value() const {
  // @@protoc_insertion_point(field_get:pjcore.HttpHeader.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpHeader::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pjcore.HttpHeader.value)
}
inline void HttpHeader::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pjcore.HttpHeader.value)
}
inline void HttpHeader::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pjcore.HttpHeader.value)
}
inline ::std::string* HttpHeader::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:pjcore.HttpHeader.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HttpHeader::release_value() {
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpHeader::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:pjcore.HttpHeader.value)
}

// -------------------------------------------------------------------

// HttpRequest

// optional int32 method = 1;
inline bool HttpRequest::has_method() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HttpRequest::set_has_method() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HttpRequest::clear_has_method() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HttpRequest::clear_method() {
  method_ = 0;
  clear_has_method();
}
inline ::google::protobuf::int32 HttpRequest::method() const {
  // @@protoc_insertion_point(field_get:pjcore.HttpRequest.method)
  return method_;
}
inline void HttpRequest::set_method(::google::protobuf::int32 value) {
  set_has_method();
  method_ = value;
  // @@protoc_insertion_point(field_set:pjcore.HttpRequest.method)
}

// optional string url = 2;
inline bool HttpRequest::has_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HttpRequest::set_has_url() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HttpRequest::clear_has_url() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HttpRequest::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& HttpRequest::url() const {
  // @@protoc_insertion_point(field_get:pjcore.HttpRequest.url)
  return url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpRequest::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pjcore.HttpRequest.url)
}
inline void HttpRequest::set_url(const char* value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pjcore.HttpRequest.url)
}
inline void HttpRequest::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pjcore.HttpRequest.url)
}
inline ::std::string* HttpRequest::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:pjcore.HttpRequest.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HttpRequest::release_url() {
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpRequest::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:pjcore.HttpRequest.url)
}

// optional .pjcore.ParsedUrl parsed_url = 3;
inline bool HttpRequest::has_parsed_url() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HttpRequest::set_has_parsed_url() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HttpRequest::clear_has_parsed_url() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HttpRequest::clear_parsed_url() {
  if (parsed_url_ != NULL) parsed_url_->::pjcore::ParsedUrl::Clear();
  clear_has_parsed_url();
}
inline const ::pjcore::ParsedUrl& HttpRequest::parsed_url() const {
  // @@protoc_insertion_point(field_get:pjcore.HttpRequest.parsed_url)
  return parsed_url_ != NULL ? *parsed_url_ : *default_instance_->parsed_url_;
}
inline ::pjcore::ParsedUrl* HttpRequest::mutable_parsed_url() {
  set_has_parsed_url();
  if (parsed_url_ == NULL) {
    parsed_url_ = new ::pjcore::ParsedUrl;
  }
  // @@protoc_insertion_point(field_mutable:pjcore.HttpRequest.parsed_url)
  return parsed_url_;
}
inline ::pjcore::ParsedUrl* HttpRequest::release_parsed_url() {
  clear_has_parsed_url();
  ::pjcore::ParsedUrl* temp = parsed_url_;
  parsed_url_ = NULL;
  return temp;
}
inline void HttpRequest::set_allocated_parsed_url(::pjcore::ParsedUrl* parsed_url) {
  delete parsed_url_;
  parsed_url_ = parsed_url;
  if (parsed_url) {
    set_has_parsed_url();
  } else {
    clear_has_parsed_url();
  }
  // @@protoc_insertion_point(field_set_allocated:pjcore.HttpRequest.parsed_url)
}

// optional .pjcore.HttpVersion http_version = 4;
inline bool HttpRequest::has_http_version() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HttpRequest::set_has_http_version() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HttpRequest::clear_has_http_version() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HttpRequest::clear_http_version() {
  if (http_version_ != NULL) http_version_->::pjcore::HttpVersion::Clear();
  clear_has_http_version();
}
inline const ::pjcore::HttpVersion& HttpRequest::http_version() const {
  // @@protoc_insertion_point(field_get:pjcore.HttpRequest.http_version)
  return http_version_ != NULL ? *http_version_ : *default_instance_->http_version_;
}
inline ::pjcore::HttpVersion* HttpRequest::mutable_http_version() {
  set_has_http_version();
  if (http_version_ == NULL) {
    http_version_ = new ::pjcore::HttpVersion;
  }
  // @@protoc_insertion_point(field_mutable:pjcore.HttpRequest.http_version)
  return http_version_;
}
inline ::pjcore::HttpVersion* HttpRequest::release_http_version() {
  clear_has_http_version();
  ::pjcore::HttpVersion* temp = http_version_;
  http_version_ = NULL;
  return temp;
}
inline void HttpRequest::set_allocated_http_version(::pjcore::HttpVersion* http_version) {
  delete http_version_;
  http_version_ = http_version;
  if (http_version) {
    set_has_http_version();
  } else {
    clear_has_http_version();
  }
  // @@protoc_insertion_point(field_set_allocated:pjcore.HttpRequest.http_version)
}

// repeated .pjcore.HttpHeader headers = 5;
inline int HttpRequest::headers_size() const {
  return headers_.size();
}
inline void HttpRequest::clear_headers() {
  headers_.Clear();
}
inline const ::pjcore::HttpHeader& HttpRequest::headers(int index) const {
  // @@protoc_insertion_point(field_get:pjcore.HttpRequest.headers)
  return headers_.Get(index);
}
inline ::pjcore::HttpHeader* HttpRequest::mutable_headers(int index) {
  // @@protoc_insertion_point(field_mutable:pjcore.HttpRequest.headers)
  return headers_.Mutable(index);
}
inline ::pjcore::HttpHeader* HttpRequest::add_headers() {
  // @@protoc_insertion_point(field_add:pjcore.HttpRequest.headers)
  return headers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pjcore::HttpHeader >&
HttpRequest::headers() const {
  // @@protoc_insertion_point(field_list:pjcore.HttpRequest.headers)
  return headers_;
}
inline ::google::protobuf::RepeatedPtrField< ::pjcore::HttpHeader >*
HttpRequest::mutable_headers() {
  // @@protoc_insertion_point(field_mutable_list:pjcore.HttpRequest.headers)
  return &headers_;
}

// optional bytes content = 6;
inline bool HttpRequest::has_content() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HttpRequest::set_has_content() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HttpRequest::clear_has_content() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HttpRequest::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& HttpRequest::content() const {
  // @@protoc_insertion_point(field_get:pjcore.HttpRequest.content)
  return content_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpRequest::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pjcore.HttpRequest.content)
}
inline void HttpRequest::set_content(const char* value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pjcore.HttpRequest.content)
}
inline void HttpRequest::set_content(const void* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pjcore.HttpRequest.content)
}
inline ::std::string* HttpRequest::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:pjcore.HttpRequest.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HttpRequest::release_content() {
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpRequest::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:pjcore.HttpRequest.content)
}

// optional bool should_keep_alive = 7;
inline bool HttpRequest::has_should_keep_alive() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void HttpRequest::set_has_should_keep_alive() {
  _has_bits_[0] |= 0x00000040u;
}
inline void HttpRequest::clear_has_should_keep_alive() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void HttpRequest::clear_should_keep_alive() {
  should_keep_alive_ = false;
  clear_has_should_keep_alive();
}
inline bool HttpRequest::should_keep_alive() const {
  // @@protoc_insertion_point(field_get:pjcore.HttpRequest.should_keep_alive)
  return should_keep_alive_;
}
inline void HttpRequest::set_should_keep_alive(bool value) {
  set_has_should_keep_alive();
  should_keep_alive_ = value;
  // @@protoc_insertion_point(field_set:pjcore.HttpRequest.should_keep_alive)
}

// -------------------------------------------------------------------

// HttpResponse

// optional .pjcore.HttpVersion http_version = 1;
inline bool HttpResponse::has_http_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HttpResponse::set_has_http_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HttpResponse::clear_has_http_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HttpResponse::clear_http_version() {
  if (http_version_ != NULL) http_version_->::pjcore::HttpVersion::Clear();
  clear_has_http_version();
}
inline const ::pjcore::HttpVersion& HttpResponse::http_version() const {
  // @@protoc_insertion_point(field_get:pjcore.HttpResponse.http_version)
  return http_version_ != NULL ? *http_version_ : *default_instance_->http_version_;
}
inline ::pjcore::HttpVersion* HttpResponse::mutable_http_version() {
  set_has_http_version();
  if (http_version_ == NULL) {
    http_version_ = new ::pjcore::HttpVersion;
  }
  // @@protoc_insertion_point(field_mutable:pjcore.HttpResponse.http_version)
  return http_version_;
}
inline ::pjcore::HttpVersion* HttpResponse::release_http_version() {
  clear_has_http_version();
  ::pjcore::HttpVersion* temp = http_version_;
  http_version_ = NULL;
  return temp;
}
inline void HttpResponse::set_allocated_http_version(::pjcore::HttpVersion* http_version) {
  delete http_version_;
  http_version_ = http_version;
  if (http_version) {
    set_has_http_version();
  } else {
    clear_has_http_version();
  }
  // @@protoc_insertion_point(field_set_allocated:pjcore.HttpResponse.http_version)
}

// optional .pjcore.HttpStatusCode status_code = 2;
inline bool HttpResponse::has_status_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HttpResponse::set_has_status_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HttpResponse::clear_has_status_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HttpResponse::clear_status_code() {
  status_code_ = 100;
  clear_has_status_code();
}
inline ::pjcore::HttpStatusCode HttpResponse::status_code() const {
  // @@protoc_insertion_point(field_get:pjcore.HttpResponse.status_code)
  return static_cast< ::pjcore::HttpStatusCode >(status_code_);
}
inline void HttpResponse::set_status_code(::pjcore::HttpStatusCode value) {
  assert(::pjcore::HttpStatusCode_IsValid(value));
  set_has_status_code();
  status_code_ = value;
  // @@protoc_insertion_point(field_set:pjcore.HttpResponse.status_code)
}

// repeated .pjcore.HttpHeader headers = 3;
inline int HttpResponse::headers_size() const {
  return headers_.size();
}
inline void HttpResponse::clear_headers() {
  headers_.Clear();
}
inline const ::pjcore::HttpHeader& HttpResponse::headers(int index) const {
  // @@protoc_insertion_point(field_get:pjcore.HttpResponse.headers)
  return headers_.Get(index);
}
inline ::pjcore::HttpHeader* HttpResponse::mutable_headers(int index) {
  // @@protoc_insertion_point(field_mutable:pjcore.HttpResponse.headers)
  return headers_.Mutable(index);
}
inline ::pjcore::HttpHeader* HttpResponse::add_headers() {
  // @@protoc_insertion_point(field_add:pjcore.HttpResponse.headers)
  return headers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pjcore::HttpHeader >&
HttpResponse::headers() const {
  // @@protoc_insertion_point(field_list:pjcore.HttpResponse.headers)
  return headers_;
}
inline ::google::protobuf::RepeatedPtrField< ::pjcore::HttpHeader >*
HttpResponse::mutable_headers() {
  // @@protoc_insertion_point(field_mutable_list:pjcore.HttpResponse.headers)
  return &headers_;
}

// optional bytes content = 4;
inline bool HttpResponse::has_content() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HttpResponse::set_has_content() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HttpResponse::clear_has_content() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HttpResponse::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& HttpResponse::content() const {
  // @@protoc_insertion_point(field_get:pjcore.HttpResponse.content)
  return content_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpResponse::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pjcore.HttpResponse.content)
}
inline void HttpResponse::set_content(const char* value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pjcore.HttpResponse.content)
}
inline void HttpResponse::set_content(const void* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pjcore.HttpResponse.content)
}
inline ::std::string* HttpResponse::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:pjcore.HttpResponse.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HttpResponse::release_content() {
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpResponse::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:pjcore.HttpResponse.content)
}

// optional bool should_keep_alive = 5;
inline bool HttpResponse::has_should_keep_alive() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HttpResponse::set_has_should_keep_alive() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HttpResponse::clear_has_should_keep_alive() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HttpResponse::clear_should_keep_alive() {
  should_keep_alive_ = false;
  clear_has_should_keep_alive();
}
inline bool HttpResponse::should_keep_alive() const {
  // @@protoc_insertion_point(field_get:pjcore.HttpResponse.should_keep_alive)
  return should_keep_alive_;
}
inline void HttpResponse::set_should_keep_alive(bool value) {
  set_has_should_keep_alive();
  should_keep_alive_ = value;
  // @@protoc_insertion_point(field_set:pjcore.HttpResponse.should_keep_alive)
}

// -------------------------------------------------------------------

// HttpServerConfig

// optional int32 port = 1;
inline bool HttpServerConfig::has_port() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HttpServerConfig::set_has_port() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HttpServerConfig::clear_has_port() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HttpServerConfig::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 HttpServerConfig::port() const {
  // @@protoc_insertion_point(field_get:pjcore.HttpServerConfig.port)
  return port_;
}
inline void HttpServerConfig::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:pjcore.HttpServerConfig.port)
}

// optional int32 backlog = 2;
inline bool HttpServerConfig::has_backlog() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HttpServerConfig::set_has_backlog() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HttpServerConfig::clear_has_backlog() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HttpServerConfig::clear_backlog() {
  backlog_ = 0;
  clear_has_backlog();
}
inline ::google::protobuf::int32 HttpServerConfig::backlog() const {
  // @@protoc_insertion_point(field_get:pjcore.HttpServerConfig.backlog)
  return backlog_;
}
inline void HttpServerConfig::set_backlog(::google::protobuf::int32 value) {
  set_has_backlog();
  backlog_ = value;
  // @@protoc_insertion_point(field_set:pjcore.HttpServerConfig.backlog)
}

// -------------------------------------------------------------------

// HttpClientConfig


// @@protoc_insertion_point(namespace_scope)

}  // namespace pjcore

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::pjcore::HttpParserType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pjcore::HttpParserType>() {
  return ::pjcore::HttpParserType_descriptor();
}
template <> struct is_proto_enum< ::pjcore::HttpServerTransactionState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pjcore::HttpServerTransactionState>() {
  return ::pjcore::HttpServerTransactionState_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_pjcore_2fhttp_2eproto__INCLUDED
