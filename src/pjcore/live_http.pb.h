// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pjcore/live_http.proto

#ifndef PROTOBUF_pjcore_2flive_5fhttp_2eproto__INCLUDED
#define PROTOBUF_pjcore_2flive_5fhttp_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "pjcore/error.pb.h"
#include "pjcore/http.pb.h"
#include "pjcore/live.pb.h"
#include "pjcore/live_addr_info.pb.h"
#include "pjcore/live_uv.pb.h"
// @@protoc_insertion_point(includes)

namespace pjcore {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_pjcore_2flive_5fhttp_2eproto();
void protobuf_AssignDesc_pjcore_2flive_5fhttp_2eproto();
void protobuf_ShutdownFile_pjcore_2flive_5fhttp_2eproto();

class LiveHttpRequest;
class LiveHttpResponse;
class LiveHttpParser;
class LiveHttpParserPlusPlus;
class LiveHttpServerTransaction;
class LiveHttpServerConnection;
class LiveHttpServerCore;
class LiveHttpServer;
class LiveHttpClientTransaction;
class LiveHttpClientConnection;
class LiveHttpClientConnectionGroup;
class LiveHttpClientCore;
class LiveHttpClient;
class LiveHttpCallbackHandler;
class LiveHttpPathHandler;
class LiveHttpPathHandler_PathHandlerEntry;

// ===================================================================

class LiveHttpRequest : public ::google::protobuf::Message {
 public:
  LiveHttpRequest();
  virtual ~LiveHttpRequest();

  LiveHttpRequest(const LiveHttpRequest& from);

  inline LiveHttpRequest& operator=(const LiveHttpRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LiveHttpRequest& default_instance();

  void Swap(LiveHttpRequest* other);

  // implements Message ----------------------------------------------

  inline LiveHttpRequest* New() const { return New(NULL); }

  LiveHttpRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LiveHttpRequest& from);
  void MergeFrom(const LiveHttpRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LiveHttpRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 ptr = 1;
  inline bool has_ptr() const;
  inline void clear_ptr();
  static const int kPtrFieldNumber = 1;
  inline ::google::protobuf::uint64 ptr() const;
  inline void set_ptr(::google::protobuf::uint64 value);

  // optional int32 method = 2;
  inline bool has_method() const;
  inline void clear_method();
  static const int kMethodFieldNumber = 2;
  inline ::google::protobuf::int32 method() const;
  inline void set_method(::google::protobuf::int32 value);

  // optional string method_str = 3;
  inline bool has_method_str() const;
  inline void clear_method_str();
  static const int kMethodStrFieldNumber = 3;
  inline const ::std::string& method_str() const;
  inline void set_method_str(const ::std::string& value);
  inline void set_method_str(const char* value);
  inline void set_method_str(const char* value, size_t size);
  inline ::std::string* mutable_method_str();
  inline ::std::string* release_method_str();
  inline void set_allocated_method_str(::std::string* method_str);

  // optional string url = 4;
  inline bool has_url() const;
  inline void clear_url();
  static const int kUrlFieldNumber = 4;
  inline const ::std::string& url() const;
  inline void set_url(const ::std::string& value);
  inline void set_url(const char* value);
  inline void set_url(const char* value, size_t size);
  inline ::std::string* mutable_url();
  inline ::std::string* release_url();
  inline void set_allocated_url(::std::string* url);

  // optional .pjcore.ParsedUrl parsed_url = 5;
  inline bool has_parsed_url() const;
  inline void clear_parsed_url();
  static const int kParsedUrlFieldNumber = 5;
  inline const ::pjcore::ParsedUrl& parsed_url() const;
  inline ::pjcore::ParsedUrl* mutable_parsed_url();
  inline ::pjcore::ParsedUrl* release_parsed_url();
  inline void set_allocated_parsed_url(::pjcore::ParsedUrl* parsed_url);

  // optional .pjcore.HttpVersion http_version = 6;
  inline bool has_http_version() const;
  inline void clear_http_version();
  static const int kHttpVersionFieldNumber = 6;
  inline const ::pjcore::HttpVersion& http_version() const;
  inline ::pjcore::HttpVersion* mutable_http_version();
  inline ::pjcore::HttpVersion* release_http_version();
  inline void set_allocated_http_version(::pjcore::HttpVersion* http_version);

  // repeated .pjcore.HttpHeader headers = 7;
  inline int headers_size() const;
  inline void clear_headers();
  static const int kHeadersFieldNumber = 7;
  inline const ::pjcore::HttpHeader& headers(int index) const;
  inline ::pjcore::HttpHeader* mutable_headers(int index);
  inline ::pjcore::HttpHeader* add_headers();
  inline const ::google::protobuf::RepeatedPtrField< ::pjcore::HttpHeader >&
      headers() const;
  inline ::google::protobuf::RepeatedPtrField< ::pjcore::HttpHeader >*
      mutable_headers();

  // optional .pjcore.LiveContent content = 8;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 8;
  inline const ::pjcore::LiveContent& content() const;
  inline ::pjcore::LiveContent* mutable_content();
  inline ::pjcore::LiveContent* release_content();
  inline void set_allocated_content(::pjcore::LiveContent* content);

  // @@protoc_insertion_point(class_scope:pjcore.LiveHttpRequest)
 private:
  inline void set_has_ptr();
  inline void clear_has_ptr();
  inline void set_has_method();
  inline void clear_has_method();
  inline void set_has_method_str();
  inline void clear_has_method_str();
  inline void set_has_url();
  inline void clear_has_url();
  inline void set_has_parsed_url();
  inline void clear_has_parsed_url();
  inline void set_has_http_version();
  inline void clear_has_http_version();
  inline void set_has_content();
  inline void clear_has_content();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 ptr_;
  ::google::protobuf::internal::ArenaStringPtr method_str_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::pjcore::ParsedUrl* parsed_url_;
  ::pjcore::HttpVersion* http_version_;
  ::google::protobuf::RepeatedPtrField< ::pjcore::HttpHeader > headers_;
  ::pjcore::LiveContent* content_;
  ::google::protobuf::int32 method_;
  friend void  protobuf_AddDesc_pjcore_2flive_5fhttp_2eproto();
  friend void protobuf_AssignDesc_pjcore_2flive_5fhttp_2eproto();
  friend void protobuf_ShutdownFile_pjcore_2flive_5fhttp_2eproto();

  void InitAsDefaultInstance();
  static LiveHttpRequest* default_instance_;
};
// -------------------------------------------------------------------

class LiveHttpResponse : public ::google::protobuf::Message {
 public:
  LiveHttpResponse();
  virtual ~LiveHttpResponse();

  LiveHttpResponse(const LiveHttpResponse& from);

  inline LiveHttpResponse& operator=(const LiveHttpResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LiveHttpResponse& default_instance();

  void Swap(LiveHttpResponse* other);

  // implements Message ----------------------------------------------

  inline LiveHttpResponse* New() const { return New(NULL); }

  LiveHttpResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LiveHttpResponse& from);
  void MergeFrom(const LiveHttpResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LiveHttpResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 ptr = 1;
  inline bool has_ptr() const;
  inline void clear_ptr();
  static const int kPtrFieldNumber = 1;
  inline ::google::protobuf::uint64 ptr() const;
  inline void set_ptr(::google::protobuf::uint64 value);

  // optional .pjcore.HttpVersion http_version = 2;
  inline bool has_http_version() const;
  inline void clear_http_version();
  static const int kHttpVersionFieldNumber = 2;
  inline const ::pjcore::HttpVersion& http_version() const;
  inline ::pjcore::HttpVersion* mutable_http_version();
  inline ::pjcore::HttpVersion* release_http_version();
  inline void set_allocated_http_version(::pjcore::HttpVersion* http_version);

  // optional .pjcore.HttpStatusCode status_code = 3;
  inline bool has_status_code() const;
  inline void clear_status_code();
  static const int kStatusCodeFieldNumber = 3;
  inline ::pjcore::HttpStatusCode status_code() const;
  inline void set_status_code(::pjcore::HttpStatusCode value);

  // repeated .pjcore.HttpHeader headers = 4;
  inline int headers_size() const;
  inline void clear_headers();
  static const int kHeadersFieldNumber = 4;
  inline const ::pjcore::HttpHeader& headers(int index) const;
  inline ::pjcore::HttpHeader* mutable_headers(int index);
  inline ::pjcore::HttpHeader* add_headers();
  inline const ::google::protobuf::RepeatedPtrField< ::pjcore::HttpHeader >&
      headers() const;
  inline ::google::protobuf::RepeatedPtrField< ::pjcore::HttpHeader >*
      mutable_headers();

  // optional .pjcore.LiveContent content = 5;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 5;
  inline const ::pjcore::LiveContent& content() const;
  inline ::pjcore::LiveContent* mutable_content();
  inline ::pjcore::LiveContent* release_content();
  inline void set_allocated_content(::pjcore::LiveContent* content);

  // @@protoc_insertion_point(class_scope:pjcore.LiveHttpResponse)
 private:
  inline void set_has_ptr();
  inline void clear_has_ptr();
  inline void set_has_http_version();
  inline void clear_has_http_version();
  inline void set_has_status_code();
  inline void clear_has_status_code();
  inline void set_has_content();
  inline void clear_has_content();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 ptr_;
  ::pjcore::HttpVersion* http_version_;
  ::google::protobuf::RepeatedPtrField< ::pjcore::HttpHeader > headers_;
  ::pjcore::LiveContent* content_;
  int status_code_;
  friend void  protobuf_AddDesc_pjcore_2flive_5fhttp_2eproto();
  friend void protobuf_AssignDesc_pjcore_2flive_5fhttp_2eproto();
  friend void protobuf_ShutdownFile_pjcore_2flive_5fhttp_2eproto();

  void InitAsDefaultInstance();
  static LiveHttpResponse* default_instance_;
};
// -------------------------------------------------------------------

class LiveHttpParser : public ::google::protobuf::Message {
 public:
  LiveHttpParser();
  virtual ~LiveHttpParser();

  LiveHttpParser(const LiveHttpParser& from);

  inline LiveHttpParser& operator=(const LiveHttpParser& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LiveHttpParser& default_instance();

  void Swap(LiveHttpParser* other);

  // implements Message ----------------------------------------------

  inline LiveHttpParser* New() const { return New(NULL); }

  LiveHttpParser* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LiveHttpParser& from);
  void MergeFrom(const LiveHttpParser& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LiveHttpParser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 ptr = 1;
  inline bool has_ptr() const;
  inline void clear_ptr();
  static const int kPtrFieldNumber = 1;
  inline ::google::protobuf::uint64 ptr() const;
  inline void set_ptr(::google::protobuf::uint64 value);

  // optional .pjcore.HttpParserType type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::pjcore::HttpParserType type() const;
  inline void set_type(::pjcore::HttpParserType value);

  // optional int32 flags = 3;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 3;
  inline ::google::protobuf::int32 flags() const;
  inline void set_flags(::google::protobuf::int32 value);

  // optional bool flag_chunked = 4;
  inline bool has_flag_chunked() const;
  inline void clear_flag_chunked();
  static const int kFlagChunkedFieldNumber = 4;
  inline bool flag_chunked() const;
  inline void set_flag_chunked(bool value);

  // optional bool flag_connection_keep_alive = 5;
  inline bool has_flag_connection_keep_alive() const;
  inline void clear_flag_connection_keep_alive();
  static const int kFlagConnectionKeepAliveFieldNumber = 5;
  inline bool flag_connection_keep_alive() const;
  inline void set_flag_connection_keep_alive(bool value);

  // optional bool flag_connection_close = 6;
  inline bool has_flag_connection_close() const;
  inline void clear_flag_connection_close();
  static const int kFlagConnectionCloseFieldNumber = 6;
  inline bool flag_connection_close() const;
  inline void set_flag_connection_close(bool value);

  // optional bool flag_trailing = 7;
  inline bool has_flag_trailing() const;
  inline void clear_flag_trailing();
  static const int kFlagTrailingFieldNumber = 7;
  inline bool flag_trailing() const;
  inline void set_flag_trailing(bool value);

  // optional bool flag_upgrade = 8;
  inline bool has_flag_upgrade() const;
  inline void clear_flag_upgrade();
  static const int kFlagUpgradeFieldNumber = 8;
  inline bool flag_upgrade() const;
  inline void set_flag_upgrade(bool value);

  // optional bool flag_skipbody = 9;
  inline bool has_flag_skipbody() const;
  inline void clear_flag_skipbody();
  static const int kFlagSkipbodyFieldNumber = 9;
  inline bool flag_skipbody() const;
  inline void set_flag_skipbody(bool value);

  // optional int32 state = 10;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 10;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional int32 header_state = 11;
  inline bool has_header_state() const;
  inline void clear_header_state();
  static const int kHeaderStateFieldNumber = 11;
  inline ::google::protobuf::int32 header_state() const;
  inline void set_header_state(::google::protobuf::int32 value);

  // optional int32 index = 12;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 12;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // optional uint32 nread = 13;
  inline bool has_nread() const;
  inline void clear_nread();
  static const int kNreadFieldNumber = 13;
  inline ::google::protobuf::uint32 nread() const;
  inline void set_nread(::google::protobuf::uint32 value);

  // optional uint64 content_length = 14;
  inline bool has_content_length() const;
  inline void clear_content_length();
  static const int kContentLengthFieldNumber = 14;
  inline ::google::protobuf::uint64 content_length() const;
  inline void set_content_length(::google::protobuf::uint64 value);

  // optional uint32 http_major = 15;
  inline bool has_http_major() const;
  inline void clear_http_major();
  static const int kHttpMajorFieldNumber = 15;
  inline ::google::protobuf::uint32 http_major() const;
  inline void set_http_major(::google::protobuf::uint32 value);

  // optional uint32 http_minor = 16;
  inline bool has_http_minor() const;
  inline void clear_http_minor();
  static const int kHttpMinorFieldNumber = 16;
  inline ::google::protobuf::uint32 http_minor() const;
  inline void set_http_minor(::google::protobuf::uint32 value);

  // optional int32 status_code = 17;
  inline bool has_status_code() const;
  inline void clear_status_code();
  static const int kStatusCodeFieldNumber = 17;
  inline ::google::protobuf::int32 status_code() const;
  inline void set_status_code(::google::protobuf::int32 value);

  // optional string status_code_str = 18;
  inline bool has_status_code_str() const;
  inline void clear_status_code_str();
  static const int kStatusCodeStrFieldNumber = 18;
  inline const ::std::string& status_code_str() const;
  inline void set_status_code_str(const ::std::string& value);
  inline void set_status_code_str(const char* value);
  inline void set_status_code_str(const char* value, size_t size);
  inline ::std::string* mutable_status_code_str();
  inline ::std::string* release_status_code_str();
  inline void set_allocated_status_code_str(::std::string* status_code_str);

  // optional int32 method = 19;
  inline bool has_method() const;
  inline void clear_method();
  static const int kMethodFieldNumber = 19;
  inline ::google::protobuf::int32 method() const;
  inline void set_method(::google::protobuf::int32 value);

  // optional string method_str = 20;
  inline bool has_method_str() const;
  inline void clear_method_str();
  static const int kMethodStrFieldNumber = 20;
  inline const ::std::string& method_str() const;
  inline void set_method_str(const ::std::string& value);
  inline void set_method_str(const char* value);
  inline void set_method_str(const char* value, size_t size);
  inline ::std::string* mutable_method_str();
  inline ::std::string* release_method_str();
  inline void set_allocated_method_str(::std::string* method_str);

  // optional int32 http_errno = 21;
  inline bool has_http_errno() const;
  inline void clear_http_errno();
  static const int kHttpErrnoFieldNumber = 21;
  inline ::google::protobuf::int32 http_errno() const;
  inline void set_http_errno(::google::protobuf::int32 value);

  // optional string http_errno_description = 22;
  inline bool has_http_errno_description() const;
  inline void clear_http_errno_description();
  static const int kHttpErrnoDescriptionFieldNumber = 22;
  inline const ::std::string& http_errno_description() const;
  inline void set_http_errno_description(const ::std::string& value);
  inline void set_http_errno_description(const char* value);
  inline void set_http_errno_description(const char* value, size_t size);
  inline ::std::string* mutable_http_errno_description();
  inline ::std::string* release_http_errno_description();
  inline void set_allocated_http_errno_description(::std::string* http_errno_description);

  // optional uint32 upgrade = 23;
  inline bool has_upgrade() const;
  inline void clear_upgrade();
  static const int kUpgradeFieldNumber = 23;
  inline ::google::protobuf::uint32 upgrade() const;
  inline void set_upgrade(::google::protobuf::uint32 value);

  // optional uint64 data_ptr = 24;
  inline bool has_data_ptr() const;
  inline void clear_data_ptr();
  static const int kDataPtrFieldNumber = 24;
  inline ::google::protobuf::uint64 data_ptr() const;
  inline void set_data_ptr(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pjcore.LiveHttpParser)
 private:
  inline void set_has_ptr();
  inline void clear_has_ptr();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_flags();
  inline void clear_has_flags();
  inline void set_has_flag_chunked();
  inline void clear_has_flag_chunked();
  inline void set_has_flag_connection_keep_alive();
  inline void clear_has_flag_connection_keep_alive();
  inline void set_has_flag_connection_close();
  inline void clear_has_flag_connection_close();
  inline void set_has_flag_trailing();
  inline void clear_has_flag_trailing();
  inline void set_has_flag_upgrade();
  inline void clear_has_flag_upgrade();
  inline void set_has_flag_skipbody();
  inline void clear_has_flag_skipbody();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_header_state();
  inline void clear_has_header_state();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_nread();
  inline void clear_has_nread();
  inline void set_has_content_length();
  inline void clear_has_content_length();
  inline void set_has_http_major();
  inline void clear_has_http_major();
  inline void set_has_http_minor();
  inline void clear_has_http_minor();
  inline void set_has_status_code();
  inline void clear_has_status_code();
  inline void set_has_status_code_str();
  inline void clear_has_status_code_str();
  inline void set_has_method();
  inline void clear_has_method();
  inline void set_has_method_str();
  inline void clear_has_method_str();
  inline void set_has_http_errno();
  inline void clear_has_http_errno();
  inline void set_has_http_errno_description();
  inline void clear_has_http_errno_description();
  inline void set_has_upgrade();
  inline void clear_has_upgrade();
  inline void set_has_data_ptr();
  inline void clear_has_data_ptr();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 ptr_;
  int type_;
  ::google::protobuf::int32 flags_;
  bool flag_chunked_;
  bool flag_connection_keep_alive_;
  bool flag_connection_close_;
  bool flag_trailing_;
  bool flag_upgrade_;
  bool flag_skipbody_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 header_state_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::uint32 nread_;
  ::google::protobuf::uint64 content_length_;
  ::google::protobuf::uint32 http_major_;
  ::google::protobuf::uint32 http_minor_;
  ::google::protobuf::internal::ArenaStringPtr status_code_str_;
  ::google::protobuf::int32 status_code_;
  ::google::protobuf::int32 method_;
  ::google::protobuf::internal::ArenaStringPtr method_str_;
  ::google::protobuf::internal::ArenaStringPtr http_errno_description_;
  ::google::protobuf::int32 http_errno_;
  ::google::protobuf::uint32 upgrade_;
  ::google::protobuf::uint64 data_ptr_;
  friend void  protobuf_AddDesc_pjcore_2flive_5fhttp_2eproto();
  friend void protobuf_AssignDesc_pjcore_2flive_5fhttp_2eproto();
  friend void protobuf_ShutdownFile_pjcore_2flive_5fhttp_2eproto();

  void InitAsDefaultInstance();
  static LiveHttpParser* default_instance_;
};
// -------------------------------------------------------------------

class LiveHttpParserPlusPlus : public ::google::protobuf::Message {
 public:
  LiveHttpParserPlusPlus();
  virtual ~LiveHttpParserPlusPlus();

  LiveHttpParserPlusPlus(const LiveHttpParserPlusPlus& from);

  inline LiveHttpParserPlusPlus& operator=(const LiveHttpParserPlusPlus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LiveHttpParserPlusPlus& default_instance();

  void Swap(LiveHttpParserPlusPlus* other);

  // implements Message ----------------------------------------------

  inline LiveHttpParserPlusPlus* New() const { return New(NULL); }

  LiveHttpParserPlusPlus* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LiveHttpParserPlusPlus& from);
  void MergeFrom(const LiveHttpParserPlusPlus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LiveHttpParserPlusPlus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pjcore.HttpParserType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::pjcore::HttpParserType type() const;
  inline void set_type(::pjcore::HttpParserType value);

  // optional .pjcore.LiveHttpRequest pending_request = 2;
  inline bool has_pending_request() const;
  inline void clear_pending_request();
  static const int kPendingRequestFieldNumber = 2;
  inline const ::pjcore::LiveHttpRequest& pending_request() const;
  inline ::pjcore::LiveHttpRequest* mutable_pending_request();
  inline ::pjcore::LiveHttpRequest* release_pending_request();
  inline void set_allocated_pending_request(::pjcore::LiveHttpRequest* pending_request);

  // optional .pjcore.LiveHttpResponse pending_response = 3;
  inline bool has_pending_response() const;
  inline void clear_pending_response();
  static const int kPendingResponseFieldNumber = 3;
  inline const ::pjcore::LiveHttpResponse& pending_response() const;
  inline ::pjcore::LiveHttpResponse* mutable_pending_response();
  inline ::pjcore::LiveHttpResponse* release_pending_response();
  inline void set_allocated_pending_response(::pjcore::LiveHttpResponse* pending_response);

  // optional .pjcore.LiveHttpParser parser = 4;
  inline bool has_parser() const;
  inline void clear_parser();
  static const int kParserFieldNumber = 4;
  inline const ::pjcore::LiveHttpParser& parser() const;
  inline ::pjcore::LiveHttpParser* mutable_parser();
  inline ::pjcore::LiveHttpParser* release_parser();
  inline void set_allocated_parser(::pjcore::LiveHttpParser* parser);

  // optional uint64 error_ptr = 5;
  inline bool has_error_ptr() const;
  inline void clear_error_ptr();
  static const int kErrorPtrFieldNumber = 5;
  inline ::google::protobuf::uint64 error_ptr() const;
  inline void set_error_ptr(::google::protobuf::uint64 value);

  // repeated .pjcore.LiveHttpRequest request_queue = 6;
  inline int request_queue_size() const;
  inline void clear_request_queue();
  static const int kRequestQueueFieldNumber = 6;
  inline const ::pjcore::LiveHttpRequest& request_queue(int index) const;
  inline ::pjcore::LiveHttpRequest* mutable_request_queue(int index);
  inline ::pjcore::LiveHttpRequest* add_request_queue();
  inline const ::google::protobuf::RepeatedPtrField< ::pjcore::LiveHttpRequest >&
      request_queue() const;
  inline ::google::protobuf::RepeatedPtrField< ::pjcore::LiveHttpRequest >*
      mutable_request_queue();

  // repeated .pjcore.LiveHttpResponse response_queue = 7;
  inline int response_queue_size() const;
  inline void clear_response_queue();
  static const int kResponseQueueFieldNumber = 7;
  inline const ::pjcore::LiveHttpResponse& response_queue(int index) const;
  inline ::pjcore::LiveHttpResponse* mutable_response_queue(int index);
  inline ::pjcore::LiveHttpResponse* add_response_queue();
  inline const ::google::protobuf::RepeatedPtrField< ::pjcore::LiveHttpResponse >&
      response_queue() const;
  inline ::google::protobuf::RepeatedPtrField< ::pjcore::LiveHttpResponse >*
      mutable_response_queue();

  // @@protoc_insertion_point(class_scope:pjcore.LiveHttpParserPlusPlus)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_pending_request();
  inline void clear_has_pending_request();
  inline void set_has_pending_response();
  inline void clear_has_pending_response();
  inline void set_has_parser();
  inline void clear_has_parser();
  inline void set_has_error_ptr();
  inline void clear_has_error_ptr();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pjcore::LiveHttpRequest* pending_request_;
  ::pjcore::LiveHttpResponse* pending_response_;
  ::pjcore::LiveHttpParser* parser_;
  ::google::protobuf::uint64 error_ptr_;
  ::google::protobuf::RepeatedPtrField< ::pjcore::LiveHttpRequest > request_queue_;
  ::google::protobuf::RepeatedPtrField< ::pjcore::LiveHttpResponse > response_queue_;
  int type_;
  friend void  protobuf_AddDesc_pjcore_2flive_5fhttp_2eproto();
  friend void protobuf_AssignDesc_pjcore_2flive_5fhttp_2eproto();
  friend void protobuf_ShutdownFile_pjcore_2flive_5fhttp_2eproto();

  void InitAsDefaultInstance();
  static LiveHttpParserPlusPlus* default_instance_;
};
// -------------------------------------------------------------------

class LiveHttpServerTransaction : public ::google::protobuf::Message {
 public:
  LiveHttpServerTransaction();
  virtual ~LiveHttpServerTransaction();

  LiveHttpServerTransaction(const LiveHttpServerTransaction& from);

  inline LiveHttpServerTransaction& operator=(const LiveHttpServerTransaction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LiveHttpServerTransaction& default_instance();

  void Swap(LiveHttpServerTransaction* other);

  // implements Message ----------------------------------------------

  inline LiveHttpServerTransaction* New() const { return New(NULL); }

  LiveHttpServerTransaction* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LiveHttpServerTransaction& from);
  void MergeFrom(const LiveHttpServerTransaction& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LiveHttpServerTransaction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uv_ptr = 1;
  inline bool has_uv_ptr() const;
  inline void clear_uv_ptr();
  static const int kUvPtrFieldNumber = 1;
  inline ::google::protobuf::uint64 uv_ptr() const;
  inline void set_uv_ptr(::google::protobuf::uint64 value);

  // optional .pjcore.LiveHttpRequest request = 2;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 2;
  inline const ::pjcore::LiveHttpRequest& request() const;
  inline ::pjcore::LiveHttpRequest* mutable_request();
  inline ::pjcore::LiveHttpRequest* release_request();
  inline void set_allocated_request(::pjcore::LiveHttpRequest* request);

  // optional .pjcore.LiveHttpResponse response = 3;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 3;
  inline const ::pjcore::LiveHttpResponse& response() const;
  inline ::pjcore::LiveHttpResponse* mutable_response();
  inline ::pjcore::LiveHttpResponse* release_response();
  inline void set_allocated_response(::pjcore::LiveHttpResponse* response);

  // optional .pjcore.LiveCallback on_write_complete = 4;
  inline bool has_on_write_complete() const;
  inline void clear_on_write_complete();
  static const int kOnWriteCompleteFieldNumber = 4;
  inline const ::pjcore::LiveCallback& on_write_complete() const;
  inline ::pjcore::LiveCallback* mutable_on_write_complete();
  inline ::pjcore::LiveCallback* release_on_write_complete();
  inline void set_allocated_on_write_complete(::pjcore::LiveCallback* on_write_complete);

  // optional string response_header = 5;
  inline bool has_response_header() const;
  inline void clear_response_header();
  static const int kResponseHeaderFieldNumber = 5;
  inline const ::std::string& response_header() const;
  inline void set_response_header(const ::std::string& value);
  inline void set_response_header(const char* value);
  inline void set_response_header(const char* value, size_t size);
  inline ::std::string* mutable_response_header();
  inline ::std::string* release_response_header();
  inline void set_allocated_response_header(::std::string* response_header);

  // optional uint64 write_bufs_ptr = 6;
  inline bool has_write_bufs_ptr() const;
  inline void clear_write_bufs_ptr();
  static const int kWriteBufsPtrFieldNumber = 6;
  inline ::google::protobuf::uint64 write_bufs_ptr() const;
  inline void set_write_bufs_ptr(::google::protobuf::uint64 value);

  // repeated .pjcore.LiveUvBuf write_bufs = 7;
  inline int write_bufs_size() const;
  inline void clear_write_bufs();
  static const int kWriteBufsFieldNumber = 7;
  inline const ::pjcore::LiveUvBuf& write_bufs(int index) const;
  inline ::pjcore::LiveUvBuf* mutable_write_bufs(int index);
  inline ::pjcore::LiveUvBuf* add_write_bufs();
  inline const ::google::protobuf::RepeatedPtrField< ::pjcore::LiveUvBuf >&
      write_bufs() const;
  inline ::google::protobuf::RepeatedPtrField< ::pjcore::LiveUvBuf >*
      mutable_write_bufs();

  // optional uint64 write_req_ptr = 8;
  inline bool has_write_req_ptr() const;
  inline void clear_write_req_ptr();
  static const int kWriteReqPtrFieldNumber = 8;
  inline ::google::protobuf::uint64 write_req_ptr() const;
  inline void set_write_req_ptr(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pjcore.LiveHttpServerTransaction)
 private:
  inline void set_has_uv_ptr();
  inline void clear_has_uv_ptr();
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_response();
  inline void clear_has_response();
  inline void set_has_on_write_complete();
  inline void clear_has_on_write_complete();
  inline void set_has_response_header();
  inline void clear_has_response_header();
  inline void set_has_write_bufs_ptr();
  inline void clear_has_write_bufs_ptr();
  inline void set_has_write_req_ptr();
  inline void clear_has_write_req_ptr();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 uv_ptr_;
  ::pjcore::LiveHttpRequest* request_;
  ::pjcore::LiveHttpResponse* response_;
  ::pjcore::LiveCallback* on_write_complete_;
  ::google::protobuf::internal::ArenaStringPtr response_header_;
  ::google::protobuf::uint64 write_bufs_ptr_;
  ::google::protobuf::RepeatedPtrField< ::pjcore::LiveUvBuf > write_bufs_;
  ::google::protobuf::uint64 write_req_ptr_;
  friend void  protobuf_AddDesc_pjcore_2flive_5fhttp_2eproto();
  friend void protobuf_AssignDesc_pjcore_2flive_5fhttp_2eproto();
  friend void protobuf_ShutdownFile_pjcore_2flive_5fhttp_2eproto();

  void InitAsDefaultInstance();
  static LiveHttpServerTransaction* default_instance_;
};
// -------------------------------------------------------------------

class LiveHttpServerConnection : public ::google::protobuf::Message {
 public:
  LiveHttpServerConnection();
  virtual ~LiveHttpServerConnection();

  LiveHttpServerConnection(const LiveHttpServerConnection& from);

  inline LiveHttpServerConnection& operator=(const LiveHttpServerConnection& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LiveHttpServerConnection& default_instance();

  void Swap(LiveHttpServerConnection* other);

  // implements Message ----------------------------------------------

  inline LiveHttpServerConnection* New() const { return New(NULL); }

  LiveHttpServerConnection* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LiveHttpServerConnection& from);
  void MergeFrom(const LiveHttpServerConnection& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LiveHttpServerConnection* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 shared_loop_ptr = 1;
  inline bool has_shared_loop_ptr() const;
  inline void clear_shared_loop_ptr();
  static const int kSharedLoopPtrFieldNumber = 1;
  inline ::google::protobuf::uint64 shared_loop_ptr() const;
  inline void set_shared_loop_ptr(::google::protobuf::uint64 value);

  // optional uint64 pending_transaction_count = 2;
  inline bool has_pending_transaction_count() const;
  inline void clear_pending_transaction_count();
  static const int kPendingTransactionCountFieldNumber = 2;
  inline ::google::protobuf::uint64 pending_transaction_count() const;
  inline void set_pending_transaction_count(::google::protobuf::uint64 value);

  // optional uint64 listen_handle_ptr = 3;
  inline bool has_listen_handle_ptr() const;
  inline void clear_listen_handle_ptr();
  static const int kListenHandlePtrFieldNumber = 3;
  inline ::google::protobuf::uint64 listen_handle_ptr() const;
  inline void set_listen_handle_ptr(::google::protobuf::uint64 value);

  // optional uint64 handler_ptr = 4;
  inline bool has_handler_ptr() const;
  inline void clear_handler_ptr();
  static const int kHandlerPtrFieldNumber = 4;
  inline ::google::protobuf::uint64 handler_ptr() const;
  inline void set_handler_ptr(::google::protobuf::uint64 value);

  // optional bool open = 5;
  inline bool has_open() const;
  inline void clear_open();
  static const int kOpenFieldNumber = 5;
  inline bool open() const;
  inline void set_open(bool value);

  // optional uint64 accept_handle_ptr = 6;
  inline bool has_accept_handle_ptr() const;
  inline void clear_accept_handle_ptr();
  static const int kAcceptHandlePtrFieldNumber = 6;
  inline ::google::protobuf::uint64 accept_handle_ptr() const;
  inline void set_accept_handle_ptr(::google::protobuf::uint64 value);

  // repeated uint64 handle_queue_ptr = 7;
  inline int handle_queue_ptr_size() const;
  inline void clear_handle_queue_ptr();
  static const int kHandleQueuePtrFieldNumber = 7;
  inline ::google::protobuf::uint64 handle_queue_ptr(int index) const;
  inline void set_handle_queue_ptr(int index, ::google::protobuf::uint64 value);
  inline void add_handle_queue_ptr(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      handle_queue_ptr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_handle_queue_ptr();

  // repeated uint64 write_queue_ptr = 8;
  inline int write_queue_ptr_size() const;
  inline void clear_write_queue_ptr();
  static const int kWriteQueuePtrFieldNumber = 8;
  inline ::google::protobuf::uint64 write_queue_ptr(int index) const;
  inline void set_write_queue_ptr(int index, ::google::protobuf::uint64 value);
  inline void add_write_queue_ptr(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      write_queue_ptr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_write_queue_ptr();

  // optional .pjcore.LiveCallback on_closing = 9;
  inline bool has_on_closing() const;
  inline void clear_on_closing();
  static const int kOnClosingFieldNumber = 9;
  inline const ::pjcore::LiveCallback& on_closing() const;
  inline ::pjcore::LiveCallback* mutable_on_closing();
  inline ::pjcore::LiveCallback* release_on_closing();
  inline void set_allocated_on_closing(::pjcore::LiveCallback* on_closing);

  // optional .pjcore.LiveCallback on_close = 10;
  inline bool has_on_close() const;
  inline void clear_on_close();
  static const int kOnCloseFieldNumber = 10;
  inline const ::pjcore::LiveCallback& on_close() const;
  inline ::pjcore::LiveCallback* mutable_on_close();
  inline ::pjcore::LiveCallback* release_on_close();
  inline void set_allocated_on_close(::pjcore::LiveCallback* on_close);

  // optional bool reading = 11;
  inline bool has_reading() const;
  inline void clear_reading();
  static const int kReadingFieldNumber = 11;
  inline bool reading() const;
  inline void set_reading(bool value);

  // optional bool closing = 12;
  inline bool has_closing() const;
  inline void clear_closing();
  static const int kClosingFieldNumber = 12;
  inline bool closing() const;
  inline void set_closing(bool value);

  // optional uint64 parser_ptr = 13;
  inline bool has_parser_ptr() const;
  inline void clear_parser_ptr();
  static const int kParserPtrFieldNumber = 13;
  inline ::google::protobuf::uint64 parser_ptr() const;
  inline void set_parser_ptr(::google::protobuf::uint64 value);

  // optional uint64 buffer_size = 14;
  inline bool has_buffer_size() const;
  inline void clear_buffer_size();
  static const int kBufferSizeFieldNumber = 14;
  inline ::google::protobuf::uint64 buffer_size() const;
  inline void set_buffer_size(::google::protobuf::uint64 value);

  // optional uint64 buffer_ptr = 15;
  inline bool has_buffer_ptr() const;
  inline void clear_buffer_ptr();
  static const int kBufferPtrFieldNumber = 15;
  inline ::google::protobuf::uint64 buffer_ptr() const;
  inline void set_buffer_ptr(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pjcore.LiveHttpServerConnection)
 private:
  inline void set_has_shared_loop_ptr();
  inline void clear_has_shared_loop_ptr();
  inline void set_has_pending_transaction_count();
  inline void clear_has_pending_transaction_count();
  inline void set_has_listen_handle_ptr();
  inline void clear_has_listen_handle_ptr();
  inline void set_has_handler_ptr();
  inline void clear_has_handler_ptr();
  inline void set_has_open();
  inline void clear_has_open();
  inline void set_has_accept_handle_ptr();
  inline void clear_has_accept_handle_ptr();
  inline void set_has_on_closing();
  inline void clear_has_on_closing();
  inline void set_has_on_close();
  inline void clear_has_on_close();
  inline void set_has_reading();
  inline void clear_has_reading();
  inline void set_has_closing();
  inline void clear_has_closing();
  inline void set_has_parser_ptr();
  inline void clear_has_parser_ptr();
  inline void set_has_buffer_size();
  inline void clear_has_buffer_size();
  inline void set_has_buffer_ptr();
  inline void clear_has_buffer_ptr();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 shared_loop_ptr_;
  ::google::protobuf::uint64 pending_transaction_count_;
  ::google::protobuf::uint64 listen_handle_ptr_;
  ::google::protobuf::uint64 handler_ptr_;
  ::google::protobuf::uint64 accept_handle_ptr_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > handle_queue_ptr_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > write_queue_ptr_;
  ::pjcore::LiveCallback* on_closing_;
  ::pjcore::LiveCallback* on_close_;
  ::google::protobuf::uint64 parser_ptr_;
  ::google::protobuf::uint64 buffer_size_;
  ::google::protobuf::uint64 buffer_ptr_;
  bool open_;
  bool reading_;
  bool closing_;
  friend void  protobuf_AddDesc_pjcore_2flive_5fhttp_2eproto();
  friend void protobuf_AssignDesc_pjcore_2flive_5fhttp_2eproto();
  friend void protobuf_ShutdownFile_pjcore_2flive_5fhttp_2eproto();

  void InitAsDefaultInstance();
  static LiveHttpServerConnection* default_instance_;
};
// -------------------------------------------------------------------

class LiveHttpServerCore : public ::google::protobuf::Message {
 public:
  LiveHttpServerCore();
  virtual ~LiveHttpServerCore();

  LiveHttpServerCore(const LiveHttpServerCore& from);

  inline LiveHttpServerCore& operator=(const LiveHttpServerCore& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LiveHttpServerCore& default_instance();

  void Swap(LiveHttpServerCore* other);

  // implements Message ----------------------------------------------

  inline LiveHttpServerCore* New() const { return New(NULL); }

  LiveHttpServerCore* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LiveHttpServerCore& from);
  void MergeFrom(const LiveHttpServerCore& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LiveHttpServerCore* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 shell_ptr = 1;
  inline bool has_shell_ptr() const;
  inline void clear_shell_ptr();
  static const int kShellPtrFieldNumber = 1;
  inline ::google::protobuf::uint64 shell_ptr() const;
  inline void set_shell_ptr(::google::protobuf::uint64 value);

  // optional uint64 open = 2;
  inline bool has_open() const;
  inline void clear_open();
  static const int kOpenFieldNumber = 2;
  inline ::google::protobuf::uint64 open() const;
  inline void set_open(::google::protobuf::uint64 value);

  // optional uint64 pending_connection_count = 3;
  inline bool has_pending_connection_count() const;
  inline void clear_pending_connection_count();
  static const int kPendingConnectionCountFieldNumber = 3;
  inline ::google::protobuf::uint64 pending_connection_count() const;
  inline void set_pending_connection_count(::google::protobuf::uint64 value);

  // optional uint64 pending_transaction_count = 4;
  inline bool has_pending_transaction_count() const;
  inline void clear_pending_transaction_count();
  static const int kPendingTransactionCountFieldNumber = 4;
  inline ::google::protobuf::uint64 pending_transaction_count() const;
  inline void set_pending_transaction_count(::google::protobuf::uint64 value);

  // optional .pjcore.HttpServerConfig config = 6;
  inline bool has_config() const;
  inline void clear_config();
  static const int kConfigFieldNumber = 6;
  inline const ::pjcore::HttpServerConfig& config() const;
  inline ::pjcore::HttpServerConfig* mutable_config();
  inline ::pjcore::HttpServerConfig* release_config();
  inline void set_allocated_config(::pjcore::HttpServerConfig* config);

  // optional uint64 shared_loop_ptr = 7;
  inline bool has_shared_loop_ptr() const;
  inline void clear_shared_loop_ptr();
  static const int kSharedLoopPtrFieldNumber = 7;
  inline ::google::protobuf::uint64 shared_loop_ptr() const;
  inline void set_shared_loop_ptr(::google::protobuf::uint64 value);

  // optional uint64 handler_ptr = 8;
  inline bool has_handler_ptr() const;
  inline void clear_handler_ptr();
  static const int kHandlerPtrFieldNumber = 8;
  inline ::google::protobuf::uint64 handler_ptr() const;
  inline void set_handler_ptr(::google::protobuf::uint64 value);

  // optional uint64 listen_handle_ptr = 9;
  inline bool has_listen_handle_ptr() const;
  inline void clear_listen_handle_ptr();
  static const int kListenHandlePtrFieldNumber = 9;
  inline ::google::protobuf::uint64 listen_handle_ptr() const;
  inline void set_listen_handle_ptr(::google::protobuf::uint64 value);

  // optional .pjcore.LiveCallback on_destroy = 10;
  inline bool has_on_destroy() const;
  inline void clear_on_destroy();
  static const int kOnDestroyFieldNumber = 10;
  inline const ::pjcore::LiveCallback& on_destroy() const;
  inline ::pjcore::LiveCallback* mutable_on_destroy();
  inline ::pjcore::LiveCallback* release_on_destroy();
  inline void set_allocated_on_destroy(::pjcore::LiveCallback* on_destroy);

  // @@protoc_insertion_point(class_scope:pjcore.LiveHttpServerCore)
 private:
  inline void set_has_shell_ptr();
  inline void clear_has_shell_ptr();
  inline void set_has_open();
  inline void clear_has_open();
  inline void set_has_pending_connection_count();
  inline void clear_has_pending_connection_count();
  inline void set_has_pending_transaction_count();
  inline void clear_has_pending_transaction_count();
  inline void set_has_config();
  inline void clear_has_config();
  inline void set_has_shared_loop_ptr();
  inline void clear_has_shared_loop_ptr();
  inline void set_has_handler_ptr();
  inline void clear_has_handler_ptr();
  inline void set_has_listen_handle_ptr();
  inline void clear_has_listen_handle_ptr();
  inline void set_has_on_destroy();
  inline void clear_has_on_destroy();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 shell_ptr_;
  ::google::protobuf::uint64 open_;
  ::google::protobuf::uint64 pending_connection_count_;
  ::google::protobuf::uint64 pending_transaction_count_;
  ::pjcore::HttpServerConfig* config_;
  ::google::protobuf::uint64 shared_loop_ptr_;
  ::google::protobuf::uint64 handler_ptr_;
  ::google::protobuf::uint64 listen_handle_ptr_;
  ::pjcore::LiveCallback* on_destroy_;
  friend void  protobuf_AddDesc_pjcore_2flive_5fhttp_2eproto();
  friend void protobuf_AssignDesc_pjcore_2flive_5fhttp_2eproto();
  friend void protobuf_ShutdownFile_pjcore_2flive_5fhttp_2eproto();

  void InitAsDefaultInstance();
  static LiveHttpServerCore* default_instance_;
};
// -------------------------------------------------------------------

class LiveHttpServer : public ::google::protobuf::Message {
 public:
  LiveHttpServer();
  virtual ~LiveHttpServer();

  LiveHttpServer(const LiveHttpServer& from);

  inline LiveHttpServer& operator=(const LiveHttpServer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LiveHttpServer& default_instance();

  void Swap(LiveHttpServer* other);

  // implements Message ----------------------------------------------

  inline LiveHttpServer* New() const { return New(NULL); }

  LiveHttpServer* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LiveHttpServer& from);
  void MergeFrom(const LiveHttpServer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LiveHttpServer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 core_ptr = 1;
  inline bool has_core_ptr() const;
  inline void clear_core_ptr();
  static const int kCorePtrFieldNumber = 1;
  inline ::google::protobuf::uint64 core_ptr() const;
  inline void set_core_ptr(::google::protobuf::uint64 value);

  // optional .pjcore.LiveCallback on_destroy = 2;
  inline bool has_on_destroy() const;
  inline void clear_on_destroy();
  static const int kOnDestroyFieldNumber = 2;
  inline const ::pjcore::LiveCallback& on_destroy() const;
  inline ::pjcore::LiveCallback* mutable_on_destroy();
  inline ::pjcore::LiveCallback* release_on_destroy();
  inline void set_allocated_on_destroy(::pjcore::LiveCallback* on_destroy);

  // @@protoc_insertion_point(class_scope:pjcore.LiveHttpServer)
 private:
  inline void set_has_core_ptr();
  inline void clear_has_core_ptr();
  inline void set_has_on_destroy();
  inline void clear_has_on_destroy();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 core_ptr_;
  ::pjcore::LiveCallback* on_destroy_;
  friend void  protobuf_AddDesc_pjcore_2flive_5fhttp_2eproto();
  friend void protobuf_AssignDesc_pjcore_2flive_5fhttp_2eproto();
  friend void protobuf_ShutdownFile_pjcore_2flive_5fhttp_2eproto();

  void InitAsDefaultInstance();
  static LiveHttpServer* default_instance_;
};
// -------------------------------------------------------------------

class LiveHttpClientTransaction : public ::google::protobuf::Message {
 public:
  LiveHttpClientTransaction();
  virtual ~LiveHttpClientTransaction();

  LiveHttpClientTransaction(const LiveHttpClientTransaction& from);

  inline LiveHttpClientTransaction& operator=(const LiveHttpClientTransaction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LiveHttpClientTransaction& default_instance();

  void Swap(LiveHttpClientTransaction* other);

  // implements Message ----------------------------------------------

  inline LiveHttpClientTransaction* New() const { return New(NULL); }

  LiveHttpClientTransaction* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LiveHttpClientTransaction& from);
  void MergeFrom(const LiveHttpClientTransaction& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LiveHttpClientTransaction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uv_ptr = 1;
  inline bool has_uv_ptr() const;
  inline void clear_uv_ptr();
  static const int kUvPtrFieldNumber = 1;
  inline ::google::protobuf::uint64 uv_ptr() const;
  inline void set_uv_ptr(::google::protobuf::uint64 value);

  // optional .pjcore.LiveHttpRequest request = 2;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 2;
  inline const ::pjcore::LiveHttpRequest& request() const;
  inline ::pjcore::LiveHttpRequest* mutable_request();
  inline ::pjcore::LiveHttpRequest* release_request();
  inline void set_allocated_request(::pjcore::LiveHttpRequest* request);

  // optional .pjcore.NodeAndServiceName node_and_service_name = 3;
  inline bool has_node_and_service_name() const;
  inline void clear_node_and_service_name();
  static const int kNodeAndServiceNameFieldNumber = 3;
  inline const ::pjcore::NodeAndServiceName& node_and_service_name() const;
  inline ::pjcore::NodeAndServiceName* mutable_node_and_service_name();
  inline ::pjcore::NodeAndServiceName* release_node_and_service_name();
  inline void set_allocated_node_and_service_name(::pjcore::NodeAndServiceName* node_and_service_name);

  // optional .pjcore.LiveCallback on_response = 4;
  inline bool has_on_response() const;
  inline void clear_on_response();
  static const int kOnResponseFieldNumber = 4;
  inline const ::pjcore::LiveCallback& on_response() const;
  inline ::pjcore::LiveCallback* mutable_on_response();
  inline ::pjcore::LiveCallback* release_on_response();
  inline void set_allocated_on_response(::pjcore::LiveCallback* on_response);

  // @@protoc_insertion_point(class_scope:pjcore.LiveHttpClientTransaction)
 private:
  inline void set_has_uv_ptr();
  inline void clear_has_uv_ptr();
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_node_and_service_name();
  inline void clear_has_node_and_service_name();
  inline void set_has_on_response();
  inline void clear_has_on_response();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 uv_ptr_;
  ::pjcore::LiveHttpRequest* request_;
  ::pjcore::NodeAndServiceName* node_and_service_name_;
  ::pjcore::LiveCallback* on_response_;
  friend void  protobuf_AddDesc_pjcore_2flive_5fhttp_2eproto();
  friend void protobuf_AssignDesc_pjcore_2flive_5fhttp_2eproto();
  friend void protobuf_ShutdownFile_pjcore_2flive_5fhttp_2eproto();

  void InitAsDefaultInstance();
  static LiveHttpClientTransaction* default_instance_;
};
// -------------------------------------------------------------------

class LiveHttpClientConnection : public ::google::protobuf::Message {
 public:
  LiveHttpClientConnection();
  virtual ~LiveHttpClientConnection();

  LiveHttpClientConnection(const LiveHttpClientConnection& from);

  inline LiveHttpClientConnection& operator=(const LiveHttpClientConnection& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LiveHttpClientConnection& default_instance();

  void Swap(LiveHttpClientConnection* other);

  // implements Message ----------------------------------------------

  inline LiveHttpClientConnection* New() const { return New(NULL); }

  LiveHttpClientConnection* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LiveHttpClientConnection& from);
  void MergeFrom(const LiveHttpClientConnection& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LiveHttpClientConnection* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 shared_loop_ptr = 1;
  inline bool has_shared_loop_ptr() const;
  inline void clear_shared_loop_ptr();
  static const int kSharedLoopPtrFieldNumber = 1;
  inline ::google::protobuf::uint64 shared_loop_ptr() const;
  inline void set_shared_loop_ptr(::google::protobuf::uint64 value);

  // repeated .pjcore.LiveAddrInfo addr_infos = 2;
  inline int addr_infos_size() const;
  inline void clear_addr_infos();
  static const int kAddrInfosFieldNumber = 2;
  inline const ::pjcore::LiveAddrInfo& addr_infos(int index) const;
  inline ::pjcore::LiveAddrInfo* mutable_addr_infos(int index);
  inline ::pjcore::LiveAddrInfo* add_addr_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::pjcore::LiveAddrInfo >&
      addr_infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::pjcore::LiveAddrInfo >*
      mutable_addr_infos();

  // optional bool open = 3;
  inline bool has_open() const;
  inline void clear_open();
  static const int kOpenFieldNumber = 3;
  inline bool open() const;
  inline void set_open(bool value);

  // repeated uint64 wait_queue_ptr = 4;
  inline int wait_queue_ptr_size() const;
  inline void clear_wait_queue_ptr();
  static const int kWaitQueuePtrFieldNumber = 4;
  inline ::google::protobuf::uint64 wait_queue_ptr(int index) const;
  inline void set_wait_queue_ptr(int index, ::google::protobuf::uint64 value);
  inline void add_wait_queue_ptr(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      wait_queue_ptr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_wait_queue_ptr();

  // repeated uint64 write_queue_ptr = 5;
  inline int write_queue_ptr_size() const;
  inline void clear_write_queue_ptr();
  static const int kWriteQueuePtrFieldNumber = 5;
  inline ::google::protobuf::uint64 write_queue_ptr(int index) const;
  inline void set_write_queue_ptr(int index, ::google::protobuf::uint64 value);
  inline void add_write_queue_ptr(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      write_queue_ptr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_write_queue_ptr();

  // repeated uint64 read_queue_ptr = 6;
  inline int read_queue_ptr_size() const;
  inline void clear_read_queue_ptr();
  static const int kReadQueuePtrFieldNumber = 6;
  inline ::google::protobuf::uint64 read_queue_ptr(int index) const;
  inline void set_read_queue_ptr(int index, ::google::protobuf::uint64 value);
  inline void add_read_queue_ptr(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      read_queue_ptr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_read_queue_ptr();

  // optional .pjcore.LiveCallback on_closing = 7;
  inline bool has_on_closing() const;
  inline void clear_on_closing();
  static const int kOnClosingFieldNumber = 7;
  inline const ::pjcore::LiveCallback& on_closing() const;
  inline ::pjcore::LiveCallback* mutable_on_closing();
  inline ::pjcore::LiveCallback* release_on_closing();
  inline void set_allocated_on_closing(::pjcore::LiveCallback* on_closing);

  // optional .pjcore.LiveCallback on_close = 8;
  inline bool has_on_close() const;
  inline void clear_on_close();
  static const int kOnCloseFieldNumber = 8;
  inline const ::pjcore::LiveCallback& on_close() const;
  inline ::pjcore::LiveCallback* mutable_on_close();
  inline ::pjcore::LiveCallback* release_on_close();
  inline void set_allocated_on_close(::pjcore::LiveCallback* on_close);

  // optional uint64 connect_handle_ptr = 9;
  inline bool has_connect_handle_ptr() const;
  inline void clear_connect_handle_ptr();
  static const int kConnectHandlePtrFieldNumber = 9;
  inline ::google::protobuf::uint64 connect_handle_ptr() const;
  inline void set_connect_handle_ptr(::google::protobuf::uint64 value);

  // optional uint64 connect_req_ptr = 10;
  inline bool has_connect_req_ptr() const;
  inline void clear_connect_req_ptr();
  static const int kConnectReqPtrFieldNumber = 10;
  inline ::google::protobuf::uint64 connect_req_ptr() const;
  inline void set_connect_req_ptr(::google::protobuf::uint64 value);

  // optional bool reading = 11;
  inline bool has_reading() const;
  inline void clear_reading();
  static const int kReadingFieldNumber = 11;
  inline bool reading() const;
  inline void set_reading(bool value);

  // optional bool closing = 12;
  inline bool has_closing() const;
  inline void clear_closing();
  static const int kClosingFieldNumber = 12;
  inline bool closing() const;
  inline void set_closing(bool value);

  // optional uint64 parser_ptr = 13;
  inline bool has_parser_ptr() const;
  inline void clear_parser_ptr();
  static const int kParserPtrFieldNumber = 13;
  inline ::google::protobuf::uint64 parser_ptr() const;
  inline void set_parser_ptr(::google::protobuf::uint64 value);

  // optional uint64 buffer_size = 14;
  inline bool has_buffer_size() const;
  inline void clear_buffer_size();
  static const int kBufferSizeFieldNumber = 14;
  inline ::google::protobuf::uint64 buffer_size() const;
  inline void set_buffer_size(::google::protobuf::uint64 value);

  // optional uint64 buffer_ptr = 15;
  inline bool has_buffer_ptr() const;
  inline void clear_buffer_ptr();
  static const int kBufferPtrFieldNumber = 15;
  inline ::google::protobuf::uint64 buffer_ptr() const;
  inline void set_buffer_ptr(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pjcore.LiveHttpClientConnection)
 private:
  inline void set_has_shared_loop_ptr();
  inline void clear_has_shared_loop_ptr();
  inline void set_has_open();
  inline void clear_has_open();
  inline void set_has_on_closing();
  inline void clear_has_on_closing();
  inline void set_has_on_close();
  inline void clear_has_on_close();
  inline void set_has_connect_handle_ptr();
  inline void clear_has_connect_handle_ptr();
  inline void set_has_connect_req_ptr();
  inline void clear_has_connect_req_ptr();
  inline void set_has_reading();
  inline void clear_has_reading();
  inline void set_has_closing();
  inline void clear_has_closing();
  inline void set_has_parser_ptr();
  inline void clear_has_parser_ptr();
  inline void set_has_buffer_size();
  inline void clear_has_buffer_size();
  inline void set_has_buffer_ptr();
  inline void clear_has_buffer_ptr();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 shared_loop_ptr_;
  ::google::protobuf::RepeatedPtrField< ::pjcore::LiveAddrInfo > addr_infos_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > wait_queue_ptr_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > write_queue_ptr_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > read_queue_ptr_;
  ::pjcore::LiveCallback* on_closing_;
  ::pjcore::LiveCallback* on_close_;
  ::google::protobuf::uint64 connect_handle_ptr_;
  ::google::protobuf::uint64 connect_req_ptr_;
  ::google::protobuf::uint64 parser_ptr_;
  ::google::protobuf::uint64 buffer_size_;
  ::google::protobuf::uint64 buffer_ptr_;
  bool open_;
  bool reading_;
  bool closing_;
  friend void  protobuf_AddDesc_pjcore_2flive_5fhttp_2eproto();
  friend void protobuf_AssignDesc_pjcore_2flive_5fhttp_2eproto();
  friend void protobuf_ShutdownFile_pjcore_2flive_5fhttp_2eproto();

  void InitAsDefaultInstance();
  static LiveHttpClientConnection* default_instance_;
};
// -------------------------------------------------------------------

class LiveHttpClientConnectionGroup : public ::google::protobuf::Message {
 public:
  LiveHttpClientConnectionGroup();
  virtual ~LiveHttpClientConnectionGroup();

  LiveHttpClientConnectionGroup(const LiveHttpClientConnectionGroup& from);

  inline LiveHttpClientConnectionGroup& operator=(const LiveHttpClientConnectionGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LiveHttpClientConnectionGroup& default_instance();

  void Swap(LiveHttpClientConnectionGroup* other);

  // implements Message ----------------------------------------------

  inline LiveHttpClientConnectionGroup* New() const { return New(NULL); }

  LiveHttpClientConnectionGroup* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LiveHttpClientConnectionGroup& from);
  void MergeFrom(const LiveHttpClientConnectionGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LiveHttpClientConnectionGroup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 shared_loop_ptr = 1;
  inline bool has_shared_loop_ptr() const;
  inline void clear_shared_loop_ptr();
  static const int kSharedLoopPtrFieldNumber = 1;
  inline ::google::protobuf::uint64 shared_loop_ptr() const;
  inline void set_shared_loop_ptr(::google::protobuf::uint64 value);

  // optional uint64 pending_resolve_count = 2;
  inline bool has_pending_resolve_count() const;
  inline void clear_pending_resolve_count();
  static const int kPendingResolveCountFieldNumber = 2;
  inline ::google::protobuf::uint64 pending_resolve_count() const;
  inline void set_pending_resolve_count(::google::protobuf::uint64 value);

  // optional uint64 pending_connection_count = 3;
  inline bool has_pending_connection_count() const;
  inline void clear_pending_connection_count();
  static const int kPendingConnectionCountFieldNumber = 3;
  inline ::google::protobuf::uint64 pending_connection_count() const;
  inline void set_pending_connection_count(::google::protobuf::uint64 value);

  // optional .pjcore.NodeAndServiceName node_and_service_name = 4;
  inline bool has_node_and_service_name() const;
  inline void clear_node_and_service_name();
  static const int kNodeAndServiceNameFieldNumber = 4;
  inline const ::pjcore::NodeAndServiceName& node_and_service_name() const;
  inline ::pjcore::NodeAndServiceName* mutable_node_and_service_name();
  inline ::pjcore::NodeAndServiceName* release_node_and_service_name();
  inline void set_allocated_node_and_service_name(::pjcore::NodeAndServiceName* node_and_service_name);

  // optional .pjcore.LiveAddrInfo resolve_hints = 5;
  inline bool has_resolve_hints() const;
  inline void clear_resolve_hints();
  static const int kResolveHintsFieldNumber = 5;
  inline const ::pjcore::LiveAddrInfo& resolve_hints() const;
  inline ::pjcore::LiveAddrInfo* mutable_resolve_hints();
  inline ::pjcore::LiveAddrInfo* release_resolve_hints();
  inline void set_allocated_resolve_hints(::pjcore::LiveAddrInfo* resolve_hints);

  // optional uint64 resolve_req_ptr = 6;
  inline bool has_resolve_req_ptr() const;
  inline void clear_resolve_req_ptr();
  static const int kResolveReqPtrFieldNumber = 6;
  inline ::google::protobuf::uint64 resolve_req_ptr() const;
  inline void set_resolve_req_ptr(::google::protobuf::uint64 value);

  // repeated .pjcore.LiveAddrInfo addr_infos = 7;
  inline int addr_infos_size() const;
  inline void clear_addr_infos();
  static const int kAddrInfosFieldNumber = 7;
  inline const ::pjcore::LiveAddrInfo& addr_infos(int index) const;
  inline ::pjcore::LiveAddrInfo* mutable_addr_infos(int index);
  inline ::pjcore::LiveAddrInfo* add_addr_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::pjcore::LiveAddrInfo >&
      addr_infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::pjcore::LiveAddrInfo >*
      mutable_addr_infos();

  // repeated uint64 open_connections_ptr = 8;
  inline int open_connections_ptr_size() const;
  inline void clear_open_connections_ptr();
  static const int kOpenConnectionsPtrFieldNumber = 8;
  inline ::google::protobuf::uint64 open_connections_ptr(int index) const;
  inline void set_open_connections_ptr(int index, ::google::protobuf::uint64 value);
  inline void add_open_connections_ptr(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      open_connections_ptr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_open_connections_ptr();

  // repeated uint64 closing_connections_ptr = 9;
  inline int closing_connections_ptr_size() const;
  inline void clear_closing_connections_ptr();
  static const int kClosingConnectionsPtrFieldNumber = 9;
  inline ::google::protobuf::uint64 closing_connections_ptr(int index) const;
  inline void set_closing_connections_ptr(int index, ::google::protobuf::uint64 value);
  inline void add_closing_connections_ptr(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      closing_connections_ptr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_closing_connections_ptr();

  // @@protoc_insertion_point(class_scope:pjcore.LiveHttpClientConnectionGroup)
 private:
  inline void set_has_shared_loop_ptr();
  inline void clear_has_shared_loop_ptr();
  inline void set_has_pending_resolve_count();
  inline void clear_has_pending_resolve_count();
  inline void set_has_pending_connection_count();
  inline void clear_has_pending_connection_count();
  inline void set_has_node_and_service_name();
  inline void clear_has_node_and_service_name();
  inline void set_has_resolve_hints();
  inline void clear_has_resolve_hints();
  inline void set_has_resolve_req_ptr();
  inline void clear_has_resolve_req_ptr();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 shared_loop_ptr_;
  ::google::protobuf::uint64 pending_resolve_count_;
  ::google::protobuf::uint64 pending_connection_count_;
  ::pjcore::NodeAndServiceName* node_and_service_name_;
  ::pjcore::LiveAddrInfo* resolve_hints_;
  ::google::protobuf::uint64 resolve_req_ptr_;
  ::google::protobuf::RepeatedPtrField< ::pjcore::LiveAddrInfo > addr_infos_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > open_connections_ptr_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > closing_connections_ptr_;
  friend void  protobuf_AddDesc_pjcore_2flive_5fhttp_2eproto();
  friend void protobuf_AssignDesc_pjcore_2flive_5fhttp_2eproto();
  friend void protobuf_ShutdownFile_pjcore_2flive_5fhttp_2eproto();

  void InitAsDefaultInstance();
  static LiveHttpClientConnectionGroup* default_instance_;
};
// -------------------------------------------------------------------

class LiveHttpClientCore : public ::google::protobuf::Message {
 public:
  LiveHttpClientCore();
  virtual ~LiveHttpClientCore();

  LiveHttpClientCore(const LiveHttpClientCore& from);

  inline LiveHttpClientCore& operator=(const LiveHttpClientCore& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LiveHttpClientCore& default_instance();

  void Swap(LiveHttpClientCore* other);

  // implements Message ----------------------------------------------

  inline LiveHttpClientCore* New() const { return New(NULL); }

  LiveHttpClientCore* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LiveHttpClientCore& from);
  void MergeFrom(const LiveHttpClientCore& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LiveHttpClientCore* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 shell_ptr = 1;
  inline bool has_shell_ptr() const;
  inline void clear_shell_ptr();
  static const int kShellPtrFieldNumber = 1;
  inline ::google::protobuf::uint64 shell_ptr() const;
  inline void set_shell_ptr(::google::protobuf::uint64 value);

  // optional uint64 pending_resolve_count = 2;
  inline bool has_pending_resolve_count() const;
  inline void clear_pending_resolve_count();
  static const int kPendingResolveCountFieldNumber = 2;
  inline ::google::protobuf::uint64 pending_resolve_count() const;
  inline void set_pending_resolve_count(::google::protobuf::uint64 value);

  // optional uint64 pending_connection_count = 3;
  inline bool has_pending_connection_count() const;
  inline void clear_pending_connection_count();
  static const int kPendingConnectionCountFieldNumber = 3;
  inline ::google::protobuf::uint64 pending_connection_count() const;
  inline void set_pending_connection_count(::google::protobuf::uint64 value);

  // optional uint64 pending_transaction_count = 4;
  inline bool has_pending_transaction_count() const;
  inline void clear_pending_transaction_count();
  static const int kPendingTransactionCountFieldNumber = 4;
  inline ::google::protobuf::uint64 pending_transaction_count() const;
  inline void set_pending_transaction_count(::google::protobuf::uint64 value);

  // optional .pjcore.HttpClientConfig config = 5;
  inline bool has_config() const;
  inline void clear_config();
  static const int kConfigFieldNumber = 5;
  inline const ::pjcore::HttpClientConfig& config() const;
  inline ::pjcore::HttpClientConfig* mutable_config();
  inline ::pjcore::HttpClientConfig* release_config();
  inline void set_allocated_config(::pjcore::HttpClientConfig* config);

  // optional uint64 shared_loop_ptr = 6;
  inline bool has_shared_loop_ptr() const;
  inline void clear_shared_loop_ptr();
  static const int kSharedLoopPtrFieldNumber = 6;
  inline ::google::protobuf::uint64 shared_loop_ptr() const;
  inline void set_shared_loop_ptr(::google::protobuf::uint64 value);

  // repeated uint64 connection_groups_ptr = 7;
  inline int connection_groups_ptr_size() const;
  inline void clear_connection_groups_ptr();
  static const int kConnectionGroupsPtrFieldNumber = 7;
  inline ::google::protobuf::uint64 connection_groups_ptr(int index) const;
  inline void set_connection_groups_ptr(int index, ::google::protobuf::uint64 value);
  inline void add_connection_groups_ptr(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      connection_groups_ptr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_connection_groups_ptr();

  // optional .pjcore.LiveCallback on_destroy = 8;
  inline bool has_on_destroy() const;
  inline void clear_on_destroy();
  static const int kOnDestroyFieldNumber = 8;
  inline const ::pjcore::LiveCallback& on_destroy() const;
  inline ::pjcore::LiveCallback* mutable_on_destroy();
  inline ::pjcore::LiveCallback* release_on_destroy();
  inline void set_allocated_on_destroy(::pjcore::LiveCallback* on_destroy);

  // @@protoc_insertion_point(class_scope:pjcore.LiveHttpClientCore)
 private:
  inline void set_has_shell_ptr();
  inline void clear_has_shell_ptr();
  inline void set_has_pending_resolve_count();
  inline void clear_has_pending_resolve_count();
  inline void set_has_pending_connection_count();
  inline void clear_has_pending_connection_count();
  inline void set_has_pending_transaction_count();
  inline void clear_has_pending_transaction_count();
  inline void set_has_config();
  inline void clear_has_config();
  inline void set_has_shared_loop_ptr();
  inline void clear_has_shared_loop_ptr();
  inline void set_has_on_destroy();
  inline void clear_has_on_destroy();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 shell_ptr_;
  ::google::protobuf::uint64 pending_resolve_count_;
  ::google::protobuf::uint64 pending_connection_count_;
  ::google::protobuf::uint64 pending_transaction_count_;
  ::pjcore::HttpClientConfig* config_;
  ::google::protobuf::uint64 shared_loop_ptr_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > connection_groups_ptr_;
  ::pjcore::LiveCallback* on_destroy_;
  friend void  protobuf_AddDesc_pjcore_2flive_5fhttp_2eproto();
  friend void protobuf_AssignDesc_pjcore_2flive_5fhttp_2eproto();
  friend void protobuf_ShutdownFile_pjcore_2flive_5fhttp_2eproto();

  void InitAsDefaultInstance();
  static LiveHttpClientCore* default_instance_;
};
// -------------------------------------------------------------------

class LiveHttpClient : public ::google::protobuf::Message {
 public:
  LiveHttpClient();
  virtual ~LiveHttpClient();

  LiveHttpClient(const LiveHttpClient& from);

  inline LiveHttpClient& operator=(const LiveHttpClient& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LiveHttpClient& default_instance();

  void Swap(LiveHttpClient* other);

  // implements Message ----------------------------------------------

  inline LiveHttpClient* New() const { return New(NULL); }

  LiveHttpClient* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LiveHttpClient& from);
  void MergeFrom(const LiveHttpClient& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LiveHttpClient* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 core_ptr = 1;
  inline bool has_core_ptr() const;
  inline void clear_core_ptr();
  static const int kCorePtrFieldNumber = 1;
  inline ::google::protobuf::uint64 core_ptr() const;
  inline void set_core_ptr(::google::protobuf::uint64 value);

  // optional .pjcore.LiveCallback on_destroy = 2;
  inline bool has_on_destroy() const;
  inline void clear_on_destroy();
  static const int kOnDestroyFieldNumber = 2;
  inline const ::pjcore::LiveCallback& on_destroy() const;
  inline ::pjcore::LiveCallback* mutable_on_destroy();
  inline ::pjcore::LiveCallback* release_on_destroy();
  inline void set_allocated_on_destroy(::pjcore::LiveCallback* on_destroy);

  // @@protoc_insertion_point(class_scope:pjcore.LiveHttpClient)
 private:
  inline void set_has_core_ptr();
  inline void clear_has_core_ptr();
  inline void set_has_on_destroy();
  inline void clear_has_on_destroy();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 core_ptr_;
  ::pjcore::LiveCallback* on_destroy_;
  friend void  protobuf_AddDesc_pjcore_2flive_5fhttp_2eproto();
  friend void protobuf_AssignDesc_pjcore_2flive_5fhttp_2eproto();
  friend void protobuf_ShutdownFile_pjcore_2flive_5fhttp_2eproto();

  void InitAsDefaultInstance();
  static LiveHttpClient* default_instance_;
};
// -------------------------------------------------------------------

class LiveHttpCallbackHandler : public ::google::protobuf::Message {
 public:
  LiveHttpCallbackHandler();
  virtual ~LiveHttpCallbackHandler();

  LiveHttpCallbackHandler(const LiveHttpCallbackHandler& from);

  inline LiveHttpCallbackHandler& operator=(const LiveHttpCallbackHandler& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LiveHttpCallbackHandler& default_instance();

  void Swap(LiveHttpCallbackHandler* other);

  // implements Message ----------------------------------------------

  inline LiveHttpCallbackHandler* New() const { return New(NULL); }

  LiveHttpCallbackHandler* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LiveHttpCallbackHandler& from);
  void MergeFrom(const LiveHttpCallbackHandler& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LiveHttpCallbackHandler* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pjcore.LiveCallback callback = 1;
  inline bool has_callback() const;
  inline void clear_callback();
  static const int kCallbackFieldNumber = 1;
  inline const ::pjcore::LiveCallback& callback() const;
  inline ::pjcore::LiveCallback* mutable_callback();
  inline ::pjcore::LiveCallback* release_callback();
  inline void set_allocated_callback(::pjcore::LiveCallback* callback);

  // @@protoc_insertion_point(class_scope:pjcore.LiveHttpCallbackHandler)
 private:
  inline void set_has_callback();
  inline void clear_has_callback();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pjcore::LiveCallback* callback_;
  friend void  protobuf_AddDesc_pjcore_2flive_5fhttp_2eproto();
  friend void protobuf_AssignDesc_pjcore_2flive_5fhttp_2eproto();
  friend void protobuf_ShutdownFile_pjcore_2flive_5fhttp_2eproto();

  void InitAsDefaultInstance();
  static LiveHttpCallbackHandler* default_instance_;
};
// -------------------------------------------------------------------

class LiveHttpPathHandler_PathHandlerEntry : public ::google::protobuf::Message {
 public:
  LiveHttpPathHandler_PathHandlerEntry();
  virtual ~LiveHttpPathHandler_PathHandlerEntry();

  LiveHttpPathHandler_PathHandlerEntry(const LiveHttpPathHandler_PathHandlerEntry& from);

  inline LiveHttpPathHandler_PathHandlerEntry& operator=(const LiveHttpPathHandler_PathHandlerEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LiveHttpPathHandler_PathHandlerEntry& default_instance();

  void Swap(LiveHttpPathHandler_PathHandlerEntry* other);

  // implements Message ----------------------------------------------

  inline LiveHttpPathHandler_PathHandlerEntry* New() const { return New(NULL); }

  LiveHttpPathHandler_PathHandlerEntry* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LiveHttpPathHandler_PathHandlerEntry& from);
  void MergeFrom(const LiveHttpPathHandler_PathHandlerEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LiveHttpPathHandler_PathHandlerEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string path = 1;
  inline bool has_path() const;
  inline void clear_path();
  static const int kPathFieldNumber = 1;
  inline const ::std::string& path() const;
  inline void set_path(const ::std::string& value);
  inline void set_path(const char* value);
  inline void set_path(const char* value, size_t size);
  inline ::std::string* mutable_path();
  inline ::std::string* release_path();
  inline void set_allocated_path(::std::string* path);

  // optional uint64 handler_ptr = 2;
  inline bool has_handler_ptr() const;
  inline void clear_handler_ptr();
  static const int kHandlerPtrFieldNumber = 2;
  inline ::google::protobuf::uint64 handler_ptr() const;
  inline void set_handler_ptr(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pjcore.LiveHttpPathHandler.PathHandlerEntry)
 private:
  inline void set_has_path();
  inline void clear_has_path();
  inline void set_has_handler_ptr();
  inline void clear_has_handler_ptr();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::uint64 handler_ptr_;
  friend void  protobuf_AddDesc_pjcore_2flive_5fhttp_2eproto();
  friend void protobuf_AssignDesc_pjcore_2flive_5fhttp_2eproto();
  friend void protobuf_ShutdownFile_pjcore_2flive_5fhttp_2eproto();

  void InitAsDefaultInstance();
  static LiveHttpPathHandler_PathHandlerEntry* default_instance_;
};
// -------------------------------------------------------------------

class LiveHttpPathHandler : public ::google::protobuf::Message {
 public:
  LiveHttpPathHandler();
  virtual ~LiveHttpPathHandler();

  LiveHttpPathHandler(const LiveHttpPathHandler& from);

  inline LiveHttpPathHandler& operator=(const LiveHttpPathHandler& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LiveHttpPathHandler& default_instance();

  void Swap(LiveHttpPathHandler* other);

  // implements Message ----------------------------------------------

  inline LiveHttpPathHandler* New() const { return New(NULL); }

  LiveHttpPathHandler* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LiveHttpPathHandler& from);
  void MergeFrom(const LiveHttpPathHandler& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LiveHttpPathHandler* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef LiveHttpPathHandler_PathHandlerEntry PathHandlerEntry;

  // accessors -------------------------------------------------------

  // repeated .pjcore.LiveHttpPathHandler.PathHandlerEntry map = 1;
  inline int map_size() const;
  inline void clear_map();
  static const int kMapFieldNumber = 1;
  inline const ::pjcore::LiveHttpPathHandler_PathHandlerEntry& map(int index) const;
  inline ::pjcore::LiveHttpPathHandler_PathHandlerEntry* mutable_map(int index);
  inline ::pjcore::LiveHttpPathHandler_PathHandlerEntry* add_map();
  inline const ::google::protobuf::RepeatedPtrField< ::pjcore::LiveHttpPathHandler_PathHandlerEntry >&
      map() const;
  inline ::google::protobuf::RepeatedPtrField< ::pjcore::LiveHttpPathHandler_PathHandlerEntry >*
      mutable_map();

  // optional uint64 default_handler_ptr = 2;
  inline bool has_default_handler_ptr() const;
  inline void clear_default_handler_ptr();
  static const int kDefaultHandlerPtrFieldNumber = 2;
  inline ::google::protobuf::uint64 default_handler_ptr() const;
  inline void set_default_handler_ptr(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pjcore.LiveHttpPathHandler)
 private:
  inline void set_has_default_handler_ptr();
  inline void clear_has_default_handler_ptr();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pjcore::LiveHttpPathHandler_PathHandlerEntry > map_;
  ::google::protobuf::uint64 default_handler_ptr_;
  friend void  protobuf_AddDesc_pjcore_2flive_5fhttp_2eproto();
  friend void protobuf_AssignDesc_pjcore_2flive_5fhttp_2eproto();
  friend void protobuf_ShutdownFile_pjcore_2flive_5fhttp_2eproto();

  void InitAsDefaultInstance();
  static LiveHttpPathHandler* default_instance_;
};
// ===================================================================


// ===================================================================

// LiveHttpRequest

// optional uint64 ptr = 1;
inline bool LiveHttpRequest::has_ptr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LiveHttpRequest::set_has_ptr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LiveHttpRequest::clear_has_ptr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LiveHttpRequest::clear_ptr() {
  ptr_ = GOOGLE_ULONGLONG(0);
  clear_has_ptr();
}
inline ::google::protobuf::uint64 LiveHttpRequest::ptr() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpRequest.ptr)
  return ptr_;
}
inline void LiveHttpRequest::set_ptr(::google::protobuf::uint64 value) {
  set_has_ptr();
  ptr_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpRequest.ptr)
}

// optional int32 method = 2;
inline bool LiveHttpRequest::has_method() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LiveHttpRequest::set_has_method() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LiveHttpRequest::clear_has_method() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LiveHttpRequest::clear_method() {
  method_ = 0;
  clear_has_method();
}
inline ::google::protobuf::int32 LiveHttpRequest::method() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpRequest.method)
  return method_;
}
inline void LiveHttpRequest::set_method(::google::protobuf::int32 value) {
  set_has_method();
  method_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpRequest.method)
}

// optional string method_str = 3;
inline bool LiveHttpRequest::has_method_str() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LiveHttpRequest::set_has_method_str() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LiveHttpRequest::clear_has_method_str() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LiveHttpRequest::clear_method_str() {
  method_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_method_str();
}
inline const ::std::string& LiveHttpRequest::method_str() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpRequest.method_str)
  return method_str_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LiveHttpRequest::set_method_str(const ::std::string& value) {
  set_has_method_str();
  method_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpRequest.method_str)
}
inline void LiveHttpRequest::set_method_str(const char* value) {
  set_has_method_str();
  method_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pjcore.LiveHttpRequest.method_str)
}
inline void LiveHttpRequest::set_method_str(const char* value, size_t size) {
  set_has_method_str();
  method_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pjcore.LiveHttpRequest.method_str)
}
inline ::std::string* LiveHttpRequest::mutable_method_str() {
  set_has_method_str();
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpRequest.method_str)
  return method_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LiveHttpRequest::release_method_str() {
  clear_has_method_str();
  return method_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LiveHttpRequest::set_allocated_method_str(::std::string* method_str) {
  if (method_str != NULL) {
    set_has_method_str();
  } else {
    clear_has_method_str();
  }
  method_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method_str);
  // @@protoc_insertion_point(field_set_allocated:pjcore.LiveHttpRequest.method_str)
}

// optional string url = 4;
inline bool LiveHttpRequest::has_url() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LiveHttpRequest::set_has_url() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LiveHttpRequest::clear_has_url() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LiveHttpRequest::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& LiveHttpRequest::url() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpRequest.url)
  return url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LiveHttpRequest::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpRequest.url)
}
inline void LiveHttpRequest::set_url(const char* value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pjcore.LiveHttpRequest.url)
}
inline void LiveHttpRequest::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pjcore.LiveHttpRequest.url)
}
inline ::std::string* LiveHttpRequest::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpRequest.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LiveHttpRequest::release_url() {
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LiveHttpRequest::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:pjcore.LiveHttpRequest.url)
}

// optional .pjcore.ParsedUrl parsed_url = 5;
inline bool LiveHttpRequest::has_parsed_url() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LiveHttpRequest::set_has_parsed_url() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LiveHttpRequest::clear_has_parsed_url() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LiveHttpRequest::clear_parsed_url() {
  if (parsed_url_ != NULL) parsed_url_->::pjcore::ParsedUrl::Clear();
  clear_has_parsed_url();
}
inline const ::pjcore::ParsedUrl& LiveHttpRequest::parsed_url() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpRequest.parsed_url)
  return parsed_url_ != NULL ? *parsed_url_ : *default_instance_->parsed_url_;
}
inline ::pjcore::ParsedUrl* LiveHttpRequest::mutable_parsed_url() {
  set_has_parsed_url();
  if (parsed_url_ == NULL) {
    parsed_url_ = new ::pjcore::ParsedUrl;
  }
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpRequest.parsed_url)
  return parsed_url_;
}
inline ::pjcore::ParsedUrl* LiveHttpRequest::release_parsed_url() {
  clear_has_parsed_url();
  ::pjcore::ParsedUrl* temp = parsed_url_;
  parsed_url_ = NULL;
  return temp;
}
inline void LiveHttpRequest::set_allocated_parsed_url(::pjcore::ParsedUrl* parsed_url) {
  delete parsed_url_;
  parsed_url_ = parsed_url;
  if (parsed_url) {
    set_has_parsed_url();
  } else {
    clear_has_parsed_url();
  }
  // @@protoc_insertion_point(field_set_allocated:pjcore.LiveHttpRequest.parsed_url)
}

// optional .pjcore.HttpVersion http_version = 6;
inline bool LiveHttpRequest::has_http_version() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LiveHttpRequest::set_has_http_version() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LiveHttpRequest::clear_has_http_version() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LiveHttpRequest::clear_http_version() {
  if (http_version_ != NULL) http_version_->::pjcore::HttpVersion::Clear();
  clear_has_http_version();
}
inline const ::pjcore::HttpVersion& LiveHttpRequest::http_version() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpRequest.http_version)
  return http_version_ != NULL ? *http_version_ : *default_instance_->http_version_;
}
inline ::pjcore::HttpVersion* LiveHttpRequest::mutable_http_version() {
  set_has_http_version();
  if (http_version_ == NULL) {
    http_version_ = new ::pjcore::HttpVersion;
  }
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpRequest.http_version)
  return http_version_;
}
inline ::pjcore::HttpVersion* LiveHttpRequest::release_http_version() {
  clear_has_http_version();
  ::pjcore::HttpVersion* temp = http_version_;
  http_version_ = NULL;
  return temp;
}
inline void LiveHttpRequest::set_allocated_http_version(::pjcore::HttpVersion* http_version) {
  delete http_version_;
  http_version_ = http_version;
  if (http_version) {
    set_has_http_version();
  } else {
    clear_has_http_version();
  }
  // @@protoc_insertion_point(field_set_allocated:pjcore.LiveHttpRequest.http_version)
}

// repeated .pjcore.HttpHeader headers = 7;
inline int LiveHttpRequest::headers_size() const {
  return headers_.size();
}
inline void LiveHttpRequest::clear_headers() {
  headers_.Clear();
}
inline const ::pjcore::HttpHeader& LiveHttpRequest::headers(int index) const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpRequest.headers)
  return headers_.Get(index);
}
inline ::pjcore::HttpHeader* LiveHttpRequest::mutable_headers(int index) {
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpRequest.headers)
  return headers_.Mutable(index);
}
inline ::pjcore::HttpHeader* LiveHttpRequest::add_headers() {
  // @@protoc_insertion_point(field_add:pjcore.LiveHttpRequest.headers)
  return headers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pjcore::HttpHeader >&
LiveHttpRequest::headers() const {
  // @@protoc_insertion_point(field_list:pjcore.LiveHttpRequest.headers)
  return headers_;
}
inline ::google::protobuf::RepeatedPtrField< ::pjcore::HttpHeader >*
LiveHttpRequest::mutable_headers() {
  // @@protoc_insertion_point(field_mutable_list:pjcore.LiveHttpRequest.headers)
  return &headers_;
}

// optional .pjcore.LiveContent content = 8;
inline bool LiveHttpRequest::has_content() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LiveHttpRequest::set_has_content() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LiveHttpRequest::clear_has_content() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LiveHttpRequest::clear_content() {
  if (content_ != NULL) content_->::pjcore::LiveContent::Clear();
  clear_has_content();
}
inline const ::pjcore::LiveContent& LiveHttpRequest::content() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpRequest.content)
  return content_ != NULL ? *content_ : *default_instance_->content_;
}
inline ::pjcore::LiveContent* LiveHttpRequest::mutable_content() {
  set_has_content();
  if (content_ == NULL) {
    content_ = new ::pjcore::LiveContent;
  }
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpRequest.content)
  return content_;
}
inline ::pjcore::LiveContent* LiveHttpRequest::release_content() {
  clear_has_content();
  ::pjcore::LiveContent* temp = content_;
  content_ = NULL;
  return temp;
}
inline void LiveHttpRequest::set_allocated_content(::pjcore::LiveContent* content) {
  delete content_;
  content_ = content;
  if (content) {
    set_has_content();
  } else {
    clear_has_content();
  }
  // @@protoc_insertion_point(field_set_allocated:pjcore.LiveHttpRequest.content)
}

// -------------------------------------------------------------------

// LiveHttpResponse

// optional uint64 ptr = 1;
inline bool LiveHttpResponse::has_ptr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LiveHttpResponse::set_has_ptr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LiveHttpResponse::clear_has_ptr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LiveHttpResponse::clear_ptr() {
  ptr_ = GOOGLE_ULONGLONG(0);
  clear_has_ptr();
}
inline ::google::protobuf::uint64 LiveHttpResponse::ptr() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpResponse.ptr)
  return ptr_;
}
inline void LiveHttpResponse::set_ptr(::google::protobuf::uint64 value) {
  set_has_ptr();
  ptr_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpResponse.ptr)
}

// optional .pjcore.HttpVersion http_version = 2;
inline bool LiveHttpResponse::has_http_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LiveHttpResponse::set_has_http_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LiveHttpResponse::clear_has_http_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LiveHttpResponse::clear_http_version() {
  if (http_version_ != NULL) http_version_->::pjcore::HttpVersion::Clear();
  clear_has_http_version();
}
inline const ::pjcore::HttpVersion& LiveHttpResponse::http_version() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpResponse.http_version)
  return http_version_ != NULL ? *http_version_ : *default_instance_->http_version_;
}
inline ::pjcore::HttpVersion* LiveHttpResponse::mutable_http_version() {
  set_has_http_version();
  if (http_version_ == NULL) {
    http_version_ = new ::pjcore::HttpVersion;
  }
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpResponse.http_version)
  return http_version_;
}
inline ::pjcore::HttpVersion* LiveHttpResponse::release_http_version() {
  clear_has_http_version();
  ::pjcore::HttpVersion* temp = http_version_;
  http_version_ = NULL;
  return temp;
}
inline void LiveHttpResponse::set_allocated_http_version(::pjcore::HttpVersion* http_version) {
  delete http_version_;
  http_version_ = http_version;
  if (http_version) {
    set_has_http_version();
  } else {
    clear_has_http_version();
  }
  // @@protoc_insertion_point(field_set_allocated:pjcore.LiveHttpResponse.http_version)
}

// optional .pjcore.HttpStatusCode status_code = 3;
inline bool LiveHttpResponse::has_status_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LiveHttpResponse::set_has_status_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LiveHttpResponse::clear_has_status_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LiveHttpResponse::clear_status_code() {
  status_code_ = 100;
  clear_has_status_code();
}
inline ::pjcore::HttpStatusCode LiveHttpResponse::status_code() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpResponse.status_code)
  return static_cast< ::pjcore::HttpStatusCode >(status_code_);
}
inline void LiveHttpResponse::set_status_code(::pjcore::HttpStatusCode value) {
  assert(::pjcore::HttpStatusCode_IsValid(value));
  set_has_status_code();
  status_code_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpResponse.status_code)
}

// repeated .pjcore.HttpHeader headers = 4;
inline int LiveHttpResponse::headers_size() const {
  return headers_.size();
}
inline void LiveHttpResponse::clear_headers() {
  headers_.Clear();
}
inline const ::pjcore::HttpHeader& LiveHttpResponse::headers(int index) const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpResponse.headers)
  return headers_.Get(index);
}
inline ::pjcore::HttpHeader* LiveHttpResponse::mutable_headers(int index) {
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpResponse.headers)
  return headers_.Mutable(index);
}
inline ::pjcore::HttpHeader* LiveHttpResponse::add_headers() {
  // @@protoc_insertion_point(field_add:pjcore.LiveHttpResponse.headers)
  return headers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pjcore::HttpHeader >&
LiveHttpResponse::headers() const {
  // @@protoc_insertion_point(field_list:pjcore.LiveHttpResponse.headers)
  return headers_;
}
inline ::google::protobuf::RepeatedPtrField< ::pjcore::HttpHeader >*
LiveHttpResponse::mutable_headers() {
  // @@protoc_insertion_point(field_mutable_list:pjcore.LiveHttpResponse.headers)
  return &headers_;
}

// optional .pjcore.LiveContent content = 5;
inline bool LiveHttpResponse::has_content() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LiveHttpResponse::set_has_content() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LiveHttpResponse::clear_has_content() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LiveHttpResponse::clear_content() {
  if (content_ != NULL) content_->::pjcore::LiveContent::Clear();
  clear_has_content();
}
inline const ::pjcore::LiveContent& LiveHttpResponse::content() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpResponse.content)
  return content_ != NULL ? *content_ : *default_instance_->content_;
}
inline ::pjcore::LiveContent* LiveHttpResponse::mutable_content() {
  set_has_content();
  if (content_ == NULL) {
    content_ = new ::pjcore::LiveContent;
  }
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpResponse.content)
  return content_;
}
inline ::pjcore::LiveContent* LiveHttpResponse::release_content() {
  clear_has_content();
  ::pjcore::LiveContent* temp = content_;
  content_ = NULL;
  return temp;
}
inline void LiveHttpResponse::set_allocated_content(::pjcore::LiveContent* content) {
  delete content_;
  content_ = content;
  if (content) {
    set_has_content();
  } else {
    clear_has_content();
  }
  // @@protoc_insertion_point(field_set_allocated:pjcore.LiveHttpResponse.content)
}

// -------------------------------------------------------------------

// LiveHttpParser

// optional uint64 ptr = 1;
inline bool LiveHttpParser::has_ptr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LiveHttpParser::set_has_ptr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LiveHttpParser::clear_has_ptr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LiveHttpParser::clear_ptr() {
  ptr_ = GOOGLE_ULONGLONG(0);
  clear_has_ptr();
}
inline ::google::protobuf::uint64 LiveHttpParser::ptr() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpParser.ptr)
  return ptr_;
}
inline void LiveHttpParser::set_ptr(::google::protobuf::uint64 value) {
  set_has_ptr();
  ptr_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpParser.ptr)
}

// optional .pjcore.HttpParserType type = 2;
inline bool LiveHttpParser::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LiveHttpParser::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LiveHttpParser::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LiveHttpParser::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::pjcore::HttpParserType LiveHttpParser::type() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpParser.type)
  return static_cast< ::pjcore::HttpParserType >(type_);
}
inline void LiveHttpParser::set_type(::pjcore::HttpParserType value) {
  assert(::pjcore::HttpParserType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpParser.type)
}

// optional int32 flags = 3;
inline bool LiveHttpParser::has_flags() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LiveHttpParser::set_has_flags() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LiveHttpParser::clear_has_flags() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LiveHttpParser::clear_flags() {
  flags_ = 0;
  clear_has_flags();
}
inline ::google::protobuf::int32 LiveHttpParser::flags() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpParser.flags)
  return flags_;
}
inline void LiveHttpParser::set_flags(::google::protobuf::int32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpParser.flags)
}

// optional bool flag_chunked = 4;
inline bool LiveHttpParser::has_flag_chunked() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LiveHttpParser::set_has_flag_chunked() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LiveHttpParser::clear_has_flag_chunked() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LiveHttpParser::clear_flag_chunked() {
  flag_chunked_ = false;
  clear_has_flag_chunked();
}
inline bool LiveHttpParser::flag_chunked() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpParser.flag_chunked)
  return flag_chunked_;
}
inline void LiveHttpParser::set_flag_chunked(bool value) {
  set_has_flag_chunked();
  flag_chunked_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpParser.flag_chunked)
}

// optional bool flag_connection_keep_alive = 5;
inline bool LiveHttpParser::has_flag_connection_keep_alive() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LiveHttpParser::set_has_flag_connection_keep_alive() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LiveHttpParser::clear_has_flag_connection_keep_alive() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LiveHttpParser::clear_flag_connection_keep_alive() {
  flag_connection_keep_alive_ = false;
  clear_has_flag_connection_keep_alive();
}
inline bool LiveHttpParser::flag_connection_keep_alive() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpParser.flag_connection_keep_alive)
  return flag_connection_keep_alive_;
}
inline void LiveHttpParser::set_flag_connection_keep_alive(bool value) {
  set_has_flag_connection_keep_alive();
  flag_connection_keep_alive_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpParser.flag_connection_keep_alive)
}

// optional bool flag_connection_close = 6;
inline bool LiveHttpParser::has_flag_connection_close() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LiveHttpParser::set_has_flag_connection_close() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LiveHttpParser::clear_has_flag_connection_close() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LiveHttpParser::clear_flag_connection_close() {
  flag_connection_close_ = false;
  clear_has_flag_connection_close();
}
inline bool LiveHttpParser::flag_connection_close() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpParser.flag_connection_close)
  return flag_connection_close_;
}
inline void LiveHttpParser::set_flag_connection_close(bool value) {
  set_has_flag_connection_close();
  flag_connection_close_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpParser.flag_connection_close)
}

// optional bool flag_trailing = 7;
inline bool LiveHttpParser::has_flag_trailing() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LiveHttpParser::set_has_flag_trailing() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LiveHttpParser::clear_has_flag_trailing() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LiveHttpParser::clear_flag_trailing() {
  flag_trailing_ = false;
  clear_has_flag_trailing();
}
inline bool LiveHttpParser::flag_trailing() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpParser.flag_trailing)
  return flag_trailing_;
}
inline void LiveHttpParser::set_flag_trailing(bool value) {
  set_has_flag_trailing();
  flag_trailing_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpParser.flag_trailing)
}

// optional bool flag_upgrade = 8;
inline bool LiveHttpParser::has_flag_upgrade() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LiveHttpParser::set_has_flag_upgrade() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LiveHttpParser::clear_has_flag_upgrade() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LiveHttpParser::clear_flag_upgrade() {
  flag_upgrade_ = false;
  clear_has_flag_upgrade();
}
inline bool LiveHttpParser::flag_upgrade() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpParser.flag_upgrade)
  return flag_upgrade_;
}
inline void LiveHttpParser::set_flag_upgrade(bool value) {
  set_has_flag_upgrade();
  flag_upgrade_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpParser.flag_upgrade)
}

// optional bool flag_skipbody = 9;
inline bool LiveHttpParser::has_flag_skipbody() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void LiveHttpParser::set_has_flag_skipbody() {
  _has_bits_[0] |= 0x00000100u;
}
inline void LiveHttpParser::clear_has_flag_skipbody() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void LiveHttpParser::clear_flag_skipbody() {
  flag_skipbody_ = false;
  clear_has_flag_skipbody();
}
inline bool LiveHttpParser::flag_skipbody() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpParser.flag_skipbody)
  return flag_skipbody_;
}
inline void LiveHttpParser::set_flag_skipbody(bool value) {
  set_has_flag_skipbody();
  flag_skipbody_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpParser.flag_skipbody)
}

// optional int32 state = 10;
inline bool LiveHttpParser::has_state() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void LiveHttpParser::set_has_state() {
  _has_bits_[0] |= 0x00000200u;
}
inline void LiveHttpParser::clear_has_state() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void LiveHttpParser::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 LiveHttpParser::state() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpParser.state)
  return state_;
}
inline void LiveHttpParser::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpParser.state)
}

// optional int32 header_state = 11;
inline bool LiveHttpParser::has_header_state() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void LiveHttpParser::set_has_header_state() {
  _has_bits_[0] |= 0x00000400u;
}
inline void LiveHttpParser::clear_has_header_state() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void LiveHttpParser::clear_header_state() {
  header_state_ = 0;
  clear_has_header_state();
}
inline ::google::protobuf::int32 LiveHttpParser::header_state() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpParser.header_state)
  return header_state_;
}
inline void LiveHttpParser::set_header_state(::google::protobuf::int32 value) {
  set_has_header_state();
  header_state_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpParser.header_state)
}

// optional int32 index = 12;
inline bool LiveHttpParser::has_index() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void LiveHttpParser::set_has_index() {
  _has_bits_[0] |= 0x00000800u;
}
inline void LiveHttpParser::clear_has_index() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void LiveHttpParser::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 LiveHttpParser::index() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpParser.index)
  return index_;
}
inline void LiveHttpParser::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpParser.index)
}

// optional uint32 nread = 13;
inline bool LiveHttpParser::has_nread() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void LiveHttpParser::set_has_nread() {
  _has_bits_[0] |= 0x00001000u;
}
inline void LiveHttpParser::clear_has_nread() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void LiveHttpParser::clear_nread() {
  nread_ = 0u;
  clear_has_nread();
}
inline ::google::protobuf::uint32 LiveHttpParser::nread() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpParser.nread)
  return nread_;
}
inline void LiveHttpParser::set_nread(::google::protobuf::uint32 value) {
  set_has_nread();
  nread_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpParser.nread)
}

// optional uint64 content_length = 14;
inline bool LiveHttpParser::has_content_length() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void LiveHttpParser::set_has_content_length() {
  _has_bits_[0] |= 0x00002000u;
}
inline void LiveHttpParser::clear_has_content_length() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void LiveHttpParser::clear_content_length() {
  content_length_ = GOOGLE_ULONGLONG(0);
  clear_has_content_length();
}
inline ::google::protobuf::uint64 LiveHttpParser::content_length() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpParser.content_length)
  return content_length_;
}
inline void LiveHttpParser::set_content_length(::google::protobuf::uint64 value) {
  set_has_content_length();
  content_length_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpParser.content_length)
}

// optional uint32 http_major = 15;
inline bool LiveHttpParser::has_http_major() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void LiveHttpParser::set_has_http_major() {
  _has_bits_[0] |= 0x00004000u;
}
inline void LiveHttpParser::clear_has_http_major() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void LiveHttpParser::clear_http_major() {
  http_major_ = 0u;
  clear_has_http_major();
}
inline ::google::protobuf::uint32 LiveHttpParser::http_major() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpParser.http_major)
  return http_major_;
}
inline void LiveHttpParser::set_http_major(::google::protobuf::uint32 value) {
  set_has_http_major();
  http_major_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpParser.http_major)
}

// optional uint32 http_minor = 16;
inline bool LiveHttpParser::has_http_minor() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void LiveHttpParser::set_has_http_minor() {
  _has_bits_[0] |= 0x00008000u;
}
inline void LiveHttpParser::clear_has_http_minor() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void LiveHttpParser::clear_http_minor() {
  http_minor_ = 0u;
  clear_has_http_minor();
}
inline ::google::protobuf::uint32 LiveHttpParser::http_minor() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpParser.http_minor)
  return http_minor_;
}
inline void LiveHttpParser::set_http_minor(::google::protobuf::uint32 value) {
  set_has_http_minor();
  http_minor_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpParser.http_minor)
}

// optional int32 status_code = 17;
inline bool LiveHttpParser::has_status_code() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void LiveHttpParser::set_has_status_code() {
  _has_bits_[0] |= 0x00010000u;
}
inline void LiveHttpParser::clear_has_status_code() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void LiveHttpParser::clear_status_code() {
  status_code_ = 0;
  clear_has_status_code();
}
inline ::google::protobuf::int32 LiveHttpParser::status_code() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpParser.status_code)
  return status_code_;
}
inline void LiveHttpParser::set_status_code(::google::protobuf::int32 value) {
  set_has_status_code();
  status_code_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpParser.status_code)
}

// optional string status_code_str = 18;
inline bool LiveHttpParser::has_status_code_str() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void LiveHttpParser::set_has_status_code_str() {
  _has_bits_[0] |= 0x00020000u;
}
inline void LiveHttpParser::clear_has_status_code_str() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void LiveHttpParser::clear_status_code_str() {
  status_code_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_status_code_str();
}
inline const ::std::string& LiveHttpParser::status_code_str() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpParser.status_code_str)
  return status_code_str_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LiveHttpParser::set_status_code_str(const ::std::string& value) {
  set_has_status_code_str();
  status_code_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpParser.status_code_str)
}
inline void LiveHttpParser::set_status_code_str(const char* value) {
  set_has_status_code_str();
  status_code_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pjcore.LiveHttpParser.status_code_str)
}
inline void LiveHttpParser::set_status_code_str(const char* value, size_t size) {
  set_has_status_code_str();
  status_code_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pjcore.LiveHttpParser.status_code_str)
}
inline ::std::string* LiveHttpParser::mutable_status_code_str() {
  set_has_status_code_str();
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpParser.status_code_str)
  return status_code_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LiveHttpParser::release_status_code_str() {
  clear_has_status_code_str();
  return status_code_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LiveHttpParser::set_allocated_status_code_str(::std::string* status_code_str) {
  if (status_code_str != NULL) {
    set_has_status_code_str();
  } else {
    clear_has_status_code_str();
  }
  status_code_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status_code_str);
  // @@protoc_insertion_point(field_set_allocated:pjcore.LiveHttpParser.status_code_str)
}

// optional int32 method = 19;
inline bool LiveHttpParser::has_method() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void LiveHttpParser::set_has_method() {
  _has_bits_[0] |= 0x00040000u;
}
inline void LiveHttpParser::clear_has_method() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void LiveHttpParser::clear_method() {
  method_ = 0;
  clear_has_method();
}
inline ::google::protobuf::int32 LiveHttpParser::method() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpParser.method)
  return method_;
}
inline void LiveHttpParser::set_method(::google::protobuf::int32 value) {
  set_has_method();
  method_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpParser.method)
}

// optional string method_str = 20;
inline bool LiveHttpParser::has_method_str() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void LiveHttpParser::set_has_method_str() {
  _has_bits_[0] |= 0x00080000u;
}
inline void LiveHttpParser::clear_has_method_str() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void LiveHttpParser::clear_method_str() {
  method_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_method_str();
}
inline const ::std::string& LiveHttpParser::method_str() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpParser.method_str)
  return method_str_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LiveHttpParser::set_method_str(const ::std::string& value) {
  set_has_method_str();
  method_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpParser.method_str)
}
inline void LiveHttpParser::set_method_str(const char* value) {
  set_has_method_str();
  method_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pjcore.LiveHttpParser.method_str)
}
inline void LiveHttpParser::set_method_str(const char* value, size_t size) {
  set_has_method_str();
  method_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pjcore.LiveHttpParser.method_str)
}
inline ::std::string* LiveHttpParser::mutable_method_str() {
  set_has_method_str();
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpParser.method_str)
  return method_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LiveHttpParser::release_method_str() {
  clear_has_method_str();
  return method_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LiveHttpParser::set_allocated_method_str(::std::string* method_str) {
  if (method_str != NULL) {
    set_has_method_str();
  } else {
    clear_has_method_str();
  }
  method_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method_str);
  // @@protoc_insertion_point(field_set_allocated:pjcore.LiveHttpParser.method_str)
}

// optional int32 http_errno = 21;
inline bool LiveHttpParser::has_http_errno() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void LiveHttpParser::set_has_http_errno() {
  _has_bits_[0] |= 0x00100000u;
}
inline void LiveHttpParser::clear_has_http_errno() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void LiveHttpParser::clear_http_errno() {
  http_errno_ = 0;
  clear_has_http_errno();
}
inline ::google::protobuf::int32 LiveHttpParser::http_errno() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpParser.http_errno)
  return http_errno_;
}
inline void LiveHttpParser::set_http_errno(::google::protobuf::int32 value) {
  set_has_http_errno();
  http_errno_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpParser.http_errno)
}

// optional string http_errno_description = 22;
inline bool LiveHttpParser::has_http_errno_description() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void LiveHttpParser::set_has_http_errno_description() {
  _has_bits_[0] |= 0x00200000u;
}
inline void LiveHttpParser::clear_has_http_errno_description() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void LiveHttpParser::clear_http_errno_description() {
  http_errno_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_http_errno_description();
}
inline const ::std::string& LiveHttpParser::http_errno_description() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpParser.http_errno_description)
  return http_errno_description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LiveHttpParser::set_http_errno_description(const ::std::string& value) {
  set_has_http_errno_description();
  http_errno_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpParser.http_errno_description)
}
inline void LiveHttpParser::set_http_errno_description(const char* value) {
  set_has_http_errno_description();
  http_errno_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pjcore.LiveHttpParser.http_errno_description)
}
inline void LiveHttpParser::set_http_errno_description(const char* value, size_t size) {
  set_has_http_errno_description();
  http_errno_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pjcore.LiveHttpParser.http_errno_description)
}
inline ::std::string* LiveHttpParser::mutable_http_errno_description() {
  set_has_http_errno_description();
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpParser.http_errno_description)
  return http_errno_description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LiveHttpParser::release_http_errno_description() {
  clear_has_http_errno_description();
  return http_errno_description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LiveHttpParser::set_allocated_http_errno_description(::std::string* http_errno_description) {
  if (http_errno_description != NULL) {
    set_has_http_errno_description();
  } else {
    clear_has_http_errno_description();
  }
  http_errno_description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), http_errno_description);
  // @@protoc_insertion_point(field_set_allocated:pjcore.LiveHttpParser.http_errno_description)
}

// optional uint32 upgrade = 23;
inline bool LiveHttpParser::has_upgrade() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void LiveHttpParser::set_has_upgrade() {
  _has_bits_[0] |= 0x00400000u;
}
inline void LiveHttpParser::clear_has_upgrade() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void LiveHttpParser::clear_upgrade() {
  upgrade_ = 0u;
  clear_has_upgrade();
}
inline ::google::protobuf::uint32 LiveHttpParser::upgrade() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpParser.upgrade)
  return upgrade_;
}
inline void LiveHttpParser::set_upgrade(::google::protobuf::uint32 value) {
  set_has_upgrade();
  upgrade_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpParser.upgrade)
}

// optional uint64 data_ptr = 24;
inline bool LiveHttpParser::has_data_ptr() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void LiveHttpParser::set_has_data_ptr() {
  _has_bits_[0] |= 0x00800000u;
}
inline void LiveHttpParser::clear_has_data_ptr() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void LiveHttpParser::clear_data_ptr() {
  data_ptr_ = GOOGLE_ULONGLONG(0);
  clear_has_data_ptr();
}
inline ::google::protobuf::uint64 LiveHttpParser::data_ptr() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpParser.data_ptr)
  return data_ptr_;
}
inline void LiveHttpParser::set_data_ptr(::google::protobuf::uint64 value) {
  set_has_data_ptr();
  data_ptr_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpParser.data_ptr)
}

// -------------------------------------------------------------------

// LiveHttpParserPlusPlus

// optional .pjcore.HttpParserType type = 1;
inline bool LiveHttpParserPlusPlus::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LiveHttpParserPlusPlus::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LiveHttpParserPlusPlus::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LiveHttpParserPlusPlus::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::pjcore::HttpParserType LiveHttpParserPlusPlus::type() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpParserPlusPlus.type)
  return static_cast< ::pjcore::HttpParserType >(type_);
}
inline void LiveHttpParserPlusPlus::set_type(::pjcore::HttpParserType value) {
  assert(::pjcore::HttpParserType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpParserPlusPlus.type)
}

// optional .pjcore.LiveHttpRequest pending_request = 2;
inline bool LiveHttpParserPlusPlus::has_pending_request() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LiveHttpParserPlusPlus::set_has_pending_request() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LiveHttpParserPlusPlus::clear_has_pending_request() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LiveHttpParserPlusPlus::clear_pending_request() {
  if (pending_request_ != NULL) pending_request_->::pjcore::LiveHttpRequest::Clear();
  clear_has_pending_request();
}
inline const ::pjcore::LiveHttpRequest& LiveHttpParserPlusPlus::pending_request() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpParserPlusPlus.pending_request)
  return pending_request_ != NULL ? *pending_request_ : *default_instance_->pending_request_;
}
inline ::pjcore::LiveHttpRequest* LiveHttpParserPlusPlus::mutable_pending_request() {
  set_has_pending_request();
  if (pending_request_ == NULL) {
    pending_request_ = new ::pjcore::LiveHttpRequest;
  }
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpParserPlusPlus.pending_request)
  return pending_request_;
}
inline ::pjcore::LiveHttpRequest* LiveHttpParserPlusPlus::release_pending_request() {
  clear_has_pending_request();
  ::pjcore::LiveHttpRequest* temp = pending_request_;
  pending_request_ = NULL;
  return temp;
}
inline void LiveHttpParserPlusPlus::set_allocated_pending_request(::pjcore::LiveHttpRequest* pending_request) {
  delete pending_request_;
  pending_request_ = pending_request;
  if (pending_request) {
    set_has_pending_request();
  } else {
    clear_has_pending_request();
  }
  // @@protoc_insertion_point(field_set_allocated:pjcore.LiveHttpParserPlusPlus.pending_request)
}

// optional .pjcore.LiveHttpResponse pending_response = 3;
inline bool LiveHttpParserPlusPlus::has_pending_response() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LiveHttpParserPlusPlus::set_has_pending_response() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LiveHttpParserPlusPlus::clear_has_pending_response() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LiveHttpParserPlusPlus::clear_pending_response() {
  if (pending_response_ != NULL) pending_response_->::pjcore::LiveHttpResponse::Clear();
  clear_has_pending_response();
}
inline const ::pjcore::LiveHttpResponse& LiveHttpParserPlusPlus::pending_response() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpParserPlusPlus.pending_response)
  return pending_response_ != NULL ? *pending_response_ : *default_instance_->pending_response_;
}
inline ::pjcore::LiveHttpResponse* LiveHttpParserPlusPlus::mutable_pending_response() {
  set_has_pending_response();
  if (pending_response_ == NULL) {
    pending_response_ = new ::pjcore::LiveHttpResponse;
  }
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpParserPlusPlus.pending_response)
  return pending_response_;
}
inline ::pjcore::LiveHttpResponse* LiveHttpParserPlusPlus::release_pending_response() {
  clear_has_pending_response();
  ::pjcore::LiveHttpResponse* temp = pending_response_;
  pending_response_ = NULL;
  return temp;
}
inline void LiveHttpParserPlusPlus::set_allocated_pending_response(::pjcore::LiveHttpResponse* pending_response) {
  delete pending_response_;
  pending_response_ = pending_response;
  if (pending_response) {
    set_has_pending_response();
  } else {
    clear_has_pending_response();
  }
  // @@protoc_insertion_point(field_set_allocated:pjcore.LiveHttpParserPlusPlus.pending_response)
}

// optional .pjcore.LiveHttpParser parser = 4;
inline bool LiveHttpParserPlusPlus::has_parser() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LiveHttpParserPlusPlus::set_has_parser() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LiveHttpParserPlusPlus::clear_has_parser() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LiveHttpParserPlusPlus::clear_parser() {
  if (parser_ != NULL) parser_->::pjcore::LiveHttpParser::Clear();
  clear_has_parser();
}
inline const ::pjcore::LiveHttpParser& LiveHttpParserPlusPlus::parser() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpParserPlusPlus.parser)
  return parser_ != NULL ? *parser_ : *default_instance_->parser_;
}
inline ::pjcore::LiveHttpParser* LiveHttpParserPlusPlus::mutable_parser() {
  set_has_parser();
  if (parser_ == NULL) {
    parser_ = new ::pjcore::LiveHttpParser;
  }
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpParserPlusPlus.parser)
  return parser_;
}
inline ::pjcore::LiveHttpParser* LiveHttpParserPlusPlus::release_parser() {
  clear_has_parser();
  ::pjcore::LiveHttpParser* temp = parser_;
  parser_ = NULL;
  return temp;
}
inline void LiveHttpParserPlusPlus::set_allocated_parser(::pjcore::LiveHttpParser* parser) {
  delete parser_;
  parser_ = parser;
  if (parser) {
    set_has_parser();
  } else {
    clear_has_parser();
  }
  // @@protoc_insertion_point(field_set_allocated:pjcore.LiveHttpParserPlusPlus.parser)
}

// optional uint64 error_ptr = 5;
inline bool LiveHttpParserPlusPlus::has_error_ptr() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LiveHttpParserPlusPlus::set_has_error_ptr() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LiveHttpParserPlusPlus::clear_has_error_ptr() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LiveHttpParserPlusPlus::clear_error_ptr() {
  error_ptr_ = GOOGLE_ULONGLONG(0);
  clear_has_error_ptr();
}
inline ::google::protobuf::uint64 LiveHttpParserPlusPlus::error_ptr() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpParserPlusPlus.error_ptr)
  return error_ptr_;
}
inline void LiveHttpParserPlusPlus::set_error_ptr(::google::protobuf::uint64 value) {
  set_has_error_ptr();
  error_ptr_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpParserPlusPlus.error_ptr)
}

// repeated .pjcore.LiveHttpRequest request_queue = 6;
inline int LiveHttpParserPlusPlus::request_queue_size() const {
  return request_queue_.size();
}
inline void LiveHttpParserPlusPlus::clear_request_queue() {
  request_queue_.Clear();
}
inline const ::pjcore::LiveHttpRequest& LiveHttpParserPlusPlus::request_queue(int index) const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpParserPlusPlus.request_queue)
  return request_queue_.Get(index);
}
inline ::pjcore::LiveHttpRequest* LiveHttpParserPlusPlus::mutable_request_queue(int index) {
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpParserPlusPlus.request_queue)
  return request_queue_.Mutable(index);
}
inline ::pjcore::LiveHttpRequest* LiveHttpParserPlusPlus::add_request_queue() {
  // @@protoc_insertion_point(field_add:pjcore.LiveHttpParserPlusPlus.request_queue)
  return request_queue_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pjcore::LiveHttpRequest >&
LiveHttpParserPlusPlus::request_queue() const {
  // @@protoc_insertion_point(field_list:pjcore.LiveHttpParserPlusPlus.request_queue)
  return request_queue_;
}
inline ::google::protobuf::RepeatedPtrField< ::pjcore::LiveHttpRequest >*
LiveHttpParserPlusPlus::mutable_request_queue() {
  // @@protoc_insertion_point(field_mutable_list:pjcore.LiveHttpParserPlusPlus.request_queue)
  return &request_queue_;
}

// repeated .pjcore.LiveHttpResponse response_queue = 7;
inline int LiveHttpParserPlusPlus::response_queue_size() const {
  return response_queue_.size();
}
inline void LiveHttpParserPlusPlus::clear_response_queue() {
  response_queue_.Clear();
}
inline const ::pjcore::LiveHttpResponse& LiveHttpParserPlusPlus::response_queue(int index) const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpParserPlusPlus.response_queue)
  return response_queue_.Get(index);
}
inline ::pjcore::LiveHttpResponse* LiveHttpParserPlusPlus::mutable_response_queue(int index) {
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpParserPlusPlus.response_queue)
  return response_queue_.Mutable(index);
}
inline ::pjcore::LiveHttpResponse* LiveHttpParserPlusPlus::add_response_queue() {
  // @@protoc_insertion_point(field_add:pjcore.LiveHttpParserPlusPlus.response_queue)
  return response_queue_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pjcore::LiveHttpResponse >&
LiveHttpParserPlusPlus::response_queue() const {
  // @@protoc_insertion_point(field_list:pjcore.LiveHttpParserPlusPlus.response_queue)
  return response_queue_;
}
inline ::google::protobuf::RepeatedPtrField< ::pjcore::LiveHttpResponse >*
LiveHttpParserPlusPlus::mutable_response_queue() {
  // @@protoc_insertion_point(field_mutable_list:pjcore.LiveHttpParserPlusPlus.response_queue)
  return &response_queue_;
}

// -------------------------------------------------------------------

// LiveHttpServerTransaction

// optional uint64 uv_ptr = 1;
inline bool LiveHttpServerTransaction::has_uv_ptr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LiveHttpServerTransaction::set_has_uv_ptr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LiveHttpServerTransaction::clear_has_uv_ptr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LiveHttpServerTransaction::clear_uv_ptr() {
  uv_ptr_ = GOOGLE_ULONGLONG(0);
  clear_has_uv_ptr();
}
inline ::google::protobuf::uint64 LiveHttpServerTransaction::uv_ptr() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpServerTransaction.uv_ptr)
  return uv_ptr_;
}
inline void LiveHttpServerTransaction::set_uv_ptr(::google::protobuf::uint64 value) {
  set_has_uv_ptr();
  uv_ptr_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpServerTransaction.uv_ptr)
}

// optional .pjcore.LiveHttpRequest request = 2;
inline bool LiveHttpServerTransaction::has_request() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LiveHttpServerTransaction::set_has_request() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LiveHttpServerTransaction::clear_has_request() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LiveHttpServerTransaction::clear_request() {
  if (request_ != NULL) request_->::pjcore::LiveHttpRequest::Clear();
  clear_has_request();
}
inline const ::pjcore::LiveHttpRequest& LiveHttpServerTransaction::request() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpServerTransaction.request)
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::pjcore::LiveHttpRequest* LiveHttpServerTransaction::mutable_request() {
  set_has_request();
  if (request_ == NULL) {
    request_ = new ::pjcore::LiveHttpRequest;
  }
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpServerTransaction.request)
  return request_;
}
inline ::pjcore::LiveHttpRequest* LiveHttpServerTransaction::release_request() {
  clear_has_request();
  ::pjcore::LiveHttpRequest* temp = request_;
  request_ = NULL;
  return temp;
}
inline void LiveHttpServerTransaction::set_allocated_request(::pjcore::LiveHttpRequest* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
  // @@protoc_insertion_point(field_set_allocated:pjcore.LiveHttpServerTransaction.request)
}

// optional .pjcore.LiveHttpResponse response = 3;
inline bool LiveHttpServerTransaction::has_response() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LiveHttpServerTransaction::set_has_response() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LiveHttpServerTransaction::clear_has_response() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LiveHttpServerTransaction::clear_response() {
  if (response_ != NULL) response_->::pjcore::LiveHttpResponse::Clear();
  clear_has_response();
}
inline const ::pjcore::LiveHttpResponse& LiveHttpServerTransaction::response() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpServerTransaction.response)
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::pjcore::LiveHttpResponse* LiveHttpServerTransaction::mutable_response() {
  set_has_response();
  if (response_ == NULL) {
    response_ = new ::pjcore::LiveHttpResponse;
  }
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpServerTransaction.response)
  return response_;
}
inline ::pjcore::LiveHttpResponse* LiveHttpServerTransaction::release_response() {
  clear_has_response();
  ::pjcore::LiveHttpResponse* temp = response_;
  response_ = NULL;
  return temp;
}
inline void LiveHttpServerTransaction::set_allocated_response(::pjcore::LiveHttpResponse* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
  // @@protoc_insertion_point(field_set_allocated:pjcore.LiveHttpServerTransaction.response)
}

// optional .pjcore.LiveCallback on_write_complete = 4;
inline bool LiveHttpServerTransaction::has_on_write_complete() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LiveHttpServerTransaction::set_has_on_write_complete() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LiveHttpServerTransaction::clear_has_on_write_complete() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LiveHttpServerTransaction::clear_on_write_complete() {
  if (on_write_complete_ != NULL) on_write_complete_->::pjcore::LiveCallback::Clear();
  clear_has_on_write_complete();
}
inline const ::pjcore::LiveCallback& LiveHttpServerTransaction::on_write_complete() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpServerTransaction.on_write_complete)
  return on_write_complete_ != NULL ? *on_write_complete_ : *default_instance_->on_write_complete_;
}
inline ::pjcore::LiveCallback* LiveHttpServerTransaction::mutable_on_write_complete() {
  set_has_on_write_complete();
  if (on_write_complete_ == NULL) {
    on_write_complete_ = new ::pjcore::LiveCallback;
  }
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpServerTransaction.on_write_complete)
  return on_write_complete_;
}
inline ::pjcore::LiveCallback* LiveHttpServerTransaction::release_on_write_complete() {
  clear_has_on_write_complete();
  ::pjcore::LiveCallback* temp = on_write_complete_;
  on_write_complete_ = NULL;
  return temp;
}
inline void LiveHttpServerTransaction::set_allocated_on_write_complete(::pjcore::LiveCallback* on_write_complete) {
  delete on_write_complete_;
  on_write_complete_ = on_write_complete;
  if (on_write_complete) {
    set_has_on_write_complete();
  } else {
    clear_has_on_write_complete();
  }
  // @@protoc_insertion_point(field_set_allocated:pjcore.LiveHttpServerTransaction.on_write_complete)
}

// optional string response_header = 5;
inline bool LiveHttpServerTransaction::has_response_header() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LiveHttpServerTransaction::set_has_response_header() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LiveHttpServerTransaction::clear_has_response_header() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LiveHttpServerTransaction::clear_response_header() {
  response_header_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_response_header();
}
inline const ::std::string& LiveHttpServerTransaction::response_header() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpServerTransaction.response_header)
  return response_header_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LiveHttpServerTransaction::set_response_header(const ::std::string& value) {
  set_has_response_header();
  response_header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpServerTransaction.response_header)
}
inline void LiveHttpServerTransaction::set_response_header(const char* value) {
  set_has_response_header();
  response_header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pjcore.LiveHttpServerTransaction.response_header)
}
inline void LiveHttpServerTransaction::set_response_header(const char* value, size_t size) {
  set_has_response_header();
  response_header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pjcore.LiveHttpServerTransaction.response_header)
}
inline ::std::string* LiveHttpServerTransaction::mutable_response_header() {
  set_has_response_header();
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpServerTransaction.response_header)
  return response_header_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LiveHttpServerTransaction::release_response_header() {
  clear_has_response_header();
  return response_header_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LiveHttpServerTransaction::set_allocated_response_header(::std::string* response_header) {
  if (response_header != NULL) {
    set_has_response_header();
  } else {
    clear_has_response_header();
  }
  response_header_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), response_header);
  // @@protoc_insertion_point(field_set_allocated:pjcore.LiveHttpServerTransaction.response_header)
}

// optional uint64 write_bufs_ptr = 6;
inline bool LiveHttpServerTransaction::has_write_bufs_ptr() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LiveHttpServerTransaction::set_has_write_bufs_ptr() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LiveHttpServerTransaction::clear_has_write_bufs_ptr() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LiveHttpServerTransaction::clear_write_bufs_ptr() {
  write_bufs_ptr_ = GOOGLE_ULONGLONG(0);
  clear_has_write_bufs_ptr();
}
inline ::google::protobuf::uint64 LiveHttpServerTransaction::write_bufs_ptr() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpServerTransaction.write_bufs_ptr)
  return write_bufs_ptr_;
}
inline void LiveHttpServerTransaction::set_write_bufs_ptr(::google::protobuf::uint64 value) {
  set_has_write_bufs_ptr();
  write_bufs_ptr_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpServerTransaction.write_bufs_ptr)
}

// repeated .pjcore.LiveUvBuf write_bufs = 7;
inline int LiveHttpServerTransaction::write_bufs_size() const {
  return write_bufs_.size();
}
inline void LiveHttpServerTransaction::clear_write_bufs() {
  write_bufs_.Clear();
}
inline const ::pjcore::LiveUvBuf& LiveHttpServerTransaction::write_bufs(int index) const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpServerTransaction.write_bufs)
  return write_bufs_.Get(index);
}
inline ::pjcore::LiveUvBuf* LiveHttpServerTransaction::mutable_write_bufs(int index) {
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpServerTransaction.write_bufs)
  return write_bufs_.Mutable(index);
}
inline ::pjcore::LiveUvBuf* LiveHttpServerTransaction::add_write_bufs() {
  // @@protoc_insertion_point(field_add:pjcore.LiveHttpServerTransaction.write_bufs)
  return write_bufs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pjcore::LiveUvBuf >&
LiveHttpServerTransaction::write_bufs() const {
  // @@protoc_insertion_point(field_list:pjcore.LiveHttpServerTransaction.write_bufs)
  return write_bufs_;
}
inline ::google::protobuf::RepeatedPtrField< ::pjcore::LiveUvBuf >*
LiveHttpServerTransaction::mutable_write_bufs() {
  // @@protoc_insertion_point(field_mutable_list:pjcore.LiveHttpServerTransaction.write_bufs)
  return &write_bufs_;
}

// optional uint64 write_req_ptr = 8;
inline bool LiveHttpServerTransaction::has_write_req_ptr() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LiveHttpServerTransaction::set_has_write_req_ptr() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LiveHttpServerTransaction::clear_has_write_req_ptr() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LiveHttpServerTransaction::clear_write_req_ptr() {
  write_req_ptr_ = GOOGLE_ULONGLONG(0);
  clear_has_write_req_ptr();
}
inline ::google::protobuf::uint64 LiveHttpServerTransaction::write_req_ptr() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpServerTransaction.write_req_ptr)
  return write_req_ptr_;
}
inline void LiveHttpServerTransaction::set_write_req_ptr(::google::protobuf::uint64 value) {
  set_has_write_req_ptr();
  write_req_ptr_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpServerTransaction.write_req_ptr)
}

// -------------------------------------------------------------------

// LiveHttpServerConnection

// optional uint64 shared_loop_ptr = 1;
inline bool LiveHttpServerConnection::has_shared_loop_ptr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LiveHttpServerConnection::set_has_shared_loop_ptr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LiveHttpServerConnection::clear_has_shared_loop_ptr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LiveHttpServerConnection::clear_shared_loop_ptr() {
  shared_loop_ptr_ = GOOGLE_ULONGLONG(0);
  clear_has_shared_loop_ptr();
}
inline ::google::protobuf::uint64 LiveHttpServerConnection::shared_loop_ptr() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpServerConnection.shared_loop_ptr)
  return shared_loop_ptr_;
}
inline void LiveHttpServerConnection::set_shared_loop_ptr(::google::protobuf::uint64 value) {
  set_has_shared_loop_ptr();
  shared_loop_ptr_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpServerConnection.shared_loop_ptr)
}

// optional uint64 pending_transaction_count = 2;
inline bool LiveHttpServerConnection::has_pending_transaction_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LiveHttpServerConnection::set_has_pending_transaction_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LiveHttpServerConnection::clear_has_pending_transaction_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LiveHttpServerConnection::clear_pending_transaction_count() {
  pending_transaction_count_ = GOOGLE_ULONGLONG(0);
  clear_has_pending_transaction_count();
}
inline ::google::protobuf::uint64 LiveHttpServerConnection::pending_transaction_count() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpServerConnection.pending_transaction_count)
  return pending_transaction_count_;
}
inline void LiveHttpServerConnection::set_pending_transaction_count(::google::protobuf::uint64 value) {
  set_has_pending_transaction_count();
  pending_transaction_count_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpServerConnection.pending_transaction_count)
}

// optional uint64 listen_handle_ptr = 3;
inline bool LiveHttpServerConnection::has_listen_handle_ptr() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LiveHttpServerConnection::set_has_listen_handle_ptr() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LiveHttpServerConnection::clear_has_listen_handle_ptr() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LiveHttpServerConnection::clear_listen_handle_ptr() {
  listen_handle_ptr_ = GOOGLE_ULONGLONG(0);
  clear_has_listen_handle_ptr();
}
inline ::google::protobuf::uint64 LiveHttpServerConnection::listen_handle_ptr() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpServerConnection.listen_handle_ptr)
  return listen_handle_ptr_;
}
inline void LiveHttpServerConnection::set_listen_handle_ptr(::google::protobuf::uint64 value) {
  set_has_listen_handle_ptr();
  listen_handle_ptr_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpServerConnection.listen_handle_ptr)
}

// optional uint64 handler_ptr = 4;
inline bool LiveHttpServerConnection::has_handler_ptr() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LiveHttpServerConnection::set_has_handler_ptr() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LiveHttpServerConnection::clear_has_handler_ptr() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LiveHttpServerConnection::clear_handler_ptr() {
  handler_ptr_ = GOOGLE_ULONGLONG(0);
  clear_has_handler_ptr();
}
inline ::google::protobuf::uint64 LiveHttpServerConnection::handler_ptr() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpServerConnection.handler_ptr)
  return handler_ptr_;
}
inline void LiveHttpServerConnection::set_handler_ptr(::google::protobuf::uint64 value) {
  set_has_handler_ptr();
  handler_ptr_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpServerConnection.handler_ptr)
}

// optional bool open = 5;
inline bool LiveHttpServerConnection::has_open() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LiveHttpServerConnection::set_has_open() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LiveHttpServerConnection::clear_has_open() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LiveHttpServerConnection::clear_open() {
  open_ = false;
  clear_has_open();
}
inline bool LiveHttpServerConnection::open() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpServerConnection.open)
  return open_;
}
inline void LiveHttpServerConnection::set_open(bool value) {
  set_has_open();
  open_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpServerConnection.open)
}

// optional uint64 accept_handle_ptr = 6;
inline bool LiveHttpServerConnection::has_accept_handle_ptr() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LiveHttpServerConnection::set_has_accept_handle_ptr() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LiveHttpServerConnection::clear_has_accept_handle_ptr() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LiveHttpServerConnection::clear_accept_handle_ptr() {
  accept_handle_ptr_ = GOOGLE_ULONGLONG(0);
  clear_has_accept_handle_ptr();
}
inline ::google::protobuf::uint64 LiveHttpServerConnection::accept_handle_ptr() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpServerConnection.accept_handle_ptr)
  return accept_handle_ptr_;
}
inline void LiveHttpServerConnection::set_accept_handle_ptr(::google::protobuf::uint64 value) {
  set_has_accept_handle_ptr();
  accept_handle_ptr_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpServerConnection.accept_handle_ptr)
}

// repeated uint64 handle_queue_ptr = 7;
inline int LiveHttpServerConnection::handle_queue_ptr_size() const {
  return handle_queue_ptr_.size();
}
inline void LiveHttpServerConnection::clear_handle_queue_ptr() {
  handle_queue_ptr_.Clear();
}
inline ::google::protobuf::uint64 LiveHttpServerConnection::handle_queue_ptr(int index) const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpServerConnection.handle_queue_ptr)
  return handle_queue_ptr_.Get(index);
}
inline void LiveHttpServerConnection::set_handle_queue_ptr(int index, ::google::protobuf::uint64 value) {
  handle_queue_ptr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpServerConnection.handle_queue_ptr)
}
inline void LiveHttpServerConnection::add_handle_queue_ptr(::google::protobuf::uint64 value) {
  handle_queue_ptr_.Add(value);
  // @@protoc_insertion_point(field_add:pjcore.LiveHttpServerConnection.handle_queue_ptr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
LiveHttpServerConnection::handle_queue_ptr() const {
  // @@protoc_insertion_point(field_list:pjcore.LiveHttpServerConnection.handle_queue_ptr)
  return handle_queue_ptr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
LiveHttpServerConnection::mutable_handle_queue_ptr() {
  // @@protoc_insertion_point(field_mutable_list:pjcore.LiveHttpServerConnection.handle_queue_ptr)
  return &handle_queue_ptr_;
}

// repeated uint64 write_queue_ptr = 8;
inline int LiveHttpServerConnection::write_queue_ptr_size() const {
  return write_queue_ptr_.size();
}
inline void LiveHttpServerConnection::clear_write_queue_ptr() {
  write_queue_ptr_.Clear();
}
inline ::google::protobuf::uint64 LiveHttpServerConnection::write_queue_ptr(int index) const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpServerConnection.write_queue_ptr)
  return write_queue_ptr_.Get(index);
}
inline void LiveHttpServerConnection::set_write_queue_ptr(int index, ::google::protobuf::uint64 value) {
  write_queue_ptr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpServerConnection.write_queue_ptr)
}
inline void LiveHttpServerConnection::add_write_queue_ptr(::google::protobuf::uint64 value) {
  write_queue_ptr_.Add(value);
  // @@protoc_insertion_point(field_add:pjcore.LiveHttpServerConnection.write_queue_ptr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
LiveHttpServerConnection::write_queue_ptr() const {
  // @@protoc_insertion_point(field_list:pjcore.LiveHttpServerConnection.write_queue_ptr)
  return write_queue_ptr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
LiveHttpServerConnection::mutable_write_queue_ptr() {
  // @@protoc_insertion_point(field_mutable_list:pjcore.LiveHttpServerConnection.write_queue_ptr)
  return &write_queue_ptr_;
}

// optional .pjcore.LiveCallback on_closing = 9;
inline bool LiveHttpServerConnection::has_on_closing() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void LiveHttpServerConnection::set_has_on_closing() {
  _has_bits_[0] |= 0x00000100u;
}
inline void LiveHttpServerConnection::clear_has_on_closing() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void LiveHttpServerConnection::clear_on_closing() {
  if (on_closing_ != NULL) on_closing_->::pjcore::LiveCallback::Clear();
  clear_has_on_closing();
}
inline const ::pjcore::LiveCallback& LiveHttpServerConnection::on_closing() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpServerConnection.on_closing)
  return on_closing_ != NULL ? *on_closing_ : *default_instance_->on_closing_;
}
inline ::pjcore::LiveCallback* LiveHttpServerConnection::mutable_on_closing() {
  set_has_on_closing();
  if (on_closing_ == NULL) {
    on_closing_ = new ::pjcore::LiveCallback;
  }
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpServerConnection.on_closing)
  return on_closing_;
}
inline ::pjcore::LiveCallback* LiveHttpServerConnection::release_on_closing() {
  clear_has_on_closing();
  ::pjcore::LiveCallback* temp = on_closing_;
  on_closing_ = NULL;
  return temp;
}
inline void LiveHttpServerConnection::set_allocated_on_closing(::pjcore::LiveCallback* on_closing) {
  delete on_closing_;
  on_closing_ = on_closing;
  if (on_closing) {
    set_has_on_closing();
  } else {
    clear_has_on_closing();
  }
  // @@protoc_insertion_point(field_set_allocated:pjcore.LiveHttpServerConnection.on_closing)
}

// optional .pjcore.LiveCallback on_close = 10;
inline bool LiveHttpServerConnection::has_on_close() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void LiveHttpServerConnection::set_has_on_close() {
  _has_bits_[0] |= 0x00000200u;
}
inline void LiveHttpServerConnection::clear_has_on_close() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void LiveHttpServerConnection::clear_on_close() {
  if (on_close_ != NULL) on_close_->::pjcore::LiveCallback::Clear();
  clear_has_on_close();
}
inline const ::pjcore::LiveCallback& LiveHttpServerConnection::on_close() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpServerConnection.on_close)
  return on_close_ != NULL ? *on_close_ : *default_instance_->on_close_;
}
inline ::pjcore::LiveCallback* LiveHttpServerConnection::mutable_on_close() {
  set_has_on_close();
  if (on_close_ == NULL) {
    on_close_ = new ::pjcore::LiveCallback;
  }
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpServerConnection.on_close)
  return on_close_;
}
inline ::pjcore::LiveCallback* LiveHttpServerConnection::release_on_close() {
  clear_has_on_close();
  ::pjcore::LiveCallback* temp = on_close_;
  on_close_ = NULL;
  return temp;
}
inline void LiveHttpServerConnection::set_allocated_on_close(::pjcore::LiveCallback* on_close) {
  delete on_close_;
  on_close_ = on_close;
  if (on_close) {
    set_has_on_close();
  } else {
    clear_has_on_close();
  }
  // @@protoc_insertion_point(field_set_allocated:pjcore.LiveHttpServerConnection.on_close)
}

// optional bool reading = 11;
inline bool LiveHttpServerConnection::has_reading() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void LiveHttpServerConnection::set_has_reading() {
  _has_bits_[0] |= 0x00000400u;
}
inline void LiveHttpServerConnection::clear_has_reading() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void LiveHttpServerConnection::clear_reading() {
  reading_ = false;
  clear_has_reading();
}
inline bool LiveHttpServerConnection::reading() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpServerConnection.reading)
  return reading_;
}
inline void LiveHttpServerConnection::set_reading(bool value) {
  set_has_reading();
  reading_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpServerConnection.reading)
}

// optional bool closing = 12;
inline bool LiveHttpServerConnection::has_closing() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void LiveHttpServerConnection::set_has_closing() {
  _has_bits_[0] |= 0x00000800u;
}
inline void LiveHttpServerConnection::clear_has_closing() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void LiveHttpServerConnection::clear_closing() {
  closing_ = false;
  clear_has_closing();
}
inline bool LiveHttpServerConnection::closing() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpServerConnection.closing)
  return closing_;
}
inline void LiveHttpServerConnection::set_closing(bool value) {
  set_has_closing();
  closing_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpServerConnection.closing)
}

// optional uint64 parser_ptr = 13;
inline bool LiveHttpServerConnection::has_parser_ptr() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void LiveHttpServerConnection::set_has_parser_ptr() {
  _has_bits_[0] |= 0x00001000u;
}
inline void LiveHttpServerConnection::clear_has_parser_ptr() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void LiveHttpServerConnection::clear_parser_ptr() {
  parser_ptr_ = GOOGLE_ULONGLONG(0);
  clear_has_parser_ptr();
}
inline ::google::protobuf::uint64 LiveHttpServerConnection::parser_ptr() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpServerConnection.parser_ptr)
  return parser_ptr_;
}
inline void LiveHttpServerConnection::set_parser_ptr(::google::protobuf::uint64 value) {
  set_has_parser_ptr();
  parser_ptr_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpServerConnection.parser_ptr)
}

// optional uint64 buffer_size = 14;
inline bool LiveHttpServerConnection::has_buffer_size() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void LiveHttpServerConnection::set_has_buffer_size() {
  _has_bits_[0] |= 0x00002000u;
}
inline void LiveHttpServerConnection::clear_has_buffer_size() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void LiveHttpServerConnection::clear_buffer_size() {
  buffer_size_ = GOOGLE_ULONGLONG(0);
  clear_has_buffer_size();
}
inline ::google::protobuf::uint64 LiveHttpServerConnection::buffer_size() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpServerConnection.buffer_size)
  return buffer_size_;
}
inline void LiveHttpServerConnection::set_buffer_size(::google::protobuf::uint64 value) {
  set_has_buffer_size();
  buffer_size_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpServerConnection.buffer_size)
}

// optional uint64 buffer_ptr = 15;
inline bool LiveHttpServerConnection::has_buffer_ptr() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void LiveHttpServerConnection::set_has_buffer_ptr() {
  _has_bits_[0] |= 0x00004000u;
}
inline void LiveHttpServerConnection::clear_has_buffer_ptr() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void LiveHttpServerConnection::clear_buffer_ptr() {
  buffer_ptr_ = GOOGLE_ULONGLONG(0);
  clear_has_buffer_ptr();
}
inline ::google::protobuf::uint64 LiveHttpServerConnection::buffer_ptr() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpServerConnection.buffer_ptr)
  return buffer_ptr_;
}
inline void LiveHttpServerConnection::set_buffer_ptr(::google::protobuf::uint64 value) {
  set_has_buffer_ptr();
  buffer_ptr_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpServerConnection.buffer_ptr)
}

// -------------------------------------------------------------------

// LiveHttpServerCore

// optional uint64 shell_ptr = 1;
inline bool LiveHttpServerCore::has_shell_ptr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LiveHttpServerCore::set_has_shell_ptr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LiveHttpServerCore::clear_has_shell_ptr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LiveHttpServerCore::clear_shell_ptr() {
  shell_ptr_ = GOOGLE_ULONGLONG(0);
  clear_has_shell_ptr();
}
inline ::google::protobuf::uint64 LiveHttpServerCore::shell_ptr() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpServerCore.shell_ptr)
  return shell_ptr_;
}
inline void LiveHttpServerCore::set_shell_ptr(::google::protobuf::uint64 value) {
  set_has_shell_ptr();
  shell_ptr_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpServerCore.shell_ptr)
}

// optional uint64 open = 2;
inline bool LiveHttpServerCore::has_open() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LiveHttpServerCore::set_has_open() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LiveHttpServerCore::clear_has_open() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LiveHttpServerCore::clear_open() {
  open_ = GOOGLE_ULONGLONG(0);
  clear_has_open();
}
inline ::google::protobuf::uint64 LiveHttpServerCore::open() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpServerCore.open)
  return open_;
}
inline void LiveHttpServerCore::set_open(::google::protobuf::uint64 value) {
  set_has_open();
  open_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpServerCore.open)
}

// optional uint64 pending_connection_count = 3;
inline bool LiveHttpServerCore::has_pending_connection_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LiveHttpServerCore::set_has_pending_connection_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LiveHttpServerCore::clear_has_pending_connection_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LiveHttpServerCore::clear_pending_connection_count() {
  pending_connection_count_ = GOOGLE_ULONGLONG(0);
  clear_has_pending_connection_count();
}
inline ::google::protobuf::uint64 LiveHttpServerCore::pending_connection_count() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpServerCore.pending_connection_count)
  return pending_connection_count_;
}
inline void LiveHttpServerCore::set_pending_connection_count(::google::protobuf::uint64 value) {
  set_has_pending_connection_count();
  pending_connection_count_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpServerCore.pending_connection_count)
}

// optional uint64 pending_transaction_count = 4;
inline bool LiveHttpServerCore::has_pending_transaction_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LiveHttpServerCore::set_has_pending_transaction_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LiveHttpServerCore::clear_has_pending_transaction_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LiveHttpServerCore::clear_pending_transaction_count() {
  pending_transaction_count_ = GOOGLE_ULONGLONG(0);
  clear_has_pending_transaction_count();
}
inline ::google::protobuf::uint64 LiveHttpServerCore::pending_transaction_count() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpServerCore.pending_transaction_count)
  return pending_transaction_count_;
}
inline void LiveHttpServerCore::set_pending_transaction_count(::google::protobuf::uint64 value) {
  set_has_pending_transaction_count();
  pending_transaction_count_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpServerCore.pending_transaction_count)
}

// optional .pjcore.HttpServerConfig config = 6;
inline bool LiveHttpServerCore::has_config() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LiveHttpServerCore::set_has_config() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LiveHttpServerCore::clear_has_config() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LiveHttpServerCore::clear_config() {
  if (config_ != NULL) config_->::pjcore::HttpServerConfig::Clear();
  clear_has_config();
}
inline const ::pjcore::HttpServerConfig& LiveHttpServerCore::config() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpServerCore.config)
  return config_ != NULL ? *config_ : *default_instance_->config_;
}
inline ::pjcore::HttpServerConfig* LiveHttpServerCore::mutable_config() {
  set_has_config();
  if (config_ == NULL) {
    config_ = new ::pjcore::HttpServerConfig;
  }
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpServerCore.config)
  return config_;
}
inline ::pjcore::HttpServerConfig* LiveHttpServerCore::release_config() {
  clear_has_config();
  ::pjcore::HttpServerConfig* temp = config_;
  config_ = NULL;
  return temp;
}
inline void LiveHttpServerCore::set_allocated_config(::pjcore::HttpServerConfig* config) {
  delete config_;
  config_ = config;
  if (config) {
    set_has_config();
  } else {
    clear_has_config();
  }
  // @@protoc_insertion_point(field_set_allocated:pjcore.LiveHttpServerCore.config)
}

// optional uint64 shared_loop_ptr = 7;
inline bool LiveHttpServerCore::has_shared_loop_ptr() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LiveHttpServerCore::set_has_shared_loop_ptr() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LiveHttpServerCore::clear_has_shared_loop_ptr() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LiveHttpServerCore::clear_shared_loop_ptr() {
  shared_loop_ptr_ = GOOGLE_ULONGLONG(0);
  clear_has_shared_loop_ptr();
}
inline ::google::protobuf::uint64 LiveHttpServerCore::shared_loop_ptr() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpServerCore.shared_loop_ptr)
  return shared_loop_ptr_;
}
inline void LiveHttpServerCore::set_shared_loop_ptr(::google::protobuf::uint64 value) {
  set_has_shared_loop_ptr();
  shared_loop_ptr_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpServerCore.shared_loop_ptr)
}

// optional uint64 handler_ptr = 8;
inline bool LiveHttpServerCore::has_handler_ptr() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LiveHttpServerCore::set_has_handler_ptr() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LiveHttpServerCore::clear_has_handler_ptr() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LiveHttpServerCore::clear_handler_ptr() {
  handler_ptr_ = GOOGLE_ULONGLONG(0);
  clear_has_handler_ptr();
}
inline ::google::protobuf::uint64 LiveHttpServerCore::handler_ptr() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpServerCore.handler_ptr)
  return handler_ptr_;
}
inline void LiveHttpServerCore::set_handler_ptr(::google::protobuf::uint64 value) {
  set_has_handler_ptr();
  handler_ptr_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpServerCore.handler_ptr)
}

// optional uint64 listen_handle_ptr = 9;
inline bool LiveHttpServerCore::has_listen_handle_ptr() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LiveHttpServerCore::set_has_listen_handle_ptr() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LiveHttpServerCore::clear_has_listen_handle_ptr() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LiveHttpServerCore::clear_listen_handle_ptr() {
  listen_handle_ptr_ = GOOGLE_ULONGLONG(0);
  clear_has_listen_handle_ptr();
}
inline ::google::protobuf::uint64 LiveHttpServerCore::listen_handle_ptr() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpServerCore.listen_handle_ptr)
  return listen_handle_ptr_;
}
inline void LiveHttpServerCore::set_listen_handle_ptr(::google::protobuf::uint64 value) {
  set_has_listen_handle_ptr();
  listen_handle_ptr_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpServerCore.listen_handle_ptr)
}

// optional .pjcore.LiveCallback on_destroy = 10;
inline bool LiveHttpServerCore::has_on_destroy() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void LiveHttpServerCore::set_has_on_destroy() {
  _has_bits_[0] |= 0x00000100u;
}
inline void LiveHttpServerCore::clear_has_on_destroy() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void LiveHttpServerCore::clear_on_destroy() {
  if (on_destroy_ != NULL) on_destroy_->::pjcore::LiveCallback::Clear();
  clear_has_on_destroy();
}
inline const ::pjcore::LiveCallback& LiveHttpServerCore::on_destroy() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpServerCore.on_destroy)
  return on_destroy_ != NULL ? *on_destroy_ : *default_instance_->on_destroy_;
}
inline ::pjcore::LiveCallback* LiveHttpServerCore::mutable_on_destroy() {
  set_has_on_destroy();
  if (on_destroy_ == NULL) {
    on_destroy_ = new ::pjcore::LiveCallback;
  }
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpServerCore.on_destroy)
  return on_destroy_;
}
inline ::pjcore::LiveCallback* LiveHttpServerCore::release_on_destroy() {
  clear_has_on_destroy();
  ::pjcore::LiveCallback* temp = on_destroy_;
  on_destroy_ = NULL;
  return temp;
}
inline void LiveHttpServerCore::set_allocated_on_destroy(::pjcore::LiveCallback* on_destroy) {
  delete on_destroy_;
  on_destroy_ = on_destroy;
  if (on_destroy) {
    set_has_on_destroy();
  } else {
    clear_has_on_destroy();
  }
  // @@protoc_insertion_point(field_set_allocated:pjcore.LiveHttpServerCore.on_destroy)
}

// -------------------------------------------------------------------

// LiveHttpServer

// optional uint64 core_ptr = 1;
inline bool LiveHttpServer::has_core_ptr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LiveHttpServer::set_has_core_ptr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LiveHttpServer::clear_has_core_ptr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LiveHttpServer::clear_core_ptr() {
  core_ptr_ = GOOGLE_ULONGLONG(0);
  clear_has_core_ptr();
}
inline ::google::protobuf::uint64 LiveHttpServer::core_ptr() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpServer.core_ptr)
  return core_ptr_;
}
inline void LiveHttpServer::set_core_ptr(::google::protobuf::uint64 value) {
  set_has_core_ptr();
  core_ptr_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpServer.core_ptr)
}

// optional .pjcore.LiveCallback on_destroy = 2;
inline bool LiveHttpServer::has_on_destroy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LiveHttpServer::set_has_on_destroy() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LiveHttpServer::clear_has_on_destroy() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LiveHttpServer::clear_on_destroy() {
  if (on_destroy_ != NULL) on_destroy_->::pjcore::LiveCallback::Clear();
  clear_has_on_destroy();
}
inline const ::pjcore::LiveCallback& LiveHttpServer::on_destroy() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpServer.on_destroy)
  return on_destroy_ != NULL ? *on_destroy_ : *default_instance_->on_destroy_;
}
inline ::pjcore::LiveCallback* LiveHttpServer::mutable_on_destroy() {
  set_has_on_destroy();
  if (on_destroy_ == NULL) {
    on_destroy_ = new ::pjcore::LiveCallback;
  }
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpServer.on_destroy)
  return on_destroy_;
}
inline ::pjcore::LiveCallback* LiveHttpServer::release_on_destroy() {
  clear_has_on_destroy();
  ::pjcore::LiveCallback* temp = on_destroy_;
  on_destroy_ = NULL;
  return temp;
}
inline void LiveHttpServer::set_allocated_on_destroy(::pjcore::LiveCallback* on_destroy) {
  delete on_destroy_;
  on_destroy_ = on_destroy;
  if (on_destroy) {
    set_has_on_destroy();
  } else {
    clear_has_on_destroy();
  }
  // @@protoc_insertion_point(field_set_allocated:pjcore.LiveHttpServer.on_destroy)
}

// -------------------------------------------------------------------

// LiveHttpClientTransaction

// optional uint64 uv_ptr = 1;
inline bool LiveHttpClientTransaction::has_uv_ptr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LiveHttpClientTransaction::set_has_uv_ptr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LiveHttpClientTransaction::clear_has_uv_ptr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LiveHttpClientTransaction::clear_uv_ptr() {
  uv_ptr_ = GOOGLE_ULONGLONG(0);
  clear_has_uv_ptr();
}
inline ::google::protobuf::uint64 LiveHttpClientTransaction::uv_ptr() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpClientTransaction.uv_ptr)
  return uv_ptr_;
}
inline void LiveHttpClientTransaction::set_uv_ptr(::google::protobuf::uint64 value) {
  set_has_uv_ptr();
  uv_ptr_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpClientTransaction.uv_ptr)
}

// optional .pjcore.LiveHttpRequest request = 2;
inline bool LiveHttpClientTransaction::has_request() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LiveHttpClientTransaction::set_has_request() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LiveHttpClientTransaction::clear_has_request() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LiveHttpClientTransaction::clear_request() {
  if (request_ != NULL) request_->::pjcore::LiveHttpRequest::Clear();
  clear_has_request();
}
inline const ::pjcore::LiveHttpRequest& LiveHttpClientTransaction::request() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpClientTransaction.request)
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::pjcore::LiveHttpRequest* LiveHttpClientTransaction::mutable_request() {
  set_has_request();
  if (request_ == NULL) {
    request_ = new ::pjcore::LiveHttpRequest;
  }
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpClientTransaction.request)
  return request_;
}
inline ::pjcore::LiveHttpRequest* LiveHttpClientTransaction::release_request() {
  clear_has_request();
  ::pjcore::LiveHttpRequest* temp = request_;
  request_ = NULL;
  return temp;
}
inline void LiveHttpClientTransaction::set_allocated_request(::pjcore::LiveHttpRequest* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
  // @@protoc_insertion_point(field_set_allocated:pjcore.LiveHttpClientTransaction.request)
}

// optional .pjcore.NodeAndServiceName node_and_service_name = 3;
inline bool LiveHttpClientTransaction::has_node_and_service_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LiveHttpClientTransaction::set_has_node_and_service_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LiveHttpClientTransaction::clear_has_node_and_service_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LiveHttpClientTransaction::clear_node_and_service_name() {
  if (node_and_service_name_ != NULL) node_and_service_name_->::pjcore::NodeAndServiceName::Clear();
  clear_has_node_and_service_name();
}
inline const ::pjcore::NodeAndServiceName& LiveHttpClientTransaction::node_and_service_name() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpClientTransaction.node_and_service_name)
  return node_and_service_name_ != NULL ? *node_and_service_name_ : *default_instance_->node_and_service_name_;
}
inline ::pjcore::NodeAndServiceName* LiveHttpClientTransaction::mutable_node_and_service_name() {
  set_has_node_and_service_name();
  if (node_and_service_name_ == NULL) {
    node_and_service_name_ = new ::pjcore::NodeAndServiceName;
  }
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpClientTransaction.node_and_service_name)
  return node_and_service_name_;
}
inline ::pjcore::NodeAndServiceName* LiveHttpClientTransaction::release_node_and_service_name() {
  clear_has_node_and_service_name();
  ::pjcore::NodeAndServiceName* temp = node_and_service_name_;
  node_and_service_name_ = NULL;
  return temp;
}
inline void LiveHttpClientTransaction::set_allocated_node_and_service_name(::pjcore::NodeAndServiceName* node_and_service_name) {
  delete node_and_service_name_;
  node_and_service_name_ = node_and_service_name;
  if (node_and_service_name) {
    set_has_node_and_service_name();
  } else {
    clear_has_node_and_service_name();
  }
  // @@protoc_insertion_point(field_set_allocated:pjcore.LiveHttpClientTransaction.node_and_service_name)
}

// optional .pjcore.LiveCallback on_response = 4;
inline bool LiveHttpClientTransaction::has_on_response() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LiveHttpClientTransaction::set_has_on_response() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LiveHttpClientTransaction::clear_has_on_response() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LiveHttpClientTransaction::clear_on_response() {
  if (on_response_ != NULL) on_response_->::pjcore::LiveCallback::Clear();
  clear_has_on_response();
}
inline const ::pjcore::LiveCallback& LiveHttpClientTransaction::on_response() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpClientTransaction.on_response)
  return on_response_ != NULL ? *on_response_ : *default_instance_->on_response_;
}
inline ::pjcore::LiveCallback* LiveHttpClientTransaction::mutable_on_response() {
  set_has_on_response();
  if (on_response_ == NULL) {
    on_response_ = new ::pjcore::LiveCallback;
  }
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpClientTransaction.on_response)
  return on_response_;
}
inline ::pjcore::LiveCallback* LiveHttpClientTransaction::release_on_response() {
  clear_has_on_response();
  ::pjcore::LiveCallback* temp = on_response_;
  on_response_ = NULL;
  return temp;
}
inline void LiveHttpClientTransaction::set_allocated_on_response(::pjcore::LiveCallback* on_response) {
  delete on_response_;
  on_response_ = on_response;
  if (on_response) {
    set_has_on_response();
  } else {
    clear_has_on_response();
  }
  // @@protoc_insertion_point(field_set_allocated:pjcore.LiveHttpClientTransaction.on_response)
}

// -------------------------------------------------------------------

// LiveHttpClientConnection

// optional uint64 shared_loop_ptr = 1;
inline bool LiveHttpClientConnection::has_shared_loop_ptr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LiveHttpClientConnection::set_has_shared_loop_ptr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LiveHttpClientConnection::clear_has_shared_loop_ptr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LiveHttpClientConnection::clear_shared_loop_ptr() {
  shared_loop_ptr_ = GOOGLE_ULONGLONG(0);
  clear_has_shared_loop_ptr();
}
inline ::google::protobuf::uint64 LiveHttpClientConnection::shared_loop_ptr() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpClientConnection.shared_loop_ptr)
  return shared_loop_ptr_;
}
inline void LiveHttpClientConnection::set_shared_loop_ptr(::google::protobuf::uint64 value) {
  set_has_shared_loop_ptr();
  shared_loop_ptr_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpClientConnection.shared_loop_ptr)
}

// repeated .pjcore.LiveAddrInfo addr_infos = 2;
inline int LiveHttpClientConnection::addr_infos_size() const {
  return addr_infos_.size();
}
inline void LiveHttpClientConnection::clear_addr_infos() {
  addr_infos_.Clear();
}
inline const ::pjcore::LiveAddrInfo& LiveHttpClientConnection::addr_infos(int index) const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpClientConnection.addr_infos)
  return addr_infos_.Get(index);
}
inline ::pjcore::LiveAddrInfo* LiveHttpClientConnection::mutable_addr_infos(int index) {
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpClientConnection.addr_infos)
  return addr_infos_.Mutable(index);
}
inline ::pjcore::LiveAddrInfo* LiveHttpClientConnection::add_addr_infos() {
  // @@protoc_insertion_point(field_add:pjcore.LiveHttpClientConnection.addr_infos)
  return addr_infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pjcore::LiveAddrInfo >&
LiveHttpClientConnection::addr_infos() const {
  // @@protoc_insertion_point(field_list:pjcore.LiveHttpClientConnection.addr_infos)
  return addr_infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::pjcore::LiveAddrInfo >*
LiveHttpClientConnection::mutable_addr_infos() {
  // @@protoc_insertion_point(field_mutable_list:pjcore.LiveHttpClientConnection.addr_infos)
  return &addr_infos_;
}

// optional bool open = 3;
inline bool LiveHttpClientConnection::has_open() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LiveHttpClientConnection::set_has_open() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LiveHttpClientConnection::clear_has_open() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LiveHttpClientConnection::clear_open() {
  open_ = false;
  clear_has_open();
}
inline bool LiveHttpClientConnection::open() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpClientConnection.open)
  return open_;
}
inline void LiveHttpClientConnection::set_open(bool value) {
  set_has_open();
  open_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpClientConnection.open)
}

// repeated uint64 wait_queue_ptr = 4;
inline int LiveHttpClientConnection::wait_queue_ptr_size() const {
  return wait_queue_ptr_.size();
}
inline void LiveHttpClientConnection::clear_wait_queue_ptr() {
  wait_queue_ptr_.Clear();
}
inline ::google::protobuf::uint64 LiveHttpClientConnection::wait_queue_ptr(int index) const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpClientConnection.wait_queue_ptr)
  return wait_queue_ptr_.Get(index);
}
inline void LiveHttpClientConnection::set_wait_queue_ptr(int index, ::google::protobuf::uint64 value) {
  wait_queue_ptr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpClientConnection.wait_queue_ptr)
}
inline void LiveHttpClientConnection::add_wait_queue_ptr(::google::protobuf::uint64 value) {
  wait_queue_ptr_.Add(value);
  // @@protoc_insertion_point(field_add:pjcore.LiveHttpClientConnection.wait_queue_ptr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
LiveHttpClientConnection::wait_queue_ptr() const {
  // @@protoc_insertion_point(field_list:pjcore.LiveHttpClientConnection.wait_queue_ptr)
  return wait_queue_ptr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
LiveHttpClientConnection::mutable_wait_queue_ptr() {
  // @@protoc_insertion_point(field_mutable_list:pjcore.LiveHttpClientConnection.wait_queue_ptr)
  return &wait_queue_ptr_;
}

// repeated uint64 write_queue_ptr = 5;
inline int LiveHttpClientConnection::write_queue_ptr_size() const {
  return write_queue_ptr_.size();
}
inline void LiveHttpClientConnection::clear_write_queue_ptr() {
  write_queue_ptr_.Clear();
}
inline ::google::protobuf::uint64 LiveHttpClientConnection::write_queue_ptr(int index) const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpClientConnection.write_queue_ptr)
  return write_queue_ptr_.Get(index);
}
inline void LiveHttpClientConnection::set_write_queue_ptr(int index, ::google::protobuf::uint64 value) {
  write_queue_ptr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpClientConnection.write_queue_ptr)
}
inline void LiveHttpClientConnection::add_write_queue_ptr(::google::protobuf::uint64 value) {
  write_queue_ptr_.Add(value);
  // @@protoc_insertion_point(field_add:pjcore.LiveHttpClientConnection.write_queue_ptr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
LiveHttpClientConnection::write_queue_ptr() const {
  // @@protoc_insertion_point(field_list:pjcore.LiveHttpClientConnection.write_queue_ptr)
  return write_queue_ptr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
LiveHttpClientConnection::mutable_write_queue_ptr() {
  // @@protoc_insertion_point(field_mutable_list:pjcore.LiveHttpClientConnection.write_queue_ptr)
  return &write_queue_ptr_;
}

// repeated uint64 read_queue_ptr = 6;
inline int LiveHttpClientConnection::read_queue_ptr_size() const {
  return read_queue_ptr_.size();
}
inline void LiveHttpClientConnection::clear_read_queue_ptr() {
  read_queue_ptr_.Clear();
}
inline ::google::protobuf::uint64 LiveHttpClientConnection::read_queue_ptr(int index) const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpClientConnection.read_queue_ptr)
  return read_queue_ptr_.Get(index);
}
inline void LiveHttpClientConnection::set_read_queue_ptr(int index, ::google::protobuf::uint64 value) {
  read_queue_ptr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpClientConnection.read_queue_ptr)
}
inline void LiveHttpClientConnection::add_read_queue_ptr(::google::protobuf::uint64 value) {
  read_queue_ptr_.Add(value);
  // @@protoc_insertion_point(field_add:pjcore.LiveHttpClientConnection.read_queue_ptr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
LiveHttpClientConnection::read_queue_ptr() const {
  // @@protoc_insertion_point(field_list:pjcore.LiveHttpClientConnection.read_queue_ptr)
  return read_queue_ptr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
LiveHttpClientConnection::mutable_read_queue_ptr() {
  // @@protoc_insertion_point(field_mutable_list:pjcore.LiveHttpClientConnection.read_queue_ptr)
  return &read_queue_ptr_;
}

// optional .pjcore.LiveCallback on_closing = 7;
inline bool LiveHttpClientConnection::has_on_closing() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LiveHttpClientConnection::set_has_on_closing() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LiveHttpClientConnection::clear_has_on_closing() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LiveHttpClientConnection::clear_on_closing() {
  if (on_closing_ != NULL) on_closing_->::pjcore::LiveCallback::Clear();
  clear_has_on_closing();
}
inline const ::pjcore::LiveCallback& LiveHttpClientConnection::on_closing() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpClientConnection.on_closing)
  return on_closing_ != NULL ? *on_closing_ : *default_instance_->on_closing_;
}
inline ::pjcore::LiveCallback* LiveHttpClientConnection::mutable_on_closing() {
  set_has_on_closing();
  if (on_closing_ == NULL) {
    on_closing_ = new ::pjcore::LiveCallback;
  }
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpClientConnection.on_closing)
  return on_closing_;
}
inline ::pjcore::LiveCallback* LiveHttpClientConnection::release_on_closing() {
  clear_has_on_closing();
  ::pjcore::LiveCallback* temp = on_closing_;
  on_closing_ = NULL;
  return temp;
}
inline void LiveHttpClientConnection::set_allocated_on_closing(::pjcore::LiveCallback* on_closing) {
  delete on_closing_;
  on_closing_ = on_closing;
  if (on_closing) {
    set_has_on_closing();
  } else {
    clear_has_on_closing();
  }
  // @@protoc_insertion_point(field_set_allocated:pjcore.LiveHttpClientConnection.on_closing)
}

// optional .pjcore.LiveCallback on_close = 8;
inline bool LiveHttpClientConnection::has_on_close() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LiveHttpClientConnection::set_has_on_close() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LiveHttpClientConnection::clear_has_on_close() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LiveHttpClientConnection::clear_on_close() {
  if (on_close_ != NULL) on_close_->::pjcore::LiveCallback::Clear();
  clear_has_on_close();
}
inline const ::pjcore::LiveCallback& LiveHttpClientConnection::on_close() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpClientConnection.on_close)
  return on_close_ != NULL ? *on_close_ : *default_instance_->on_close_;
}
inline ::pjcore::LiveCallback* LiveHttpClientConnection::mutable_on_close() {
  set_has_on_close();
  if (on_close_ == NULL) {
    on_close_ = new ::pjcore::LiveCallback;
  }
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpClientConnection.on_close)
  return on_close_;
}
inline ::pjcore::LiveCallback* LiveHttpClientConnection::release_on_close() {
  clear_has_on_close();
  ::pjcore::LiveCallback* temp = on_close_;
  on_close_ = NULL;
  return temp;
}
inline void LiveHttpClientConnection::set_allocated_on_close(::pjcore::LiveCallback* on_close) {
  delete on_close_;
  on_close_ = on_close;
  if (on_close) {
    set_has_on_close();
  } else {
    clear_has_on_close();
  }
  // @@protoc_insertion_point(field_set_allocated:pjcore.LiveHttpClientConnection.on_close)
}

// optional uint64 connect_handle_ptr = 9;
inline bool LiveHttpClientConnection::has_connect_handle_ptr() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void LiveHttpClientConnection::set_has_connect_handle_ptr() {
  _has_bits_[0] |= 0x00000100u;
}
inline void LiveHttpClientConnection::clear_has_connect_handle_ptr() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void LiveHttpClientConnection::clear_connect_handle_ptr() {
  connect_handle_ptr_ = GOOGLE_ULONGLONG(0);
  clear_has_connect_handle_ptr();
}
inline ::google::protobuf::uint64 LiveHttpClientConnection::connect_handle_ptr() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpClientConnection.connect_handle_ptr)
  return connect_handle_ptr_;
}
inline void LiveHttpClientConnection::set_connect_handle_ptr(::google::protobuf::uint64 value) {
  set_has_connect_handle_ptr();
  connect_handle_ptr_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpClientConnection.connect_handle_ptr)
}

// optional uint64 connect_req_ptr = 10;
inline bool LiveHttpClientConnection::has_connect_req_ptr() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void LiveHttpClientConnection::set_has_connect_req_ptr() {
  _has_bits_[0] |= 0x00000200u;
}
inline void LiveHttpClientConnection::clear_has_connect_req_ptr() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void LiveHttpClientConnection::clear_connect_req_ptr() {
  connect_req_ptr_ = GOOGLE_ULONGLONG(0);
  clear_has_connect_req_ptr();
}
inline ::google::protobuf::uint64 LiveHttpClientConnection::connect_req_ptr() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpClientConnection.connect_req_ptr)
  return connect_req_ptr_;
}
inline void LiveHttpClientConnection::set_connect_req_ptr(::google::protobuf::uint64 value) {
  set_has_connect_req_ptr();
  connect_req_ptr_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpClientConnection.connect_req_ptr)
}

// optional bool reading = 11;
inline bool LiveHttpClientConnection::has_reading() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void LiveHttpClientConnection::set_has_reading() {
  _has_bits_[0] |= 0x00000400u;
}
inline void LiveHttpClientConnection::clear_has_reading() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void LiveHttpClientConnection::clear_reading() {
  reading_ = false;
  clear_has_reading();
}
inline bool LiveHttpClientConnection::reading() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpClientConnection.reading)
  return reading_;
}
inline void LiveHttpClientConnection::set_reading(bool value) {
  set_has_reading();
  reading_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpClientConnection.reading)
}

// optional bool closing = 12;
inline bool LiveHttpClientConnection::has_closing() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void LiveHttpClientConnection::set_has_closing() {
  _has_bits_[0] |= 0x00000800u;
}
inline void LiveHttpClientConnection::clear_has_closing() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void LiveHttpClientConnection::clear_closing() {
  closing_ = false;
  clear_has_closing();
}
inline bool LiveHttpClientConnection::closing() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpClientConnection.closing)
  return closing_;
}
inline void LiveHttpClientConnection::set_closing(bool value) {
  set_has_closing();
  closing_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpClientConnection.closing)
}

// optional uint64 parser_ptr = 13;
inline bool LiveHttpClientConnection::has_parser_ptr() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void LiveHttpClientConnection::set_has_parser_ptr() {
  _has_bits_[0] |= 0x00001000u;
}
inline void LiveHttpClientConnection::clear_has_parser_ptr() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void LiveHttpClientConnection::clear_parser_ptr() {
  parser_ptr_ = GOOGLE_ULONGLONG(0);
  clear_has_parser_ptr();
}
inline ::google::protobuf::uint64 LiveHttpClientConnection::parser_ptr() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpClientConnection.parser_ptr)
  return parser_ptr_;
}
inline void LiveHttpClientConnection::set_parser_ptr(::google::protobuf::uint64 value) {
  set_has_parser_ptr();
  parser_ptr_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpClientConnection.parser_ptr)
}

// optional uint64 buffer_size = 14;
inline bool LiveHttpClientConnection::has_buffer_size() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void LiveHttpClientConnection::set_has_buffer_size() {
  _has_bits_[0] |= 0x00002000u;
}
inline void LiveHttpClientConnection::clear_has_buffer_size() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void LiveHttpClientConnection::clear_buffer_size() {
  buffer_size_ = GOOGLE_ULONGLONG(0);
  clear_has_buffer_size();
}
inline ::google::protobuf::uint64 LiveHttpClientConnection::buffer_size() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpClientConnection.buffer_size)
  return buffer_size_;
}
inline void LiveHttpClientConnection::set_buffer_size(::google::protobuf::uint64 value) {
  set_has_buffer_size();
  buffer_size_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpClientConnection.buffer_size)
}

// optional uint64 buffer_ptr = 15;
inline bool LiveHttpClientConnection::has_buffer_ptr() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void LiveHttpClientConnection::set_has_buffer_ptr() {
  _has_bits_[0] |= 0x00004000u;
}
inline void LiveHttpClientConnection::clear_has_buffer_ptr() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void LiveHttpClientConnection::clear_buffer_ptr() {
  buffer_ptr_ = GOOGLE_ULONGLONG(0);
  clear_has_buffer_ptr();
}
inline ::google::protobuf::uint64 LiveHttpClientConnection::buffer_ptr() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpClientConnection.buffer_ptr)
  return buffer_ptr_;
}
inline void LiveHttpClientConnection::set_buffer_ptr(::google::protobuf::uint64 value) {
  set_has_buffer_ptr();
  buffer_ptr_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpClientConnection.buffer_ptr)
}

// -------------------------------------------------------------------

// LiveHttpClientConnectionGroup

// optional uint64 shared_loop_ptr = 1;
inline bool LiveHttpClientConnectionGroup::has_shared_loop_ptr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LiveHttpClientConnectionGroup::set_has_shared_loop_ptr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LiveHttpClientConnectionGroup::clear_has_shared_loop_ptr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LiveHttpClientConnectionGroup::clear_shared_loop_ptr() {
  shared_loop_ptr_ = GOOGLE_ULONGLONG(0);
  clear_has_shared_loop_ptr();
}
inline ::google::protobuf::uint64 LiveHttpClientConnectionGroup::shared_loop_ptr() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpClientConnectionGroup.shared_loop_ptr)
  return shared_loop_ptr_;
}
inline void LiveHttpClientConnectionGroup::set_shared_loop_ptr(::google::protobuf::uint64 value) {
  set_has_shared_loop_ptr();
  shared_loop_ptr_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpClientConnectionGroup.shared_loop_ptr)
}

// optional uint64 pending_resolve_count = 2;
inline bool LiveHttpClientConnectionGroup::has_pending_resolve_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LiveHttpClientConnectionGroup::set_has_pending_resolve_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LiveHttpClientConnectionGroup::clear_has_pending_resolve_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LiveHttpClientConnectionGroup::clear_pending_resolve_count() {
  pending_resolve_count_ = GOOGLE_ULONGLONG(0);
  clear_has_pending_resolve_count();
}
inline ::google::protobuf::uint64 LiveHttpClientConnectionGroup::pending_resolve_count() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpClientConnectionGroup.pending_resolve_count)
  return pending_resolve_count_;
}
inline void LiveHttpClientConnectionGroup::set_pending_resolve_count(::google::protobuf::uint64 value) {
  set_has_pending_resolve_count();
  pending_resolve_count_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpClientConnectionGroup.pending_resolve_count)
}

// optional uint64 pending_connection_count = 3;
inline bool LiveHttpClientConnectionGroup::has_pending_connection_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LiveHttpClientConnectionGroup::set_has_pending_connection_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LiveHttpClientConnectionGroup::clear_has_pending_connection_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LiveHttpClientConnectionGroup::clear_pending_connection_count() {
  pending_connection_count_ = GOOGLE_ULONGLONG(0);
  clear_has_pending_connection_count();
}
inline ::google::protobuf::uint64 LiveHttpClientConnectionGroup::pending_connection_count() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpClientConnectionGroup.pending_connection_count)
  return pending_connection_count_;
}
inline void LiveHttpClientConnectionGroup::set_pending_connection_count(::google::protobuf::uint64 value) {
  set_has_pending_connection_count();
  pending_connection_count_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpClientConnectionGroup.pending_connection_count)
}

// optional .pjcore.NodeAndServiceName node_and_service_name = 4;
inline bool LiveHttpClientConnectionGroup::has_node_and_service_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LiveHttpClientConnectionGroup::set_has_node_and_service_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LiveHttpClientConnectionGroup::clear_has_node_and_service_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LiveHttpClientConnectionGroup::clear_node_and_service_name() {
  if (node_and_service_name_ != NULL) node_and_service_name_->::pjcore::NodeAndServiceName::Clear();
  clear_has_node_and_service_name();
}
inline const ::pjcore::NodeAndServiceName& LiveHttpClientConnectionGroup::node_and_service_name() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpClientConnectionGroup.node_and_service_name)
  return node_and_service_name_ != NULL ? *node_and_service_name_ : *default_instance_->node_and_service_name_;
}
inline ::pjcore::NodeAndServiceName* LiveHttpClientConnectionGroup::mutable_node_and_service_name() {
  set_has_node_and_service_name();
  if (node_and_service_name_ == NULL) {
    node_and_service_name_ = new ::pjcore::NodeAndServiceName;
  }
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpClientConnectionGroup.node_and_service_name)
  return node_and_service_name_;
}
inline ::pjcore::NodeAndServiceName* LiveHttpClientConnectionGroup::release_node_and_service_name() {
  clear_has_node_and_service_name();
  ::pjcore::NodeAndServiceName* temp = node_and_service_name_;
  node_and_service_name_ = NULL;
  return temp;
}
inline void LiveHttpClientConnectionGroup::set_allocated_node_and_service_name(::pjcore::NodeAndServiceName* node_and_service_name) {
  delete node_and_service_name_;
  node_and_service_name_ = node_and_service_name;
  if (node_and_service_name) {
    set_has_node_and_service_name();
  } else {
    clear_has_node_and_service_name();
  }
  // @@protoc_insertion_point(field_set_allocated:pjcore.LiveHttpClientConnectionGroup.node_and_service_name)
}

// optional .pjcore.LiveAddrInfo resolve_hints = 5;
inline bool LiveHttpClientConnectionGroup::has_resolve_hints() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LiveHttpClientConnectionGroup::set_has_resolve_hints() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LiveHttpClientConnectionGroup::clear_has_resolve_hints() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LiveHttpClientConnectionGroup::clear_resolve_hints() {
  if (resolve_hints_ != NULL) resolve_hints_->::pjcore::LiveAddrInfo::Clear();
  clear_has_resolve_hints();
}
inline const ::pjcore::LiveAddrInfo& LiveHttpClientConnectionGroup::resolve_hints() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpClientConnectionGroup.resolve_hints)
  return resolve_hints_ != NULL ? *resolve_hints_ : *default_instance_->resolve_hints_;
}
inline ::pjcore::LiveAddrInfo* LiveHttpClientConnectionGroup::mutable_resolve_hints() {
  set_has_resolve_hints();
  if (resolve_hints_ == NULL) {
    resolve_hints_ = new ::pjcore::LiveAddrInfo;
  }
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpClientConnectionGroup.resolve_hints)
  return resolve_hints_;
}
inline ::pjcore::LiveAddrInfo* LiveHttpClientConnectionGroup::release_resolve_hints() {
  clear_has_resolve_hints();
  ::pjcore::LiveAddrInfo* temp = resolve_hints_;
  resolve_hints_ = NULL;
  return temp;
}
inline void LiveHttpClientConnectionGroup::set_allocated_resolve_hints(::pjcore::LiveAddrInfo* resolve_hints) {
  delete resolve_hints_;
  resolve_hints_ = resolve_hints;
  if (resolve_hints) {
    set_has_resolve_hints();
  } else {
    clear_has_resolve_hints();
  }
  // @@protoc_insertion_point(field_set_allocated:pjcore.LiveHttpClientConnectionGroup.resolve_hints)
}

// optional uint64 resolve_req_ptr = 6;
inline bool LiveHttpClientConnectionGroup::has_resolve_req_ptr() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LiveHttpClientConnectionGroup::set_has_resolve_req_ptr() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LiveHttpClientConnectionGroup::clear_has_resolve_req_ptr() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LiveHttpClientConnectionGroup::clear_resolve_req_ptr() {
  resolve_req_ptr_ = GOOGLE_ULONGLONG(0);
  clear_has_resolve_req_ptr();
}
inline ::google::protobuf::uint64 LiveHttpClientConnectionGroup::resolve_req_ptr() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpClientConnectionGroup.resolve_req_ptr)
  return resolve_req_ptr_;
}
inline void LiveHttpClientConnectionGroup::set_resolve_req_ptr(::google::protobuf::uint64 value) {
  set_has_resolve_req_ptr();
  resolve_req_ptr_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpClientConnectionGroup.resolve_req_ptr)
}

// repeated .pjcore.LiveAddrInfo addr_infos = 7;
inline int LiveHttpClientConnectionGroup::addr_infos_size() const {
  return addr_infos_.size();
}
inline void LiveHttpClientConnectionGroup::clear_addr_infos() {
  addr_infos_.Clear();
}
inline const ::pjcore::LiveAddrInfo& LiveHttpClientConnectionGroup::addr_infos(int index) const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpClientConnectionGroup.addr_infos)
  return addr_infos_.Get(index);
}
inline ::pjcore::LiveAddrInfo* LiveHttpClientConnectionGroup::mutable_addr_infos(int index) {
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpClientConnectionGroup.addr_infos)
  return addr_infos_.Mutable(index);
}
inline ::pjcore::LiveAddrInfo* LiveHttpClientConnectionGroup::add_addr_infos() {
  // @@protoc_insertion_point(field_add:pjcore.LiveHttpClientConnectionGroup.addr_infos)
  return addr_infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pjcore::LiveAddrInfo >&
LiveHttpClientConnectionGroup::addr_infos() const {
  // @@protoc_insertion_point(field_list:pjcore.LiveHttpClientConnectionGroup.addr_infos)
  return addr_infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::pjcore::LiveAddrInfo >*
LiveHttpClientConnectionGroup::mutable_addr_infos() {
  // @@protoc_insertion_point(field_mutable_list:pjcore.LiveHttpClientConnectionGroup.addr_infos)
  return &addr_infos_;
}

// repeated uint64 open_connections_ptr = 8;
inline int LiveHttpClientConnectionGroup::open_connections_ptr_size() const {
  return open_connections_ptr_.size();
}
inline void LiveHttpClientConnectionGroup::clear_open_connections_ptr() {
  open_connections_ptr_.Clear();
}
inline ::google::protobuf::uint64 LiveHttpClientConnectionGroup::open_connections_ptr(int index) const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpClientConnectionGroup.open_connections_ptr)
  return open_connections_ptr_.Get(index);
}
inline void LiveHttpClientConnectionGroup::set_open_connections_ptr(int index, ::google::protobuf::uint64 value) {
  open_connections_ptr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpClientConnectionGroup.open_connections_ptr)
}
inline void LiveHttpClientConnectionGroup::add_open_connections_ptr(::google::protobuf::uint64 value) {
  open_connections_ptr_.Add(value);
  // @@protoc_insertion_point(field_add:pjcore.LiveHttpClientConnectionGroup.open_connections_ptr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
LiveHttpClientConnectionGroup::open_connections_ptr() const {
  // @@protoc_insertion_point(field_list:pjcore.LiveHttpClientConnectionGroup.open_connections_ptr)
  return open_connections_ptr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
LiveHttpClientConnectionGroup::mutable_open_connections_ptr() {
  // @@protoc_insertion_point(field_mutable_list:pjcore.LiveHttpClientConnectionGroup.open_connections_ptr)
  return &open_connections_ptr_;
}

// repeated uint64 closing_connections_ptr = 9;
inline int LiveHttpClientConnectionGroup::closing_connections_ptr_size() const {
  return closing_connections_ptr_.size();
}
inline void LiveHttpClientConnectionGroup::clear_closing_connections_ptr() {
  closing_connections_ptr_.Clear();
}
inline ::google::protobuf::uint64 LiveHttpClientConnectionGroup::closing_connections_ptr(int index) const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpClientConnectionGroup.closing_connections_ptr)
  return closing_connections_ptr_.Get(index);
}
inline void LiveHttpClientConnectionGroup::set_closing_connections_ptr(int index, ::google::protobuf::uint64 value) {
  closing_connections_ptr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpClientConnectionGroup.closing_connections_ptr)
}
inline void LiveHttpClientConnectionGroup::add_closing_connections_ptr(::google::protobuf::uint64 value) {
  closing_connections_ptr_.Add(value);
  // @@protoc_insertion_point(field_add:pjcore.LiveHttpClientConnectionGroup.closing_connections_ptr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
LiveHttpClientConnectionGroup::closing_connections_ptr() const {
  // @@protoc_insertion_point(field_list:pjcore.LiveHttpClientConnectionGroup.closing_connections_ptr)
  return closing_connections_ptr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
LiveHttpClientConnectionGroup::mutable_closing_connections_ptr() {
  // @@protoc_insertion_point(field_mutable_list:pjcore.LiveHttpClientConnectionGroup.closing_connections_ptr)
  return &closing_connections_ptr_;
}

// -------------------------------------------------------------------

// LiveHttpClientCore

// optional uint64 shell_ptr = 1;
inline bool LiveHttpClientCore::has_shell_ptr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LiveHttpClientCore::set_has_shell_ptr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LiveHttpClientCore::clear_has_shell_ptr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LiveHttpClientCore::clear_shell_ptr() {
  shell_ptr_ = GOOGLE_ULONGLONG(0);
  clear_has_shell_ptr();
}
inline ::google::protobuf::uint64 LiveHttpClientCore::shell_ptr() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpClientCore.shell_ptr)
  return shell_ptr_;
}
inline void LiveHttpClientCore::set_shell_ptr(::google::protobuf::uint64 value) {
  set_has_shell_ptr();
  shell_ptr_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpClientCore.shell_ptr)
}

// optional uint64 pending_resolve_count = 2;
inline bool LiveHttpClientCore::has_pending_resolve_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LiveHttpClientCore::set_has_pending_resolve_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LiveHttpClientCore::clear_has_pending_resolve_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LiveHttpClientCore::clear_pending_resolve_count() {
  pending_resolve_count_ = GOOGLE_ULONGLONG(0);
  clear_has_pending_resolve_count();
}
inline ::google::protobuf::uint64 LiveHttpClientCore::pending_resolve_count() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpClientCore.pending_resolve_count)
  return pending_resolve_count_;
}
inline void LiveHttpClientCore::set_pending_resolve_count(::google::protobuf::uint64 value) {
  set_has_pending_resolve_count();
  pending_resolve_count_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpClientCore.pending_resolve_count)
}

// optional uint64 pending_connection_count = 3;
inline bool LiveHttpClientCore::has_pending_connection_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LiveHttpClientCore::set_has_pending_connection_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LiveHttpClientCore::clear_has_pending_connection_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LiveHttpClientCore::clear_pending_connection_count() {
  pending_connection_count_ = GOOGLE_ULONGLONG(0);
  clear_has_pending_connection_count();
}
inline ::google::protobuf::uint64 LiveHttpClientCore::pending_connection_count() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpClientCore.pending_connection_count)
  return pending_connection_count_;
}
inline void LiveHttpClientCore::set_pending_connection_count(::google::protobuf::uint64 value) {
  set_has_pending_connection_count();
  pending_connection_count_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpClientCore.pending_connection_count)
}

// optional uint64 pending_transaction_count = 4;
inline bool LiveHttpClientCore::has_pending_transaction_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LiveHttpClientCore::set_has_pending_transaction_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LiveHttpClientCore::clear_has_pending_transaction_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LiveHttpClientCore::clear_pending_transaction_count() {
  pending_transaction_count_ = GOOGLE_ULONGLONG(0);
  clear_has_pending_transaction_count();
}
inline ::google::protobuf::uint64 LiveHttpClientCore::pending_transaction_count() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpClientCore.pending_transaction_count)
  return pending_transaction_count_;
}
inline void LiveHttpClientCore::set_pending_transaction_count(::google::protobuf::uint64 value) {
  set_has_pending_transaction_count();
  pending_transaction_count_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpClientCore.pending_transaction_count)
}

// optional .pjcore.HttpClientConfig config = 5;
inline bool LiveHttpClientCore::has_config() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LiveHttpClientCore::set_has_config() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LiveHttpClientCore::clear_has_config() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LiveHttpClientCore::clear_config() {
  if (config_ != NULL) config_->::pjcore::HttpClientConfig::Clear();
  clear_has_config();
}
inline const ::pjcore::HttpClientConfig& LiveHttpClientCore::config() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpClientCore.config)
  return config_ != NULL ? *config_ : *default_instance_->config_;
}
inline ::pjcore::HttpClientConfig* LiveHttpClientCore::mutable_config() {
  set_has_config();
  if (config_ == NULL) {
    config_ = new ::pjcore::HttpClientConfig;
  }
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpClientCore.config)
  return config_;
}
inline ::pjcore::HttpClientConfig* LiveHttpClientCore::release_config() {
  clear_has_config();
  ::pjcore::HttpClientConfig* temp = config_;
  config_ = NULL;
  return temp;
}
inline void LiveHttpClientCore::set_allocated_config(::pjcore::HttpClientConfig* config) {
  delete config_;
  config_ = config;
  if (config) {
    set_has_config();
  } else {
    clear_has_config();
  }
  // @@protoc_insertion_point(field_set_allocated:pjcore.LiveHttpClientCore.config)
}

// optional uint64 shared_loop_ptr = 6;
inline bool LiveHttpClientCore::has_shared_loop_ptr() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LiveHttpClientCore::set_has_shared_loop_ptr() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LiveHttpClientCore::clear_has_shared_loop_ptr() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LiveHttpClientCore::clear_shared_loop_ptr() {
  shared_loop_ptr_ = GOOGLE_ULONGLONG(0);
  clear_has_shared_loop_ptr();
}
inline ::google::protobuf::uint64 LiveHttpClientCore::shared_loop_ptr() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpClientCore.shared_loop_ptr)
  return shared_loop_ptr_;
}
inline void LiveHttpClientCore::set_shared_loop_ptr(::google::protobuf::uint64 value) {
  set_has_shared_loop_ptr();
  shared_loop_ptr_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpClientCore.shared_loop_ptr)
}

// repeated uint64 connection_groups_ptr = 7;
inline int LiveHttpClientCore::connection_groups_ptr_size() const {
  return connection_groups_ptr_.size();
}
inline void LiveHttpClientCore::clear_connection_groups_ptr() {
  connection_groups_ptr_.Clear();
}
inline ::google::protobuf::uint64 LiveHttpClientCore::connection_groups_ptr(int index) const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpClientCore.connection_groups_ptr)
  return connection_groups_ptr_.Get(index);
}
inline void LiveHttpClientCore::set_connection_groups_ptr(int index, ::google::protobuf::uint64 value) {
  connection_groups_ptr_.Set(index, value);
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpClientCore.connection_groups_ptr)
}
inline void LiveHttpClientCore::add_connection_groups_ptr(::google::protobuf::uint64 value) {
  connection_groups_ptr_.Add(value);
  // @@protoc_insertion_point(field_add:pjcore.LiveHttpClientCore.connection_groups_ptr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
LiveHttpClientCore::connection_groups_ptr() const {
  // @@protoc_insertion_point(field_list:pjcore.LiveHttpClientCore.connection_groups_ptr)
  return connection_groups_ptr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
LiveHttpClientCore::mutable_connection_groups_ptr() {
  // @@protoc_insertion_point(field_mutable_list:pjcore.LiveHttpClientCore.connection_groups_ptr)
  return &connection_groups_ptr_;
}

// optional .pjcore.LiveCallback on_destroy = 8;
inline bool LiveHttpClientCore::has_on_destroy() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LiveHttpClientCore::set_has_on_destroy() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LiveHttpClientCore::clear_has_on_destroy() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LiveHttpClientCore::clear_on_destroy() {
  if (on_destroy_ != NULL) on_destroy_->::pjcore::LiveCallback::Clear();
  clear_has_on_destroy();
}
inline const ::pjcore::LiveCallback& LiveHttpClientCore::on_destroy() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpClientCore.on_destroy)
  return on_destroy_ != NULL ? *on_destroy_ : *default_instance_->on_destroy_;
}
inline ::pjcore::LiveCallback* LiveHttpClientCore::mutable_on_destroy() {
  set_has_on_destroy();
  if (on_destroy_ == NULL) {
    on_destroy_ = new ::pjcore::LiveCallback;
  }
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpClientCore.on_destroy)
  return on_destroy_;
}
inline ::pjcore::LiveCallback* LiveHttpClientCore::release_on_destroy() {
  clear_has_on_destroy();
  ::pjcore::LiveCallback* temp = on_destroy_;
  on_destroy_ = NULL;
  return temp;
}
inline void LiveHttpClientCore::set_allocated_on_destroy(::pjcore::LiveCallback* on_destroy) {
  delete on_destroy_;
  on_destroy_ = on_destroy;
  if (on_destroy) {
    set_has_on_destroy();
  } else {
    clear_has_on_destroy();
  }
  // @@protoc_insertion_point(field_set_allocated:pjcore.LiveHttpClientCore.on_destroy)
}

// -------------------------------------------------------------------

// LiveHttpClient

// optional uint64 core_ptr = 1;
inline bool LiveHttpClient::has_core_ptr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LiveHttpClient::set_has_core_ptr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LiveHttpClient::clear_has_core_ptr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LiveHttpClient::clear_core_ptr() {
  core_ptr_ = GOOGLE_ULONGLONG(0);
  clear_has_core_ptr();
}
inline ::google::protobuf::uint64 LiveHttpClient::core_ptr() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpClient.core_ptr)
  return core_ptr_;
}
inline void LiveHttpClient::set_core_ptr(::google::protobuf::uint64 value) {
  set_has_core_ptr();
  core_ptr_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpClient.core_ptr)
}

// optional .pjcore.LiveCallback on_destroy = 2;
inline bool LiveHttpClient::has_on_destroy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LiveHttpClient::set_has_on_destroy() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LiveHttpClient::clear_has_on_destroy() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LiveHttpClient::clear_on_destroy() {
  if (on_destroy_ != NULL) on_destroy_->::pjcore::LiveCallback::Clear();
  clear_has_on_destroy();
}
inline const ::pjcore::LiveCallback& LiveHttpClient::on_destroy() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpClient.on_destroy)
  return on_destroy_ != NULL ? *on_destroy_ : *default_instance_->on_destroy_;
}
inline ::pjcore::LiveCallback* LiveHttpClient::mutable_on_destroy() {
  set_has_on_destroy();
  if (on_destroy_ == NULL) {
    on_destroy_ = new ::pjcore::LiveCallback;
  }
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpClient.on_destroy)
  return on_destroy_;
}
inline ::pjcore::LiveCallback* LiveHttpClient::release_on_destroy() {
  clear_has_on_destroy();
  ::pjcore::LiveCallback* temp = on_destroy_;
  on_destroy_ = NULL;
  return temp;
}
inline void LiveHttpClient::set_allocated_on_destroy(::pjcore::LiveCallback* on_destroy) {
  delete on_destroy_;
  on_destroy_ = on_destroy;
  if (on_destroy) {
    set_has_on_destroy();
  } else {
    clear_has_on_destroy();
  }
  // @@protoc_insertion_point(field_set_allocated:pjcore.LiveHttpClient.on_destroy)
}

// -------------------------------------------------------------------

// LiveHttpCallbackHandler

// optional .pjcore.LiveCallback callback = 1;
inline bool LiveHttpCallbackHandler::has_callback() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LiveHttpCallbackHandler::set_has_callback() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LiveHttpCallbackHandler::clear_has_callback() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LiveHttpCallbackHandler::clear_callback() {
  if (callback_ != NULL) callback_->::pjcore::LiveCallback::Clear();
  clear_has_callback();
}
inline const ::pjcore::LiveCallback& LiveHttpCallbackHandler::callback() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpCallbackHandler.callback)
  return callback_ != NULL ? *callback_ : *default_instance_->callback_;
}
inline ::pjcore::LiveCallback* LiveHttpCallbackHandler::mutable_callback() {
  set_has_callback();
  if (callback_ == NULL) {
    callback_ = new ::pjcore::LiveCallback;
  }
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpCallbackHandler.callback)
  return callback_;
}
inline ::pjcore::LiveCallback* LiveHttpCallbackHandler::release_callback() {
  clear_has_callback();
  ::pjcore::LiveCallback* temp = callback_;
  callback_ = NULL;
  return temp;
}
inline void LiveHttpCallbackHandler::set_allocated_callback(::pjcore::LiveCallback* callback) {
  delete callback_;
  callback_ = callback;
  if (callback) {
    set_has_callback();
  } else {
    clear_has_callback();
  }
  // @@protoc_insertion_point(field_set_allocated:pjcore.LiveHttpCallbackHandler.callback)
}

// -------------------------------------------------------------------

// LiveHttpPathHandler_PathHandlerEntry

// optional string path = 1;
inline bool LiveHttpPathHandler_PathHandlerEntry::has_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LiveHttpPathHandler_PathHandlerEntry::set_has_path() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LiveHttpPathHandler_PathHandlerEntry::clear_has_path() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LiveHttpPathHandler_PathHandlerEntry::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_path();
}
inline const ::std::string& LiveHttpPathHandler_PathHandlerEntry::path() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpPathHandler.PathHandlerEntry.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LiveHttpPathHandler_PathHandlerEntry::set_path(const ::std::string& value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpPathHandler.PathHandlerEntry.path)
}
inline void LiveHttpPathHandler_PathHandlerEntry::set_path(const char* value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pjcore.LiveHttpPathHandler.PathHandlerEntry.path)
}
inline void LiveHttpPathHandler_PathHandlerEntry::set_path(const char* value, size_t size) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pjcore.LiveHttpPathHandler.PathHandlerEntry.path)
}
inline ::std::string* LiveHttpPathHandler_PathHandlerEntry::mutable_path() {
  set_has_path();
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpPathHandler.PathHandlerEntry.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LiveHttpPathHandler_PathHandlerEntry::release_path() {
  clear_has_path();
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LiveHttpPathHandler_PathHandlerEntry::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    set_has_path();
  } else {
    clear_has_path();
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:pjcore.LiveHttpPathHandler.PathHandlerEntry.path)
}

// optional uint64 handler_ptr = 2;
inline bool LiveHttpPathHandler_PathHandlerEntry::has_handler_ptr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LiveHttpPathHandler_PathHandlerEntry::set_has_handler_ptr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LiveHttpPathHandler_PathHandlerEntry::clear_has_handler_ptr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LiveHttpPathHandler_PathHandlerEntry::clear_handler_ptr() {
  handler_ptr_ = GOOGLE_ULONGLONG(0);
  clear_has_handler_ptr();
}
inline ::google::protobuf::uint64 LiveHttpPathHandler_PathHandlerEntry::handler_ptr() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpPathHandler.PathHandlerEntry.handler_ptr)
  return handler_ptr_;
}
inline void LiveHttpPathHandler_PathHandlerEntry::set_handler_ptr(::google::protobuf::uint64 value) {
  set_has_handler_ptr();
  handler_ptr_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpPathHandler.PathHandlerEntry.handler_ptr)
}

// -------------------------------------------------------------------

// LiveHttpPathHandler

// repeated .pjcore.LiveHttpPathHandler.PathHandlerEntry map = 1;
inline int LiveHttpPathHandler::map_size() const {
  return map_.size();
}
inline void LiveHttpPathHandler::clear_map() {
  map_.Clear();
}
inline const ::pjcore::LiveHttpPathHandler_PathHandlerEntry& LiveHttpPathHandler::map(int index) const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpPathHandler.map)
  return map_.Get(index);
}
inline ::pjcore::LiveHttpPathHandler_PathHandlerEntry* LiveHttpPathHandler::mutable_map(int index) {
  // @@protoc_insertion_point(field_mutable:pjcore.LiveHttpPathHandler.map)
  return map_.Mutable(index);
}
inline ::pjcore::LiveHttpPathHandler_PathHandlerEntry* LiveHttpPathHandler::add_map() {
  // @@protoc_insertion_point(field_add:pjcore.LiveHttpPathHandler.map)
  return map_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pjcore::LiveHttpPathHandler_PathHandlerEntry >&
LiveHttpPathHandler::map() const {
  // @@protoc_insertion_point(field_list:pjcore.LiveHttpPathHandler.map)
  return map_;
}
inline ::google::protobuf::RepeatedPtrField< ::pjcore::LiveHttpPathHandler_PathHandlerEntry >*
LiveHttpPathHandler::mutable_map() {
  // @@protoc_insertion_point(field_mutable_list:pjcore.LiveHttpPathHandler.map)
  return &map_;
}

// optional uint64 default_handler_ptr = 2;
inline bool LiveHttpPathHandler::has_default_handler_ptr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LiveHttpPathHandler::set_has_default_handler_ptr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LiveHttpPathHandler::clear_has_default_handler_ptr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LiveHttpPathHandler::clear_default_handler_ptr() {
  default_handler_ptr_ = GOOGLE_ULONGLONG(0);
  clear_has_default_handler_ptr();
}
inline ::google::protobuf::uint64 LiveHttpPathHandler::default_handler_ptr() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveHttpPathHandler.default_handler_ptr)
  return default_handler_ptr_;
}
inline void LiveHttpPathHandler::set_default_handler_ptr(::google::protobuf::uint64 value) {
  set_has_default_handler_ptr();
  default_handler_ptr_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveHttpPathHandler.default_handler_ptr)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pjcore

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_pjcore_2flive_5fhttp_2eproto__INCLUDED
