// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pjcore/live.proto

#ifndef PROTOBUF_pjcore_2flive_2eproto__INCLUDED
#define PROTOBUF_pjcore_2flive_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace pjcore {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_pjcore_2flive_2eproto();
void protobuf_AssignDesc_pjcore_2flive_2eproto();
void protobuf_ShutdownFile_pjcore_2flive_2eproto();

class LiveContent;
class LiveCallback;

// ===================================================================

class LiveContent : public ::google::protobuf::Message {
 public:
  LiveContent();
  virtual ~LiveContent();

  LiveContent(const LiveContent& from);

  inline LiveContent& operator=(const LiveContent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LiveContent& default_instance();

  void Swap(LiveContent* other);

  // implements Message ----------------------------------------------

  inline LiveContent* New() const { return New(NULL); }

  LiveContent* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LiveContent& from);
  void MergeFrom(const LiveContent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LiveContent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 content_size = 1;
  inline bool has_content_size() const;
  inline void clear_content_size();
  static const int kContentSizeFieldNumber = 1;
  inline ::google::protobuf::uint64 content_size() const;
  inline void set_content_size(::google::protobuf::uint64 value);

  // optional uint64 content_ptr = 2;
  inline bool has_content_ptr() const;
  inline void clear_content_ptr();
  static const int kContentPtrFieldNumber = 2;
  inline ::google::protobuf::uint64 content_ptr() const;
  inline void set_content_ptr(::google::protobuf::uint64 value);

  // optional string content = 3;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 3;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // optional string content_hex = 4;
  inline bool has_content_hex() const;
  inline void clear_content_hex();
  static const int kContentHexFieldNumber = 4;
  inline const ::std::string& content_hex() const;
  inline void set_content_hex(const ::std::string& value);
  inline void set_content_hex(const char* value);
  inline void set_content_hex(const char* value, size_t size);
  inline ::std::string* mutable_content_hex();
  inline ::std::string* release_content_hex();
  inline void set_allocated_content_hex(::std::string* content_hex);

  // optional string truncated_content = 5;
  inline bool has_truncated_content() const;
  inline void clear_truncated_content();
  static const int kTruncatedContentFieldNumber = 5;
  inline const ::std::string& truncated_content() const;
  inline void set_truncated_content(const ::std::string& value);
  inline void set_truncated_content(const char* value);
  inline void set_truncated_content(const char* value, size_t size);
  inline ::std::string* mutable_truncated_content();
  inline ::std::string* release_truncated_content();
  inline void set_allocated_truncated_content(::std::string* truncated_content);

  // optional string truncated_content_hex = 6;
  inline bool has_truncated_content_hex() const;
  inline void clear_truncated_content_hex();
  static const int kTruncatedContentHexFieldNumber = 6;
  inline const ::std::string& truncated_content_hex() const;
  inline void set_truncated_content_hex(const ::std::string& value);
  inline void set_truncated_content_hex(const char* value);
  inline void set_truncated_content_hex(const char* value, size_t size);
  inline ::std::string* mutable_truncated_content_hex();
  inline ::std::string* release_truncated_content_hex();
  inline void set_allocated_truncated_content_hex(::std::string* truncated_content_hex);

  // @@protoc_insertion_point(class_scope:pjcore.LiveContent)
 private:
  inline void set_has_content_size();
  inline void clear_has_content_size();
  inline void set_has_content_ptr();
  inline void clear_has_content_ptr();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_content_hex();
  inline void clear_has_content_hex();
  inline void set_has_truncated_content();
  inline void clear_has_truncated_content();
  inline void set_has_truncated_content_hex();
  inline void clear_has_truncated_content_hex();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 content_size_;
  ::google::protobuf::uint64 content_ptr_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::internal::ArenaStringPtr content_hex_;
  ::google::protobuf::internal::ArenaStringPtr truncated_content_;
  ::google::protobuf::internal::ArenaStringPtr truncated_content_hex_;
  friend void  protobuf_AddDesc_pjcore_2flive_2eproto();
  friend void protobuf_AssignDesc_pjcore_2flive_2eproto();
  friend void protobuf_ShutdownFile_pjcore_2flive_2eproto();

  void InitAsDefaultInstance();
  static LiveContent* default_instance_;
};
// -------------------------------------------------------------------

class LiveCallback : public ::google::protobuf::Message {
 public:
  LiveCallback();
  virtual ~LiveCallback();

  LiveCallback(const LiveCallback& from);

  inline LiveCallback& operator=(const LiveCallback& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LiveCallback& default_instance();

  void Swap(LiveCallback* other);

  // implements Message ----------------------------------------------

  inline LiveCallback* New() const { return New(NULL); }

  LiveCallback* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LiveCallback& from);
  void MergeFrom(const LiveCallback& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LiveCallback* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 bind_state_ptr = 1;
  inline bool has_bind_state_ptr() const;
  inline void clear_bind_state_ptr();
  static const int kBindStatePtrFieldNumber = 1;
  inline ::google::protobuf::uint64 bind_state_ptr() const;
  inline void set_bind_state_ptr(::google::protobuf::uint64 value);

  // optional uint64 polymorphic_invoke_ptr = 2;
  inline bool has_polymorphic_invoke_ptr() const;
  inline void clear_polymorphic_invoke_ptr();
  static const int kPolymorphicInvokePtrFieldNumber = 2;
  inline ::google::protobuf::uint64 polymorphic_invoke_ptr() const;
  inline void set_polymorphic_invoke_ptr(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pjcore.LiveCallback)
 private:
  inline void set_has_bind_state_ptr();
  inline void clear_has_bind_state_ptr();
  inline void set_has_polymorphic_invoke_ptr();
  inline void clear_has_polymorphic_invoke_ptr();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 bind_state_ptr_;
  ::google::protobuf::uint64 polymorphic_invoke_ptr_;
  friend void  protobuf_AddDesc_pjcore_2flive_2eproto();
  friend void protobuf_AssignDesc_pjcore_2flive_2eproto();
  friend void protobuf_ShutdownFile_pjcore_2flive_2eproto();

  void InitAsDefaultInstance();
  static LiveCallback* default_instance_;
};
// ===================================================================


// ===================================================================

// LiveContent

// optional uint64 content_size = 1;
inline bool LiveContent::has_content_size() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LiveContent::set_has_content_size() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LiveContent::clear_has_content_size() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LiveContent::clear_content_size() {
  content_size_ = GOOGLE_ULONGLONG(0);
  clear_has_content_size();
}
inline ::google::protobuf::uint64 LiveContent::content_size() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveContent.content_size)
  return content_size_;
}
inline void LiveContent::set_content_size(::google::protobuf::uint64 value) {
  set_has_content_size();
  content_size_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveContent.content_size)
}

// optional uint64 content_ptr = 2;
inline bool LiveContent::has_content_ptr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LiveContent::set_has_content_ptr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LiveContent::clear_has_content_ptr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LiveContent::clear_content_ptr() {
  content_ptr_ = GOOGLE_ULONGLONG(0);
  clear_has_content_ptr();
}
inline ::google::protobuf::uint64 LiveContent::content_ptr() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveContent.content_ptr)
  return content_ptr_;
}
inline void LiveContent::set_content_ptr(::google::protobuf::uint64 value) {
  set_has_content_ptr();
  content_ptr_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveContent.content_ptr)
}

// optional string content = 3;
inline bool LiveContent::has_content() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LiveContent::set_has_content() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LiveContent::clear_has_content() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LiveContent::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& LiveContent::content() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveContent.content)
  return content_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LiveContent::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pjcore.LiveContent.content)
}
inline void LiveContent::set_content(const char* value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pjcore.LiveContent.content)
}
inline void LiveContent::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pjcore.LiveContent.content)
}
inline ::std::string* LiveContent::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:pjcore.LiveContent.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LiveContent::release_content() {
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LiveContent::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:pjcore.LiveContent.content)
}

// optional string content_hex = 4;
inline bool LiveContent::has_content_hex() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LiveContent::set_has_content_hex() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LiveContent::clear_has_content_hex() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LiveContent::clear_content_hex() {
  content_hex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content_hex();
}
inline const ::std::string& LiveContent::content_hex() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveContent.content_hex)
  return content_hex_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LiveContent::set_content_hex(const ::std::string& value) {
  set_has_content_hex();
  content_hex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pjcore.LiveContent.content_hex)
}
inline void LiveContent::set_content_hex(const char* value) {
  set_has_content_hex();
  content_hex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pjcore.LiveContent.content_hex)
}
inline void LiveContent::set_content_hex(const char* value, size_t size) {
  set_has_content_hex();
  content_hex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pjcore.LiveContent.content_hex)
}
inline ::std::string* LiveContent::mutable_content_hex() {
  set_has_content_hex();
  // @@protoc_insertion_point(field_mutable:pjcore.LiveContent.content_hex)
  return content_hex_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LiveContent::release_content_hex() {
  clear_has_content_hex();
  return content_hex_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LiveContent::set_allocated_content_hex(::std::string* content_hex) {
  if (content_hex != NULL) {
    set_has_content_hex();
  } else {
    clear_has_content_hex();
  }
  content_hex_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content_hex);
  // @@protoc_insertion_point(field_set_allocated:pjcore.LiveContent.content_hex)
}

// optional string truncated_content = 5;
inline bool LiveContent::has_truncated_content() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LiveContent::set_has_truncated_content() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LiveContent::clear_has_truncated_content() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LiveContent::clear_truncated_content() {
  truncated_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_truncated_content();
}
inline const ::std::string& LiveContent::truncated_content() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveContent.truncated_content)
  return truncated_content_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LiveContent::set_truncated_content(const ::std::string& value) {
  set_has_truncated_content();
  truncated_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pjcore.LiveContent.truncated_content)
}
inline void LiveContent::set_truncated_content(const char* value) {
  set_has_truncated_content();
  truncated_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pjcore.LiveContent.truncated_content)
}
inline void LiveContent::set_truncated_content(const char* value, size_t size) {
  set_has_truncated_content();
  truncated_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pjcore.LiveContent.truncated_content)
}
inline ::std::string* LiveContent::mutable_truncated_content() {
  set_has_truncated_content();
  // @@protoc_insertion_point(field_mutable:pjcore.LiveContent.truncated_content)
  return truncated_content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LiveContent::release_truncated_content() {
  clear_has_truncated_content();
  return truncated_content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LiveContent::set_allocated_truncated_content(::std::string* truncated_content) {
  if (truncated_content != NULL) {
    set_has_truncated_content();
  } else {
    clear_has_truncated_content();
  }
  truncated_content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), truncated_content);
  // @@protoc_insertion_point(field_set_allocated:pjcore.LiveContent.truncated_content)
}

// optional string truncated_content_hex = 6;
inline bool LiveContent::has_truncated_content_hex() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LiveContent::set_has_truncated_content_hex() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LiveContent::clear_has_truncated_content_hex() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LiveContent::clear_truncated_content_hex() {
  truncated_content_hex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_truncated_content_hex();
}
inline const ::std::string& LiveContent::truncated_content_hex() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveContent.truncated_content_hex)
  return truncated_content_hex_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LiveContent::set_truncated_content_hex(const ::std::string& value) {
  set_has_truncated_content_hex();
  truncated_content_hex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pjcore.LiveContent.truncated_content_hex)
}
inline void LiveContent::set_truncated_content_hex(const char* value) {
  set_has_truncated_content_hex();
  truncated_content_hex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pjcore.LiveContent.truncated_content_hex)
}
inline void LiveContent::set_truncated_content_hex(const char* value, size_t size) {
  set_has_truncated_content_hex();
  truncated_content_hex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pjcore.LiveContent.truncated_content_hex)
}
inline ::std::string* LiveContent::mutable_truncated_content_hex() {
  set_has_truncated_content_hex();
  // @@protoc_insertion_point(field_mutable:pjcore.LiveContent.truncated_content_hex)
  return truncated_content_hex_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LiveContent::release_truncated_content_hex() {
  clear_has_truncated_content_hex();
  return truncated_content_hex_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LiveContent::set_allocated_truncated_content_hex(::std::string* truncated_content_hex) {
  if (truncated_content_hex != NULL) {
    set_has_truncated_content_hex();
  } else {
    clear_has_truncated_content_hex();
  }
  truncated_content_hex_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), truncated_content_hex);
  // @@protoc_insertion_point(field_set_allocated:pjcore.LiveContent.truncated_content_hex)
}

// -------------------------------------------------------------------

// LiveCallback

// optional uint64 bind_state_ptr = 1;
inline bool LiveCallback::has_bind_state_ptr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LiveCallback::set_has_bind_state_ptr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LiveCallback::clear_has_bind_state_ptr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LiveCallback::clear_bind_state_ptr() {
  bind_state_ptr_ = GOOGLE_ULONGLONG(0);
  clear_has_bind_state_ptr();
}
inline ::google::protobuf::uint64 LiveCallback::bind_state_ptr() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveCallback.bind_state_ptr)
  return bind_state_ptr_;
}
inline void LiveCallback::set_bind_state_ptr(::google::protobuf::uint64 value) {
  set_has_bind_state_ptr();
  bind_state_ptr_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveCallback.bind_state_ptr)
}

// optional uint64 polymorphic_invoke_ptr = 2;
inline bool LiveCallback::has_polymorphic_invoke_ptr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LiveCallback::set_has_polymorphic_invoke_ptr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LiveCallback::clear_has_polymorphic_invoke_ptr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LiveCallback::clear_polymorphic_invoke_ptr() {
  polymorphic_invoke_ptr_ = GOOGLE_ULONGLONG(0);
  clear_has_polymorphic_invoke_ptr();
}
inline ::google::protobuf::uint64 LiveCallback::polymorphic_invoke_ptr() const {
  // @@protoc_insertion_point(field_get:pjcore.LiveCallback.polymorphic_invoke_ptr)
  return polymorphic_invoke_ptr_;
}
inline void LiveCallback::set_polymorphic_invoke_ptr(::google::protobuf::uint64 value) {
  set_has_polymorphic_invoke_ptr();
  polymorphic_invoke_ptr_ = value;
  // @@protoc_insertion_point(field_set:pjcore.LiveCallback.polymorphic_invoke_ptr)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pjcore

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_pjcore_2flive_2eproto__INCLUDED
