// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pjcore/live.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "pjcore/live.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pjcore {

namespace {

const ::google::protobuf::Descriptor* LiveContent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LiveContent_reflection_ = NULL;
const ::google::protobuf::Descriptor* LiveCallback_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LiveCallback_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_pjcore_2flive_2eproto() {
  protobuf_AddDesc_pjcore_2flive_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "pjcore/live.proto");
  GOOGLE_CHECK(file != NULL);
  LiveContent_descriptor_ = file->message_type(0);
  static const int LiveContent_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiveContent, content_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiveContent, content_ptr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiveContent, content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiveContent, content_hex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiveContent, truncated_content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiveContent, truncated_content_hex_),
  };
  LiveContent_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LiveContent_descriptor_,
      LiveContent::default_instance_,
      LiveContent_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiveContent, _has_bits_[0]),
      -1,
      -1,
      sizeof(LiveContent),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiveContent, _internal_metadata_));
  LiveCallback_descriptor_ = file->message_type(1);
  static const int LiveCallback_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiveCallback, bind_state_ptr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiveCallback, polymorphic_invoke_ptr_),
  };
  LiveCallback_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LiveCallback_descriptor_,
      LiveCallback::default_instance_,
      LiveCallback_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiveCallback, _has_bits_[0]),
      -1,
      -1,
      sizeof(LiveCallback),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiveCallback, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_pjcore_2flive_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LiveContent_descriptor_, &LiveContent::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LiveCallback_descriptor_, &LiveCallback::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_pjcore_2flive_2eproto() {
  delete LiveContent::default_instance_;
  delete LiveContent_reflection_;
  delete LiveCallback::default_instance_;
  delete LiveCallback_reflection_;
}

void protobuf_AddDesc_pjcore_2flive_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021pjcore/live.proto\022\006pjcore\"\230\001\n\013LiveCont"
    "ent\022\024\n\014content_size\030\001 \001(\004\022\023\n\013content_ptr"
    "\030\002 \001(\004\022\017\n\007content\030\003 \001(\t\022\023\n\013content_hex\030\004"
    " \001(\t\022\031\n\021truncated_content\030\005 \001(\t\022\035\n\025trunc"
    "ated_content_hex\030\006 \001(\t\"F\n\014LiveCallback\022\026"
    "\n\016bind_state_ptr\030\001 \001(\004\022\036\n\026polymorphic_in"
    "voke_ptr\030\002 \001(\004", 254);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "pjcore/live.proto", &protobuf_RegisterTypes);
  LiveContent::default_instance_ = new LiveContent();
  LiveCallback::default_instance_ = new LiveCallback();
  LiveContent::default_instance_->InitAsDefaultInstance();
  LiveCallback::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_pjcore_2flive_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_pjcore_2flive_2eproto {
  StaticDescriptorInitializer_pjcore_2flive_2eproto() {
    protobuf_AddDesc_pjcore_2flive_2eproto();
  }
} static_descriptor_initializer_pjcore_2flive_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int LiveContent::kContentSizeFieldNumber;
const int LiveContent::kContentPtrFieldNumber;
const int LiveContent::kContentFieldNumber;
const int LiveContent::kContentHexFieldNumber;
const int LiveContent::kTruncatedContentFieldNumber;
const int LiveContent::kTruncatedContentHexFieldNumber;
#endif  // !_MSC_VER

LiveContent::LiveContent()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pjcore.LiveContent)
}

void LiveContent::InitAsDefaultInstance() {
}

LiveContent::LiveContent(const LiveContent& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pjcore.LiveContent)
}

void LiveContent::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  content_size_ = GOOGLE_ULONGLONG(0);
  content_ptr_ = GOOGLE_ULONGLONG(0);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_hex_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  truncated_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  truncated_content_hex_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LiveContent::~LiveContent() {
  // @@protoc_insertion_point(destructor:pjcore.LiveContent)
  SharedDtor();
}

void LiveContent::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_hex_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  truncated_content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  truncated_content_hex_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void LiveContent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LiveContent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LiveContent_descriptor_;
}

const LiveContent& LiveContent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pjcore_2flive_2eproto();
  return *default_instance_;
}

LiveContent* LiveContent::default_instance_ = NULL;

LiveContent* LiveContent::New(::google::protobuf::Arena* arena) const {
  LiveContent* n = new LiveContent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LiveContent::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<LiveContent*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(content_size_, content_ptr_);
    if (has_content()) {
      content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_content_hex()) {
      content_hex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_truncated_content()) {
      truncated_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_truncated_content_hex()) {
      truncated_content_hex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LiveContent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pjcore.LiveContent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 content_size = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &content_size_)));
          set_has_content_size();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_content_ptr;
        break;
      }

      // optional uint64 content_ptr = 2;
      case 2: {
        if (tag == 16) {
         parse_content_ptr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &content_ptr_)));
          set_has_content_ptr();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_content;
        break;
      }

      // optional string content = 3;
      case 3: {
        if (tag == 26) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pjcore.LiveContent.content");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_content_hex;
        break;
      }

      // optional string content_hex = 4;
      case 4: {
        if (tag == 34) {
         parse_content_hex:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content_hex()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->content_hex().data(), this->content_hex().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pjcore.LiveContent.content_hex");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_truncated_content;
        break;
      }

      // optional string truncated_content = 5;
      case 5: {
        if (tag == 42) {
         parse_truncated_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_truncated_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->truncated_content().data(), this->truncated_content().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pjcore.LiveContent.truncated_content");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_truncated_content_hex;
        break;
      }

      // optional string truncated_content_hex = 6;
      case 6: {
        if (tag == 50) {
         parse_truncated_content_hex:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_truncated_content_hex()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->truncated_content_hex().data(), this->truncated_content_hex().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pjcore.LiveContent.truncated_content_hex");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pjcore.LiveContent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pjcore.LiveContent)
  return false;
#undef DO_
}

void LiveContent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pjcore.LiveContent)
  // optional uint64 content_size = 1;
  if (has_content_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->content_size(), output);
  }

  // optional uint64 content_ptr = 2;
  if (has_content_ptr()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->content_ptr(), output);
  }

  // optional string content = 3;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pjcore.LiveContent.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->content(), output);
  }

  // optional string content_hex = 4;
  if (has_content_hex()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content_hex().data(), this->content_hex().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pjcore.LiveContent.content_hex");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->content_hex(), output);
  }

  // optional string truncated_content = 5;
  if (has_truncated_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->truncated_content().data(), this->truncated_content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pjcore.LiveContent.truncated_content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->truncated_content(), output);
  }

  // optional string truncated_content_hex = 6;
  if (has_truncated_content_hex()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->truncated_content_hex().data(), this->truncated_content_hex().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pjcore.LiveContent.truncated_content_hex");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->truncated_content_hex(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pjcore.LiveContent)
}

::google::protobuf::uint8* LiveContent::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pjcore.LiveContent)
  // optional uint64 content_size = 1;
  if (has_content_size()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->content_size(), target);
  }

  // optional uint64 content_ptr = 2;
  if (has_content_ptr()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->content_ptr(), target);
  }

  // optional string content = 3;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pjcore.LiveContent.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->content(), target);
  }

  // optional string content_hex = 4;
  if (has_content_hex()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content_hex().data(), this->content_hex().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pjcore.LiveContent.content_hex");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->content_hex(), target);
  }

  // optional string truncated_content = 5;
  if (has_truncated_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->truncated_content().data(), this->truncated_content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pjcore.LiveContent.truncated_content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->truncated_content(), target);
  }

  // optional string truncated_content_hex = 6;
  if (has_truncated_content_hex()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->truncated_content_hex().data(), this->truncated_content_hex().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pjcore.LiveContent.truncated_content_hex");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->truncated_content_hex(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pjcore.LiveContent)
  return target;
}

int LiveContent::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 63) {
    // optional uint64 content_size = 1;
    if (has_content_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->content_size());
    }

    // optional uint64 content_ptr = 2;
    if (has_content_ptr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->content_ptr());
    }

    // optional string content = 3;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content());
    }

    // optional string content_hex = 4;
    if (has_content_hex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content_hex());
    }

    // optional string truncated_content = 5;
    if (has_truncated_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->truncated_content());
    }

    // optional string truncated_content_hex = 6;
    if (has_truncated_content_hex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->truncated_content_hex());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LiveContent::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LiveContent* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LiveContent*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LiveContent::MergeFrom(const LiveContent& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_content_size()) {
      set_content_size(from.content_size());
    }
    if (from.has_content_ptr()) {
      set_content_ptr(from.content_ptr());
    }
    if (from.has_content()) {
      set_has_content();
      content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
    }
    if (from.has_content_hex()) {
      set_has_content_hex();
      content_hex_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_hex_);
    }
    if (from.has_truncated_content()) {
      set_has_truncated_content();
      truncated_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.truncated_content_);
    }
    if (from.has_truncated_content_hex()) {
      set_has_truncated_content_hex();
      truncated_content_hex_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.truncated_content_hex_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LiveContent::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LiveContent::CopyFrom(const LiveContent& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LiveContent::IsInitialized() const {

  return true;
}

void LiveContent::Swap(LiveContent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LiveContent::InternalSwap(LiveContent* other) {
  std::swap(content_size_, other->content_size_);
  std::swap(content_ptr_, other->content_ptr_);
  content_.Swap(&other->content_);
  content_hex_.Swap(&other->content_hex_);
  truncated_content_.Swap(&other->truncated_content_);
  truncated_content_hex_.Swap(&other->truncated_content_hex_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LiveContent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LiveContent_descriptor_;
  metadata.reflection = LiveContent_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LiveCallback::kBindStatePtrFieldNumber;
const int LiveCallback::kPolymorphicInvokePtrFieldNumber;
#endif  // !_MSC_VER

LiveCallback::LiveCallback()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pjcore.LiveCallback)
}

void LiveCallback::InitAsDefaultInstance() {
}

LiveCallback::LiveCallback(const LiveCallback& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pjcore.LiveCallback)
}

void LiveCallback::SharedCtor() {
  _cached_size_ = 0;
  bind_state_ptr_ = GOOGLE_ULONGLONG(0);
  polymorphic_invoke_ptr_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LiveCallback::~LiveCallback() {
  // @@protoc_insertion_point(destructor:pjcore.LiveCallback)
  SharedDtor();
}

void LiveCallback::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LiveCallback::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LiveCallback::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LiveCallback_descriptor_;
}

const LiveCallback& LiveCallback::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pjcore_2flive_2eproto();
  return *default_instance_;
}

LiveCallback* LiveCallback::default_instance_ = NULL;

LiveCallback* LiveCallback::New(::google::protobuf::Arena* arena) const {
  LiveCallback* n = new LiveCallback;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LiveCallback::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<LiveCallback*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(bind_state_ptr_, polymorphic_invoke_ptr_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LiveCallback::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pjcore.LiveCallback)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 bind_state_ptr = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bind_state_ptr_)));
          set_has_bind_state_ptr();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_polymorphic_invoke_ptr;
        break;
      }

      // optional uint64 polymorphic_invoke_ptr = 2;
      case 2: {
        if (tag == 16) {
         parse_polymorphic_invoke_ptr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &polymorphic_invoke_ptr_)));
          set_has_polymorphic_invoke_ptr();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pjcore.LiveCallback)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pjcore.LiveCallback)
  return false;
#undef DO_
}

void LiveCallback::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pjcore.LiveCallback)
  // optional uint64 bind_state_ptr = 1;
  if (has_bind_state_ptr()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->bind_state_ptr(), output);
  }

  // optional uint64 polymorphic_invoke_ptr = 2;
  if (has_polymorphic_invoke_ptr()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->polymorphic_invoke_ptr(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pjcore.LiveCallback)
}

::google::protobuf::uint8* LiveCallback::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pjcore.LiveCallback)
  // optional uint64 bind_state_ptr = 1;
  if (has_bind_state_ptr()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->bind_state_ptr(), target);
  }

  // optional uint64 polymorphic_invoke_ptr = 2;
  if (has_polymorphic_invoke_ptr()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->polymorphic_invoke_ptr(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pjcore.LiveCallback)
  return target;
}

int LiveCallback::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3) {
    // optional uint64 bind_state_ptr = 1;
    if (has_bind_state_ptr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->bind_state_ptr());
    }

    // optional uint64 polymorphic_invoke_ptr = 2;
    if (has_polymorphic_invoke_ptr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->polymorphic_invoke_ptr());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LiveCallback::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LiveCallback* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LiveCallback*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LiveCallback::MergeFrom(const LiveCallback& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bind_state_ptr()) {
      set_bind_state_ptr(from.bind_state_ptr());
    }
    if (from.has_polymorphic_invoke_ptr()) {
      set_polymorphic_invoke_ptr(from.polymorphic_invoke_ptr());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LiveCallback::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LiveCallback::CopyFrom(const LiveCallback& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LiveCallback::IsInitialized() const {

  return true;
}

void LiveCallback::Swap(LiveCallback* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LiveCallback::InternalSwap(LiveCallback* other) {
  std::swap(bind_state_ptr_, other->bind_state_ptr_);
  std::swap(polymorphic_invoke_ptr_, other->polymorphic_invoke_ptr_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LiveCallback::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LiveCallback_descriptor_;
  metadata.reflection = LiveCallback_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pjcore

// @@protoc_insertion_point(global_scope)
