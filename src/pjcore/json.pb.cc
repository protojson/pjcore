// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pjcore/json.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "pjcore/json.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pjcore {

namespace {

const ::google::protobuf::Descriptor* JsonValue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  JsonValue_reflection_ = NULL;
const ::google::protobuf::Descriptor* JsonValue_Property_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  JsonValue_Property_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* JsonValue_Type_descriptor_ = NULL;
const ::google::protobuf::Descriptor* JsonReaderConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  JsonReaderConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* JsonWriterConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  JsonWriterConfig_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_pjcore_2fjson_2eproto() {
  protobuf_AddDesc_pjcore_2fjson_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "pjcore/json.proto");
  GOOGLE_CHECK(file != NULL);
  JsonValue_descriptor_ = file->message_type(0);
  static const int JsonValue_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonValue, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonValue, bool_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonValue, signed_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonValue, unsigned_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonValue, double_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonValue, string_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonValue, object_properties_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonValue, array_elements_),
  };
  JsonValue_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      JsonValue_descriptor_,
      JsonValue::default_instance_,
      JsonValue_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonValue, _has_bits_[0]),
      -1,
      -1,
      sizeof(JsonValue),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonValue, _internal_metadata_));
  JsonValue_Property_descriptor_ = JsonValue_descriptor_->nested_type(0);
  static const int JsonValue_Property_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonValue_Property, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonValue_Property, value_),
  };
  JsonValue_Property_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      JsonValue_Property_descriptor_,
      JsonValue_Property::default_instance_,
      JsonValue_Property_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonValue_Property, _has_bits_[0]),
      -1,
      -1,
      sizeof(JsonValue_Property),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonValue_Property, _internal_metadata_));
  JsonValue_Type_descriptor_ = JsonValue_descriptor_->enum_type(0);
  JsonReaderConfig_descriptor_ = file->message_type(1);
  static const int JsonReaderConfig_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonReaderConfig, disallow_comments_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonReaderConfig, disallow_trailing_commas_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonReaderConfig, properties_as_is_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonReaderConfig, allow_control_characters_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonReaderConfig, disallow_nan_and_infinity_),
  };
  JsonReaderConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      JsonReaderConfig_descriptor_,
      JsonReaderConfig::default_instance_,
      JsonReaderConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonReaderConfig, _has_bits_[0]),
      -1,
      -1,
      sizeof(JsonReaderConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonReaderConfig, _internal_metadata_));
  JsonWriterConfig_descriptor_ = file->message_type(2);
  static const int JsonWriterConfig_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonWriterConfig, include_byte_order_mark_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonWriterConfig, escape_unicode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonWriterConfig, space_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonWriterConfig, indent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonWriterConfig, null_for_nan_and_infinity_),
  };
  JsonWriterConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      JsonWriterConfig_descriptor_,
      JsonWriterConfig::default_instance_,
      JsonWriterConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonWriterConfig, _has_bits_[0]),
      -1,
      -1,
      sizeof(JsonWriterConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonWriterConfig, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_pjcore_2fjson_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      JsonValue_descriptor_, &JsonValue::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      JsonValue_Property_descriptor_, &JsonValue_Property::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      JsonReaderConfig_descriptor_, &JsonReaderConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      JsonWriterConfig_descriptor_, &JsonWriterConfig::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_pjcore_2fjson_2eproto() {
  delete JsonValue::default_instance_;
  delete JsonValue_reflection_;
  delete JsonValue_Property::default_instance_;
  delete JsonValue_Property_reflection_;
  delete JsonReaderConfig::default_instance_;
  delete JsonReaderConfig_reflection_;
  delete JsonWriterConfig::default_instance_;
  delete JsonWriterConfig_reflection_;
}

void protobuf_AddDesc_pjcore_2fjson_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021pjcore/json.proto\022\006pjcore\"\313\003\n\tJsonValu"
    "e\022$\n\004type\030\001 \001(\0162\026.pjcore.JsonValue.Type\022"
    "\022\n\nbool_value\030\002 \001(\010\022\024\n\014signed_value\030\003 \001("
    "\003\022\026\n\016unsigned_value\030\004 \001(\004\022\024\n\014double_valu"
    "e\030\005 \001(\001\022\024\n\014string_value\030\006 \001(\t\0225\n\021object_"
    "properties\030\007 \003(\0132\032.pjcore.JsonValue.Prop"
    "erty\022)\n\016array_elements\030\010 \003(\0132\021.pjcore.Js"
    "onValue\032:\n\010Property\022\014\n\004name\030\001 \001(\t\022 \n\005val"
    "ue\030\002 \001(\0132\021.pjcore.JsonValue\"\213\001\n\004Type\022\r\n\t"
    "TYPE_NULL\020\000\022\r\n\tTYPE_BOOL\020\001\022\017\n\013TYPE_SIGNE"
    "D\020\002\022\021\n\rTYPE_UNSIGNED\020\003\022\017\n\013TYPE_DOUBLE\020\004\022"
    "\017\n\013TYPE_STRING\020\005\022\017\n\013TYPE_OBJECT\020\006\022\016\n\nTYP"
    "E_ARRAY\020\007\"\256\001\n\020JsonReaderConfig\022\031\n\021disall"
    "ow_comments\030\001 \001(\010\022 \n\030disallow_trailing_c"
    "ommas\030\002 \001(\010\022\030\n\020properties_as_is\030\003 \001(\010\022 \n"
    "\030allow_control_characters\030\004 \001(\010\022!\n\031disal"
    "low_nan_and_infinity\030\005 \001(\010\"\215\001\n\020JsonWrite"
    "rConfig\022\037\n\027include_byte_order_mark\030\001 \001(\010"
    "\022\026\n\016escape_unicode\030\002 \001(\010\022\r\n\005space\030\003 \001(\010\022"
    "\016\n\006indent\030\004 \001(\r\022!\n\031null_for_nan_and_infi"
    "nity\030\005 \001(\010", 810);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "pjcore/json.proto", &protobuf_RegisterTypes);
  JsonValue::default_instance_ = new JsonValue();
  JsonValue_Property::default_instance_ = new JsonValue_Property();
  JsonReaderConfig::default_instance_ = new JsonReaderConfig();
  JsonWriterConfig::default_instance_ = new JsonWriterConfig();
  JsonValue::default_instance_->InitAsDefaultInstance();
  JsonValue_Property::default_instance_->InitAsDefaultInstance();
  JsonReaderConfig::default_instance_->InitAsDefaultInstance();
  JsonWriterConfig::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_pjcore_2fjson_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_pjcore_2fjson_2eproto {
  StaticDescriptorInitializer_pjcore_2fjson_2eproto() {
    protobuf_AddDesc_pjcore_2fjson_2eproto();
  }
} static_descriptor_initializer_pjcore_2fjson_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

const ::google::protobuf::EnumDescriptor* JsonValue_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JsonValue_Type_descriptor_;
}
bool JsonValue_Type_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const JsonValue_Type JsonValue::TYPE_NULL;
const JsonValue_Type JsonValue::TYPE_BOOL;
const JsonValue_Type JsonValue::TYPE_SIGNED;
const JsonValue_Type JsonValue::TYPE_UNSIGNED;
const JsonValue_Type JsonValue::TYPE_DOUBLE;
const JsonValue_Type JsonValue::TYPE_STRING;
const JsonValue_Type JsonValue::TYPE_OBJECT;
const JsonValue_Type JsonValue::TYPE_ARRAY;
const JsonValue_Type JsonValue::Type_MIN;
const JsonValue_Type JsonValue::Type_MAX;
const int JsonValue::Type_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int JsonValue_Property::kNameFieldNumber;
const int JsonValue_Property::kValueFieldNumber;
#endif  // !_MSC_VER

JsonValue_Property::JsonValue_Property()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pjcore.JsonValue.Property)
}

void JsonValue_Property::InitAsDefaultInstance() {
  value_ = const_cast< ::pjcore::JsonValue*>(&::pjcore::JsonValue::default_instance());
}

JsonValue_Property::JsonValue_Property(const JsonValue_Property& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pjcore.JsonValue.Property)
}

void JsonValue_Property::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

JsonValue_Property::~JsonValue_Property() {
  // @@protoc_insertion_point(destructor:pjcore.JsonValue.Property)
  SharedDtor();
}

void JsonValue_Property::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete value_;
  }
}

void JsonValue_Property::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JsonValue_Property::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JsonValue_Property_descriptor_;
}

const JsonValue_Property& JsonValue_Property::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pjcore_2fjson_2eproto();
  return *default_instance_;
}

JsonValue_Property* JsonValue_Property::default_instance_ = NULL;

JsonValue_Property* JsonValue_Property::New(::google::protobuf::Arena* arena) const {
  JsonValue_Property* n = new JsonValue_Property;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JsonValue_Property::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_value()) {
      if (value_ != NULL) value_->::pjcore::JsonValue::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool JsonValue_Property::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pjcore.JsonValue.Property)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pjcore.JsonValue.Property.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // optional .pjcore.JsonValue value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pjcore.JsonValue.Property)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pjcore.JsonValue.Property)
  return false;
#undef DO_
}

void JsonValue_Property::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pjcore.JsonValue.Property)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pjcore.JsonValue.Property.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .pjcore.JsonValue value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->value_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pjcore.JsonValue.Property)
}

::google::protobuf::uint8* JsonValue_Property::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pjcore.JsonValue.Property)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pjcore.JsonValue.Property.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .pjcore.JsonValue value = 2;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->value_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pjcore.JsonValue.Property)
  return target;
}

int JsonValue_Property::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .pjcore.JsonValue value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->value_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JsonValue_Property::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const JsonValue_Property* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const JsonValue_Property*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void JsonValue_Property::MergeFrom(const JsonValue_Property& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_value()) {
      mutable_value()->::pjcore::JsonValue::MergeFrom(from.value());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void JsonValue_Property::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JsonValue_Property::CopyFrom(const JsonValue_Property& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JsonValue_Property::IsInitialized() const {

  return true;
}

void JsonValue_Property::Swap(JsonValue_Property* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JsonValue_Property::InternalSwap(JsonValue_Property* other) {
  name_.Swap(&other->name_);
  std::swap(value_, other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JsonValue_Property::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = JsonValue_Property_descriptor_;
  metadata.reflection = JsonValue_Property_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int JsonValue::kTypeFieldNumber;
const int JsonValue::kBoolValueFieldNumber;
const int JsonValue::kSignedValueFieldNumber;
const int JsonValue::kUnsignedValueFieldNumber;
const int JsonValue::kDoubleValueFieldNumber;
const int JsonValue::kStringValueFieldNumber;
const int JsonValue::kObjectPropertiesFieldNumber;
const int JsonValue::kArrayElementsFieldNumber;
#endif  // !_MSC_VER

JsonValue::JsonValue()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pjcore.JsonValue)
}

void JsonValue::InitAsDefaultInstance() {
}

JsonValue::JsonValue(const JsonValue& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pjcore.JsonValue)
}

void JsonValue::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 0;
  bool_value_ = false;
  signed_value_ = GOOGLE_LONGLONG(0);
  unsigned_value_ = GOOGLE_ULONGLONG(0);
  double_value_ = 0;
  string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

JsonValue::~JsonValue() {
  // @@protoc_insertion_point(destructor:pjcore.JsonValue)
  SharedDtor();
}

void JsonValue::SharedDtor() {
  string_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void JsonValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JsonValue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JsonValue_descriptor_;
}

const JsonValue& JsonValue::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pjcore_2fjson_2eproto();
  return *default_instance_;
}

JsonValue* JsonValue::default_instance_ = NULL;

JsonValue* JsonValue::New(::google::protobuf::Arena* arena) const {
  JsonValue* n = new JsonValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JsonValue::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<JsonValue*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(type_, double_value_);
    if (has_string_value()) {
      string_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  object_properties_.Clear();
  array_elements_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool JsonValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pjcore.JsonValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pjcore.JsonValue.Type type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pjcore::JsonValue_Type_IsValid(value)) {
            set_type(static_cast< ::pjcore::JsonValue_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_bool_value;
        break;
      }

      // optional bool bool_value = 2;
      case 2: {
        if (tag == 16) {
         parse_bool_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bool_value_)));
          set_has_bool_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_signed_value;
        break;
      }

      // optional int64 signed_value = 3;
      case 3: {
        if (tag == 24) {
         parse_signed_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &signed_value_)));
          set_has_signed_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_unsigned_value;
        break;
      }

      // optional uint64 unsigned_value = 4;
      case 4: {
        if (tag == 32) {
         parse_unsigned_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &unsigned_value_)));
          set_has_unsigned_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_double_value;
        break;
      }

      // optional double double_value = 5;
      case 5: {
        if (tag == 41) {
         parse_double_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &double_value_)));
          set_has_double_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_string_value;
        break;
      }

      // optional string string_value = 6;
      case 6: {
        if (tag == 50) {
         parse_string_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->string_value().data(), this->string_value().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pjcore.JsonValue.string_value");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_object_properties;
        break;
      }

      // repeated .pjcore.JsonValue.Property object_properties = 7;
      case 7: {
        if (tag == 58) {
         parse_object_properties:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_object_properties()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_object_properties;
        if (input->ExpectTag(66)) goto parse_array_elements;
        break;
      }

      // repeated .pjcore.JsonValue array_elements = 8;
      case 8: {
        if (tag == 66) {
         parse_array_elements:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_array_elements()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_array_elements;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pjcore.JsonValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pjcore.JsonValue)
  return false;
#undef DO_
}

void JsonValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pjcore.JsonValue)
  // optional .pjcore.JsonValue.Type type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional bool bool_value = 2;
  if (has_bool_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->bool_value(), output);
  }

  // optional int64 signed_value = 3;
  if (has_signed_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->signed_value(), output);
  }

  // optional uint64 unsigned_value = 4;
  if (has_unsigned_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->unsigned_value(), output);
  }

  // optional double double_value = 5;
  if (has_double_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->double_value(), output);
  }

  // optional string string_value = 6;
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_value().data(), this->string_value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pjcore.JsonValue.string_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->string_value(), output);
  }

  // repeated .pjcore.JsonValue.Property object_properties = 7;
  for (unsigned int i = 0, n = this->object_properties_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->object_properties(i), output);
  }

  // repeated .pjcore.JsonValue array_elements = 8;
  for (unsigned int i = 0, n = this->array_elements_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->array_elements(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pjcore.JsonValue)
}

::google::protobuf::uint8* JsonValue::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pjcore.JsonValue)
  // optional .pjcore.JsonValue.Type type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional bool bool_value = 2;
  if (has_bool_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->bool_value(), target);
  }

  // optional int64 signed_value = 3;
  if (has_signed_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->signed_value(), target);
  }

  // optional uint64 unsigned_value = 4;
  if (has_unsigned_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->unsigned_value(), target);
  }

  // optional double double_value = 5;
  if (has_double_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->double_value(), target);
  }

  // optional string string_value = 6;
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_value().data(), this->string_value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pjcore.JsonValue.string_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->string_value(), target);
  }

  // repeated .pjcore.JsonValue.Property object_properties = 7;
  for (unsigned int i = 0, n = this->object_properties_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->object_properties(i), target);
  }

  // repeated .pjcore.JsonValue array_elements = 8;
  for (unsigned int i = 0, n = this->array_elements_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->array_elements(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pjcore.JsonValue)
  return target;
}

int JsonValue::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 63) {
    // optional .pjcore.JsonValue.Type type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional bool bool_value = 2;
    if (has_bool_value()) {
      total_size += 1 + 1;
    }

    // optional int64 signed_value = 3;
    if (has_signed_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->signed_value());
    }

    // optional uint64 unsigned_value = 4;
    if (has_unsigned_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->unsigned_value());
    }

    // optional double double_value = 5;
    if (has_double_value()) {
      total_size += 1 + 8;
    }

    // optional string string_value = 6;
    if (has_string_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_value());
    }

  }
  // repeated .pjcore.JsonValue.Property object_properties = 7;
  total_size += 1 * this->object_properties_size();
  for (int i = 0; i < this->object_properties_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->object_properties(i));
  }

  // repeated .pjcore.JsonValue array_elements = 8;
  total_size += 1 * this->array_elements_size();
  for (int i = 0; i < this->array_elements_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->array_elements(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JsonValue::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const JsonValue* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const JsonValue*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void JsonValue::MergeFrom(const JsonValue& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  object_properties_.MergeFrom(from.object_properties_);
  array_elements_.MergeFrom(from.array_elements_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_bool_value()) {
      set_bool_value(from.bool_value());
    }
    if (from.has_signed_value()) {
      set_signed_value(from.signed_value());
    }
    if (from.has_unsigned_value()) {
      set_unsigned_value(from.unsigned_value());
    }
    if (from.has_double_value()) {
      set_double_value(from.double_value());
    }
    if (from.has_string_value()) {
      set_has_string_value();
      string_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_value_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void JsonValue::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JsonValue::CopyFrom(const JsonValue& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JsonValue::IsInitialized() const {

  return true;
}

void JsonValue::Swap(JsonValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JsonValue::InternalSwap(JsonValue* other) {
  std::swap(type_, other->type_);
  std::swap(bool_value_, other->bool_value_);
  std::swap(signed_value_, other->signed_value_);
  std::swap(unsigned_value_, other->unsigned_value_);
  std::swap(double_value_, other->double_value_);
  string_value_.Swap(&other->string_value_);
  object_properties_.UnsafeArenaSwap(&other->object_properties_);
  array_elements_.UnsafeArenaSwap(&other->array_elements_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JsonValue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = JsonValue_descriptor_;
  metadata.reflection = JsonValue_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int JsonReaderConfig::kDisallowCommentsFieldNumber;
const int JsonReaderConfig::kDisallowTrailingCommasFieldNumber;
const int JsonReaderConfig::kPropertiesAsIsFieldNumber;
const int JsonReaderConfig::kAllowControlCharactersFieldNumber;
const int JsonReaderConfig::kDisallowNanAndInfinityFieldNumber;
#endif  // !_MSC_VER

JsonReaderConfig::JsonReaderConfig()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pjcore.JsonReaderConfig)
}

void JsonReaderConfig::InitAsDefaultInstance() {
}

JsonReaderConfig::JsonReaderConfig(const JsonReaderConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pjcore.JsonReaderConfig)
}

void JsonReaderConfig::SharedCtor() {
  _cached_size_ = 0;
  disallow_comments_ = false;
  disallow_trailing_commas_ = false;
  properties_as_is_ = false;
  allow_control_characters_ = false;
  disallow_nan_and_infinity_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

JsonReaderConfig::~JsonReaderConfig() {
  // @@protoc_insertion_point(destructor:pjcore.JsonReaderConfig)
  SharedDtor();
}

void JsonReaderConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void JsonReaderConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JsonReaderConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JsonReaderConfig_descriptor_;
}

const JsonReaderConfig& JsonReaderConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pjcore_2fjson_2eproto();
  return *default_instance_;
}

JsonReaderConfig* JsonReaderConfig::default_instance_ = NULL;

JsonReaderConfig* JsonReaderConfig::New(::google::protobuf::Arena* arena) const {
  JsonReaderConfig* n = new JsonReaderConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JsonReaderConfig::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<JsonReaderConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(disallow_comments_, disallow_nan_and_infinity_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool JsonReaderConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pjcore.JsonReaderConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool disallow_comments = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disallow_comments_)));
          set_has_disallow_comments();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_disallow_trailing_commas;
        break;
      }

      // optional bool disallow_trailing_commas = 2;
      case 2: {
        if (tag == 16) {
         parse_disallow_trailing_commas:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disallow_trailing_commas_)));
          set_has_disallow_trailing_commas();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_properties_as_is;
        break;
      }

      // optional bool properties_as_is = 3;
      case 3: {
        if (tag == 24) {
         parse_properties_as_is:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &properties_as_is_)));
          set_has_properties_as_is();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_allow_control_characters;
        break;
      }

      // optional bool allow_control_characters = 4;
      case 4: {
        if (tag == 32) {
         parse_allow_control_characters:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &allow_control_characters_)));
          set_has_allow_control_characters();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_disallow_nan_and_infinity;
        break;
      }

      // optional bool disallow_nan_and_infinity = 5;
      case 5: {
        if (tag == 40) {
         parse_disallow_nan_and_infinity:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disallow_nan_and_infinity_)));
          set_has_disallow_nan_and_infinity();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pjcore.JsonReaderConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pjcore.JsonReaderConfig)
  return false;
#undef DO_
}

void JsonReaderConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pjcore.JsonReaderConfig)
  // optional bool disallow_comments = 1;
  if (has_disallow_comments()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->disallow_comments(), output);
  }

  // optional bool disallow_trailing_commas = 2;
  if (has_disallow_trailing_commas()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->disallow_trailing_commas(), output);
  }

  // optional bool properties_as_is = 3;
  if (has_properties_as_is()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->properties_as_is(), output);
  }

  // optional bool allow_control_characters = 4;
  if (has_allow_control_characters()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->allow_control_characters(), output);
  }

  // optional bool disallow_nan_and_infinity = 5;
  if (has_disallow_nan_and_infinity()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->disallow_nan_and_infinity(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pjcore.JsonReaderConfig)
}

::google::protobuf::uint8* JsonReaderConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pjcore.JsonReaderConfig)
  // optional bool disallow_comments = 1;
  if (has_disallow_comments()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->disallow_comments(), target);
  }

  // optional bool disallow_trailing_commas = 2;
  if (has_disallow_trailing_commas()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->disallow_trailing_commas(), target);
  }

  // optional bool properties_as_is = 3;
  if (has_properties_as_is()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->properties_as_is(), target);
  }

  // optional bool allow_control_characters = 4;
  if (has_allow_control_characters()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->allow_control_characters(), target);
  }

  // optional bool disallow_nan_and_infinity = 5;
  if (has_disallow_nan_and_infinity()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->disallow_nan_and_infinity(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pjcore.JsonReaderConfig)
  return target;
}

int JsonReaderConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31) {
    // optional bool disallow_comments = 1;
    if (has_disallow_comments()) {
      total_size += 1 + 1;
    }

    // optional bool disallow_trailing_commas = 2;
    if (has_disallow_trailing_commas()) {
      total_size += 1 + 1;
    }

    // optional bool properties_as_is = 3;
    if (has_properties_as_is()) {
      total_size += 1 + 1;
    }

    // optional bool allow_control_characters = 4;
    if (has_allow_control_characters()) {
      total_size += 1 + 1;
    }

    // optional bool disallow_nan_and_infinity = 5;
    if (has_disallow_nan_and_infinity()) {
      total_size += 1 + 1;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JsonReaderConfig::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const JsonReaderConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const JsonReaderConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void JsonReaderConfig::MergeFrom(const JsonReaderConfig& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_disallow_comments()) {
      set_disallow_comments(from.disallow_comments());
    }
    if (from.has_disallow_trailing_commas()) {
      set_disallow_trailing_commas(from.disallow_trailing_commas());
    }
    if (from.has_properties_as_is()) {
      set_properties_as_is(from.properties_as_is());
    }
    if (from.has_allow_control_characters()) {
      set_allow_control_characters(from.allow_control_characters());
    }
    if (from.has_disallow_nan_and_infinity()) {
      set_disallow_nan_and_infinity(from.disallow_nan_and_infinity());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void JsonReaderConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JsonReaderConfig::CopyFrom(const JsonReaderConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JsonReaderConfig::IsInitialized() const {

  return true;
}

void JsonReaderConfig::Swap(JsonReaderConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JsonReaderConfig::InternalSwap(JsonReaderConfig* other) {
  std::swap(disallow_comments_, other->disallow_comments_);
  std::swap(disallow_trailing_commas_, other->disallow_trailing_commas_);
  std::swap(properties_as_is_, other->properties_as_is_);
  std::swap(allow_control_characters_, other->allow_control_characters_);
  std::swap(disallow_nan_and_infinity_, other->disallow_nan_and_infinity_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JsonReaderConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = JsonReaderConfig_descriptor_;
  metadata.reflection = JsonReaderConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int JsonWriterConfig::kIncludeByteOrderMarkFieldNumber;
const int JsonWriterConfig::kEscapeUnicodeFieldNumber;
const int JsonWriterConfig::kSpaceFieldNumber;
const int JsonWriterConfig::kIndentFieldNumber;
const int JsonWriterConfig::kNullForNanAndInfinityFieldNumber;
#endif  // !_MSC_VER

JsonWriterConfig::JsonWriterConfig()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pjcore.JsonWriterConfig)
}

void JsonWriterConfig::InitAsDefaultInstance() {
}

JsonWriterConfig::JsonWriterConfig(const JsonWriterConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pjcore.JsonWriterConfig)
}

void JsonWriterConfig::SharedCtor() {
  _cached_size_ = 0;
  include_byte_order_mark_ = false;
  escape_unicode_ = false;
  space_ = false;
  indent_ = 0u;
  null_for_nan_and_infinity_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

JsonWriterConfig::~JsonWriterConfig() {
  // @@protoc_insertion_point(destructor:pjcore.JsonWriterConfig)
  SharedDtor();
}

void JsonWriterConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void JsonWriterConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JsonWriterConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JsonWriterConfig_descriptor_;
}

const JsonWriterConfig& JsonWriterConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pjcore_2fjson_2eproto();
  return *default_instance_;
}

JsonWriterConfig* JsonWriterConfig::default_instance_ = NULL;

JsonWriterConfig* JsonWriterConfig::New(::google::protobuf::Arena* arena) const {
  JsonWriterConfig* n = new JsonWriterConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JsonWriterConfig::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<JsonWriterConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(include_byte_order_mark_, indent_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool JsonWriterConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pjcore.JsonWriterConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool include_byte_order_mark = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &include_byte_order_mark_)));
          set_has_include_byte_order_mark();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_escape_unicode;
        break;
      }

      // optional bool escape_unicode = 2;
      case 2: {
        if (tag == 16) {
         parse_escape_unicode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &escape_unicode_)));
          set_has_escape_unicode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_space;
        break;
      }

      // optional bool space = 3;
      case 3: {
        if (tag == 24) {
         parse_space:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &space_)));
          set_has_space();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_indent;
        break;
      }

      // optional uint32 indent = 4;
      case 4: {
        if (tag == 32) {
         parse_indent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &indent_)));
          set_has_indent();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_null_for_nan_and_infinity;
        break;
      }

      // optional bool null_for_nan_and_infinity = 5;
      case 5: {
        if (tag == 40) {
         parse_null_for_nan_and_infinity:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &null_for_nan_and_infinity_)));
          set_has_null_for_nan_and_infinity();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pjcore.JsonWriterConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pjcore.JsonWriterConfig)
  return false;
#undef DO_
}

void JsonWriterConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pjcore.JsonWriterConfig)
  // optional bool include_byte_order_mark = 1;
  if (has_include_byte_order_mark()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->include_byte_order_mark(), output);
  }

  // optional bool escape_unicode = 2;
  if (has_escape_unicode()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->escape_unicode(), output);
  }

  // optional bool space = 3;
  if (has_space()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->space(), output);
  }

  // optional uint32 indent = 4;
  if (has_indent()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->indent(), output);
  }

  // optional bool null_for_nan_and_infinity = 5;
  if (has_null_for_nan_and_infinity()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->null_for_nan_and_infinity(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pjcore.JsonWriterConfig)
}

::google::protobuf::uint8* JsonWriterConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pjcore.JsonWriterConfig)
  // optional bool include_byte_order_mark = 1;
  if (has_include_byte_order_mark()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->include_byte_order_mark(), target);
  }

  // optional bool escape_unicode = 2;
  if (has_escape_unicode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->escape_unicode(), target);
  }

  // optional bool space = 3;
  if (has_space()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->space(), target);
  }

  // optional uint32 indent = 4;
  if (has_indent()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->indent(), target);
  }

  // optional bool null_for_nan_and_infinity = 5;
  if (has_null_for_nan_and_infinity()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->null_for_nan_and_infinity(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pjcore.JsonWriterConfig)
  return target;
}

int JsonWriterConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31) {
    // optional bool include_byte_order_mark = 1;
    if (has_include_byte_order_mark()) {
      total_size += 1 + 1;
    }

    // optional bool escape_unicode = 2;
    if (has_escape_unicode()) {
      total_size += 1 + 1;
    }

    // optional bool space = 3;
    if (has_space()) {
      total_size += 1 + 1;
    }

    // optional uint32 indent = 4;
    if (has_indent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->indent());
    }

    // optional bool null_for_nan_and_infinity = 5;
    if (has_null_for_nan_and_infinity()) {
      total_size += 1 + 1;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JsonWriterConfig::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const JsonWriterConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const JsonWriterConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void JsonWriterConfig::MergeFrom(const JsonWriterConfig& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_include_byte_order_mark()) {
      set_include_byte_order_mark(from.include_byte_order_mark());
    }
    if (from.has_escape_unicode()) {
      set_escape_unicode(from.escape_unicode());
    }
    if (from.has_space()) {
      set_space(from.space());
    }
    if (from.has_indent()) {
      set_indent(from.indent());
    }
    if (from.has_null_for_nan_and_infinity()) {
      set_null_for_nan_and_infinity(from.null_for_nan_and_infinity());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void JsonWriterConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JsonWriterConfig::CopyFrom(const JsonWriterConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JsonWriterConfig::IsInitialized() const {

  return true;
}

void JsonWriterConfig::Swap(JsonWriterConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JsonWriterConfig::InternalSwap(JsonWriterConfig* other) {
  std::swap(include_byte_order_mark_, other->include_byte_order_mark_);
  std::swap(escape_unicode_, other->escape_unicode_);
  std::swap(space_, other->space_);
  std::swap(indent_, other->indent_);
  std::swap(null_for_nan_and_infinity_, other->null_for_nan_and_infinity_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JsonWriterConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = JsonWriterConfig_descriptor_;
  metadata.reflection = JsonWriterConfig_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pjcore

// @@protoc_insertion_point(global_scope)
