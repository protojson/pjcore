// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pjcore/http.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "pjcore/http.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pjcore {

namespace {

const ::google::protobuf::Descriptor* UrlParameter_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UrlParameter_reflection_ = NULL;
const ::google::protobuf::Descriptor* ParsedUrl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ParsedUrl_reflection_ = NULL;
const ::google::protobuf::Descriptor* NodeAndServiceName_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NodeAndServiceName_reflection_ = NULL;
const ::google::protobuf::Descriptor* HttpVersion_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HttpVersion_reflection_ = NULL;
const ::google::protobuf::Descriptor* HttpHeader_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HttpHeader_reflection_ = NULL;
const ::google::protobuf::Descriptor* HttpRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HttpRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* HttpResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HttpResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* HttpServerConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HttpServerConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* HttpClientConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HttpClientConfig_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* HttpParserType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* HttpServerTransactionState_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_pjcore_2fhttp_2eproto() {
  protobuf_AddDesc_pjcore_2fhttp_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "pjcore/http.proto");
  GOOGLE_CHECK(file != NULL);
  UrlParameter_descriptor_ = file->message_type(0);
  static const int UrlParameter_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UrlParameter, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UrlParameter, value_),
  };
  UrlParameter_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UrlParameter_descriptor_,
      UrlParameter::default_instance_,
      UrlParameter_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UrlParameter, _has_bits_[0]),
      -1,
      -1,
      sizeof(UrlParameter),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UrlParameter, _internal_metadata_));
  ParsedUrl_descriptor_ = file->message_type(1);
  static const int ParsedUrl_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParsedUrl, scheme_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParsedUrl, userinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParsedUrl, host_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParsedUrl, port_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParsedUrl, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParsedUrl, query_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParsedUrl, fragment_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParsedUrl, parameters_),
  };
  ParsedUrl_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ParsedUrl_descriptor_,
      ParsedUrl::default_instance_,
      ParsedUrl_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParsedUrl, _has_bits_[0]),
      -1,
      -1,
      sizeof(ParsedUrl),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParsedUrl, _internal_metadata_));
  NodeAndServiceName_descriptor_ = file->message_type(2);
  static const int NodeAndServiceName_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeAndServiceName, node_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeAndServiceName, service_name_),
  };
  NodeAndServiceName_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NodeAndServiceName_descriptor_,
      NodeAndServiceName::default_instance_,
      NodeAndServiceName_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeAndServiceName, _has_bits_[0]),
      -1,
      -1,
      sizeof(NodeAndServiceName),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeAndServiceName, _internal_metadata_));
  HttpVersion_descriptor_ = file->message_type(3);
  static const int HttpVersion_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpVersion, major_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpVersion, minor_),
  };
  HttpVersion_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HttpVersion_descriptor_,
      HttpVersion::default_instance_,
      HttpVersion_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpVersion, _has_bits_[0]),
      -1,
      -1,
      sizeof(HttpVersion),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpVersion, _internal_metadata_));
  HttpHeader_descriptor_ = file->message_type(4);
  static const int HttpHeader_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpHeader, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpHeader, value_),
  };
  HttpHeader_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HttpHeader_descriptor_,
      HttpHeader::default_instance_,
      HttpHeader_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpHeader, _has_bits_[0]),
      -1,
      -1,
      sizeof(HttpHeader),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpHeader, _internal_metadata_));
  HttpRequest_descriptor_ = file->message_type(5);
  static const int HttpRequest_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpRequest, method_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpRequest, url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpRequest, parsed_url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpRequest, http_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpRequest, headers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpRequest, content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpRequest, should_keep_alive_),
  };
  HttpRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HttpRequest_descriptor_,
      HttpRequest::default_instance_,
      HttpRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpRequest, _has_bits_[0]),
      -1,
      -1,
      sizeof(HttpRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpRequest, _internal_metadata_));
  HttpResponse_descriptor_ = file->message_type(6);
  static const int HttpResponse_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpResponse, http_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpResponse, status_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpResponse, headers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpResponse, content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpResponse, should_keep_alive_),
  };
  HttpResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HttpResponse_descriptor_,
      HttpResponse::default_instance_,
      HttpResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpResponse, _has_bits_[0]),
      -1,
      -1,
      sizeof(HttpResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpResponse, _internal_metadata_));
  HttpServerConfig_descriptor_ = file->message_type(7);
  static const int HttpServerConfig_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpServerConfig, port_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpServerConfig, backlog_),
  };
  HttpServerConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HttpServerConfig_descriptor_,
      HttpServerConfig::default_instance_,
      HttpServerConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpServerConfig, _has_bits_[0]),
      -1,
      -1,
      sizeof(HttpServerConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpServerConfig, _internal_metadata_));
  HttpClientConfig_descriptor_ = file->message_type(8);
  static const int HttpClientConfig_offsets_[1] = {
  };
  HttpClientConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HttpClientConfig_descriptor_,
      HttpClientConfig::default_instance_,
      HttpClientConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpClientConfig, _has_bits_[0]),
      -1,
      -1,
      sizeof(HttpClientConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpClientConfig, _internal_metadata_));
  HttpParserType_descriptor_ = file->enum_type(0);
  HttpServerTransactionState_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_pjcore_2fhttp_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UrlParameter_descriptor_, &UrlParameter::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ParsedUrl_descriptor_, &ParsedUrl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NodeAndServiceName_descriptor_, &NodeAndServiceName::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HttpVersion_descriptor_, &HttpVersion::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HttpHeader_descriptor_, &HttpHeader::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HttpRequest_descriptor_, &HttpRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HttpResponse_descriptor_, &HttpResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HttpServerConfig_descriptor_, &HttpServerConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HttpClientConfig_descriptor_, &HttpClientConfig::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_pjcore_2fhttp_2eproto() {
  delete UrlParameter::default_instance_;
  delete UrlParameter_reflection_;
  delete ParsedUrl::default_instance_;
  delete ParsedUrl_reflection_;
  delete NodeAndServiceName::default_instance_;
  delete NodeAndServiceName_reflection_;
  delete HttpVersion::default_instance_;
  delete HttpVersion_reflection_;
  delete HttpHeader::default_instance_;
  delete HttpHeader_reflection_;
  delete HttpRequest::default_instance_;
  delete HttpRequest_reflection_;
  delete HttpResponse::default_instance_;
  delete HttpResponse_reflection_;
  delete HttpServerConfig::default_instance_;
  delete HttpServerConfig_reflection_;
  delete HttpClientConfig::default_instance_;
  delete HttpClientConfig_reflection_;
}

void protobuf_AddDesc_pjcore_2fhttp_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pjcore::protobuf_AddDesc_pjcore_2ferror_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021pjcore/http.proto\022\006pjcore\032\022pjcore/erro"
    "r.proto\"+\n\014UrlParameter\022\014\n\004name\030\001 \001(\t\022\r\n"
    "\005value\030\002 \001(\t\"\242\001\n\tParsedUrl\022\016\n\006scheme\030\001 \001"
    "(\t\022\020\n\010userinfo\030\002 \001(\t\022\014\n\004host\030\003 \001(\t\022\014\n\004po"
    "rt\030\004 \001(\005\022\014\n\004path\030\005 \001(\t\022\r\n\005query\030\006 \001(\t\022\020\n"
    "\010fragment\030\007 \001(\t\022(\n\nparameters\030\010 \003(\0132\024.pj"
    "core.UrlParameter\"=\n\022NodeAndServiceName\022"
    "\021\n\tnode_name\030\001 \001(\t\022\024\n\014service_name\030\002 \001(\t"
    "\"+\n\013HttpVersion\022\r\n\005major\030\001 \001(\005\022\r\n\005minor\030"
    "\002 \001(\005\")\n\nHttpHeader\022\014\n\004name\030\001 \001(\t\022\r\n\005val"
    "ue\030\002 \001(\t\"\315\001\n\013HttpRequest\022\016\n\006method\030\001 \001(\005"
    "\022\013\n\003url\030\002 \001(\t\022%\n\nparsed_url\030\003 \001(\0132\021.pjco"
    "re.ParsedUrl\022)\n\014http_version\030\004 \001(\0132\023.pjc"
    "ore.HttpVersion\022#\n\007headers\030\005 \003(\0132\022.pjcor"
    "e.HttpHeader\022\017\n\007content\030\006 \001(\014\022\031\n\021should_"
    "keep_alive\030\007 \001(\010\"\267\001\n\014HttpResponse\022)\n\014htt"
    "p_version\030\001 \001(\0132\023.pjcore.HttpVersion\022+\n\013"
    "status_code\030\002 \001(\0162\026.pjcore.HttpStatusCod"
    "e\022#\n\007headers\030\003 \003(\0132\022.pjcore.HttpHeader\022\017"
    "\n\007content\030\004 \001(\014\022\031\n\021should_keep_alive\030\005 \001"
    "(\010\"1\n\020HttpServerConfig\022\014\n\004port\030\001 \001(\005\022\017\n\007"
    "backlog\030\002 \001(\005\"\022\n\020HttpClientConfig*Y\n\016Htt"
    "pParserType\022\027\n\023HTTP_PARSER_REQUEST\020\000\022\030\n\024"
    "HTTP_PARSER_RESPONSE\020\001\022\024\n\020HTTP_PARSER_BO"
    "TH\020\002*\264\001\n\032HttpServerTransactionState\022 \n\034H"
    "TTP_SERVER_TRANSACTION_READ\020\000\022)\n%HTTP_SE"
    "RVER_TRANSACTION_READ_COMPLETE\020\001\022&\n\"HTTP"
    "_SERVER_TRANSACTION_WAIT_WRITE\020\002\022!\n\035HTTP"
    "_SERVER_TRANSACTION_WRITE\020\003", 1147);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "pjcore/http.proto", &protobuf_RegisterTypes);
  UrlParameter::default_instance_ = new UrlParameter();
  ParsedUrl::default_instance_ = new ParsedUrl();
  NodeAndServiceName::default_instance_ = new NodeAndServiceName();
  HttpVersion::default_instance_ = new HttpVersion();
  HttpHeader::default_instance_ = new HttpHeader();
  HttpRequest::default_instance_ = new HttpRequest();
  HttpResponse::default_instance_ = new HttpResponse();
  HttpServerConfig::default_instance_ = new HttpServerConfig();
  HttpClientConfig::default_instance_ = new HttpClientConfig();
  UrlParameter::default_instance_->InitAsDefaultInstance();
  ParsedUrl::default_instance_->InitAsDefaultInstance();
  NodeAndServiceName::default_instance_->InitAsDefaultInstance();
  HttpVersion::default_instance_->InitAsDefaultInstance();
  HttpHeader::default_instance_->InitAsDefaultInstance();
  HttpRequest::default_instance_->InitAsDefaultInstance();
  HttpResponse::default_instance_->InitAsDefaultInstance();
  HttpServerConfig::default_instance_->InitAsDefaultInstance();
  HttpClientConfig::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_pjcore_2fhttp_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_pjcore_2fhttp_2eproto {
  StaticDescriptorInitializer_pjcore_2fhttp_2eproto() {
    protobuf_AddDesc_pjcore_2fhttp_2eproto();
  }
} static_descriptor_initializer_pjcore_2fhttp_2eproto_;
const ::google::protobuf::EnumDescriptor* HttpParserType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HttpParserType_descriptor_;
}
bool HttpParserType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* HttpServerTransactionState_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HttpServerTransactionState_descriptor_;
}
bool HttpServerTransactionState_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int UrlParameter::kNameFieldNumber;
const int UrlParameter::kValueFieldNumber;
#endif  // !_MSC_VER

UrlParameter::UrlParameter()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pjcore.UrlParameter)
}

void UrlParameter::InitAsDefaultInstance() {
}

UrlParameter::UrlParameter(const UrlParameter& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pjcore.UrlParameter)
}

void UrlParameter::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UrlParameter::~UrlParameter() {
  // @@protoc_insertion_point(destructor:pjcore.UrlParameter)
  SharedDtor();
}

void UrlParameter::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void UrlParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UrlParameter::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UrlParameter_descriptor_;
}

const UrlParameter& UrlParameter::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pjcore_2fhttp_2eproto();
  return *default_instance_;
}

UrlParameter* UrlParameter::default_instance_ = NULL;

UrlParameter* UrlParameter::New(::google::protobuf::Arena* arena) const {
  UrlParameter* n = new UrlParameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UrlParameter::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_value()) {
      value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool UrlParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pjcore.UrlParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pjcore.UrlParameter.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // optional string value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pjcore.UrlParameter.value");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pjcore.UrlParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pjcore.UrlParameter)
  return false;
#undef DO_
}

void UrlParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pjcore.UrlParameter)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pjcore.UrlParameter.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pjcore.UrlParameter.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pjcore.UrlParameter)
}

::google::protobuf::uint8* UrlParameter::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pjcore.UrlParameter)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pjcore.UrlParameter.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pjcore.UrlParameter.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pjcore.UrlParameter)
  return target;
}

int UrlParameter::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UrlParameter::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const UrlParameter* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UrlParameter*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UrlParameter::MergeFrom(const UrlParameter& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_value()) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void UrlParameter::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UrlParameter::CopyFrom(const UrlParameter& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UrlParameter::IsInitialized() const {

  return true;
}

void UrlParameter::Swap(UrlParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UrlParameter::InternalSwap(UrlParameter* other) {
  name_.Swap(&other->name_);
  value_.Swap(&other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UrlParameter::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UrlParameter_descriptor_;
  metadata.reflection = UrlParameter_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ParsedUrl::kSchemeFieldNumber;
const int ParsedUrl::kUserinfoFieldNumber;
const int ParsedUrl::kHostFieldNumber;
const int ParsedUrl::kPortFieldNumber;
const int ParsedUrl::kPathFieldNumber;
const int ParsedUrl::kQueryFieldNumber;
const int ParsedUrl::kFragmentFieldNumber;
const int ParsedUrl::kParametersFieldNumber;
#endif  // !_MSC_VER

ParsedUrl::ParsedUrl()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pjcore.ParsedUrl)
}

void ParsedUrl::InitAsDefaultInstance() {
}

ParsedUrl::ParsedUrl(const ParsedUrl& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pjcore.ParsedUrl)
}

void ParsedUrl::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  scheme_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0;
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fragment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ParsedUrl::~ParsedUrl() {
  // @@protoc_insertion_point(destructor:pjcore.ParsedUrl)
  SharedDtor();
}

void ParsedUrl::SharedDtor() {
  scheme_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fragment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ParsedUrl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ParsedUrl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ParsedUrl_descriptor_;
}

const ParsedUrl& ParsedUrl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pjcore_2fhttp_2eproto();
  return *default_instance_;
}

ParsedUrl* ParsedUrl::default_instance_ = NULL;

ParsedUrl* ParsedUrl::New(::google::protobuf::Arena* arena) const {
  ParsedUrl* n = new ParsedUrl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ParsedUrl::Clear() {
  if (_has_bits_[0 / 32] & 127) {
    if (has_scheme()) {
      scheme_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_userinfo()) {
      userinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_host()) {
      host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    port_ = 0;
    if (has_path()) {
      path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_query()) {
      query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_fragment()) {
      fragment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  parameters_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ParsedUrl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pjcore.ParsedUrl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string scheme = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scheme()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->scheme().data(), this->scheme().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pjcore.ParsedUrl.scheme");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_userinfo;
        break;
      }

      // optional string userinfo = 2;
      case 2: {
        if (tag == 18) {
         parse_userinfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->userinfo().data(), this->userinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pjcore.ParsedUrl.userinfo");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_host;
        break;
      }

      // optional string host = 3;
      case 3: {
        if (tag == 26) {
         parse_host:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->host().data(), this->host().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pjcore.ParsedUrl.host");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_port;
        break;
      }

      // optional int32 port = 4;
      case 4: {
        if (tag == 32) {
         parse_port:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
          set_has_port();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_path;
        break;
      }

      // optional string path = 5;
      case 5: {
        if (tag == 42) {
         parse_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pjcore.ParsedUrl.path");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_query;
        break;
      }

      // optional string query = 6;
      case 6: {
        if (tag == 50) {
         parse_query:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->query().data(), this->query().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pjcore.ParsedUrl.query");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_fragment;
        break;
      }

      // optional string fragment = 7;
      case 7: {
        if (tag == 58) {
         parse_fragment:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fragment()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fragment().data(), this->fragment().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pjcore.ParsedUrl.fragment");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_parameters;
        break;
      }

      // repeated .pjcore.UrlParameter parameters = 8;
      case 8: {
        if (tag == 66) {
         parse_parameters:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_parameters()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_parameters;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pjcore.ParsedUrl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pjcore.ParsedUrl)
  return false;
#undef DO_
}

void ParsedUrl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pjcore.ParsedUrl)
  // optional string scheme = 1;
  if (has_scheme()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scheme().data(), this->scheme().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pjcore.ParsedUrl.scheme");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->scheme(), output);
  }

  // optional string userinfo = 2;
  if (has_userinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->userinfo().data(), this->userinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pjcore.ParsedUrl.userinfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->userinfo(), output);
  }

  // optional string host = 3;
  if (has_host()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host().data(), this->host().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pjcore.ParsedUrl.host");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->host(), output);
  }

  // optional int32 port = 4;
  if (has_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->port(), output);
  }

  // optional string path = 5;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pjcore.ParsedUrl.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->path(), output);
  }

  // optional string query = 6;
  if (has_query()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->query().data(), this->query().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pjcore.ParsedUrl.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->query(), output);
  }

  // optional string fragment = 7;
  if (has_fragment()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fragment().data(), this->fragment().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pjcore.ParsedUrl.fragment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->fragment(), output);
  }

  // repeated .pjcore.UrlParameter parameters = 8;
  for (unsigned int i = 0, n = this->parameters_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->parameters(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pjcore.ParsedUrl)
}

::google::protobuf::uint8* ParsedUrl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pjcore.ParsedUrl)
  // optional string scheme = 1;
  if (has_scheme()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scheme().data(), this->scheme().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pjcore.ParsedUrl.scheme");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->scheme(), target);
  }

  // optional string userinfo = 2;
  if (has_userinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->userinfo().data(), this->userinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pjcore.ParsedUrl.userinfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->userinfo(), target);
  }

  // optional string host = 3;
  if (has_host()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host().data(), this->host().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pjcore.ParsedUrl.host");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->host(), target);
  }

  // optional int32 port = 4;
  if (has_port()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->port(), target);
  }

  // optional string path = 5;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pjcore.ParsedUrl.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->path(), target);
  }

  // optional string query = 6;
  if (has_query()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->query().data(), this->query().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pjcore.ParsedUrl.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->query(), target);
  }

  // optional string fragment = 7;
  if (has_fragment()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fragment().data(), this->fragment().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pjcore.ParsedUrl.fragment");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->fragment(), target);
  }

  // repeated .pjcore.UrlParameter parameters = 8;
  for (unsigned int i = 0, n = this->parameters_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->parameters(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pjcore.ParsedUrl)
  return target;
}

int ParsedUrl::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 127) {
    // optional string scheme = 1;
    if (has_scheme()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->scheme());
    }

    // optional string userinfo = 2;
    if (has_userinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->userinfo());
    }

    // optional string host = 3;
    if (has_host()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->host());
    }

    // optional int32 port = 4;
    if (has_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->port());
    }

    // optional string path = 5;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }

    // optional string query = 6;
    if (has_query()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->query());
    }

    // optional string fragment = 7;
    if (has_fragment()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fragment());
    }

  }
  // repeated .pjcore.UrlParameter parameters = 8;
  total_size += 1 * this->parameters_size();
  for (int i = 0; i < this->parameters_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->parameters(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ParsedUrl::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ParsedUrl* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ParsedUrl*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ParsedUrl::MergeFrom(const ParsedUrl& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  parameters_.MergeFrom(from.parameters_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scheme()) {
      set_has_scheme();
      scheme_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scheme_);
    }
    if (from.has_userinfo()) {
      set_has_userinfo();
      userinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userinfo_);
    }
    if (from.has_host()) {
      set_has_host();
      host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
    }
    if (from.has_port()) {
      set_port(from.port());
    }
    if (from.has_path()) {
      set_has_path();
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (from.has_query()) {
      set_has_query();
      query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
    }
    if (from.has_fragment()) {
      set_has_fragment();
      fragment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fragment_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ParsedUrl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParsedUrl::CopyFrom(const ParsedUrl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParsedUrl::IsInitialized() const {

  return true;
}

void ParsedUrl::Swap(ParsedUrl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParsedUrl::InternalSwap(ParsedUrl* other) {
  scheme_.Swap(&other->scheme_);
  userinfo_.Swap(&other->userinfo_);
  host_.Swap(&other->host_);
  std::swap(port_, other->port_);
  path_.Swap(&other->path_);
  query_.Swap(&other->query_);
  fragment_.Swap(&other->fragment_);
  parameters_.UnsafeArenaSwap(&other->parameters_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ParsedUrl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ParsedUrl_descriptor_;
  metadata.reflection = ParsedUrl_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NodeAndServiceName::kNodeNameFieldNumber;
const int NodeAndServiceName::kServiceNameFieldNumber;
#endif  // !_MSC_VER

NodeAndServiceName::NodeAndServiceName()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pjcore.NodeAndServiceName)
}

void NodeAndServiceName::InitAsDefaultInstance() {
}

NodeAndServiceName::NodeAndServiceName(const NodeAndServiceName& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pjcore.NodeAndServiceName)
}

void NodeAndServiceName::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  node_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NodeAndServiceName::~NodeAndServiceName() {
  // @@protoc_insertion_point(destructor:pjcore.NodeAndServiceName)
  SharedDtor();
}

void NodeAndServiceName::SharedDtor() {
  node_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void NodeAndServiceName::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NodeAndServiceName::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NodeAndServiceName_descriptor_;
}

const NodeAndServiceName& NodeAndServiceName::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pjcore_2fhttp_2eproto();
  return *default_instance_;
}

NodeAndServiceName* NodeAndServiceName::default_instance_ = NULL;

NodeAndServiceName* NodeAndServiceName::New(::google::protobuf::Arena* arena) const {
  NodeAndServiceName* n = new NodeAndServiceName;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NodeAndServiceName::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_node_name()) {
      node_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_service_name()) {
      service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool NodeAndServiceName::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pjcore.NodeAndServiceName)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string node_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->node_name().data(), this->node_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pjcore.NodeAndServiceName.node_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_service_name;
        break;
      }

      // optional string service_name = 2;
      case 2: {
        if (tag == 18) {
         parse_service_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->service_name().data(), this->service_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pjcore.NodeAndServiceName.service_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pjcore.NodeAndServiceName)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pjcore.NodeAndServiceName)
  return false;
#undef DO_
}

void NodeAndServiceName::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pjcore.NodeAndServiceName)
  // optional string node_name = 1;
  if (has_node_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->node_name().data(), this->node_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pjcore.NodeAndServiceName.node_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->node_name(), output);
  }

  // optional string service_name = 2;
  if (has_service_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->service_name().data(), this->service_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pjcore.NodeAndServiceName.service_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->service_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pjcore.NodeAndServiceName)
}

::google::protobuf::uint8* NodeAndServiceName::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pjcore.NodeAndServiceName)
  // optional string node_name = 1;
  if (has_node_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->node_name().data(), this->node_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pjcore.NodeAndServiceName.node_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->node_name(), target);
  }

  // optional string service_name = 2;
  if (has_service_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->service_name().data(), this->service_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pjcore.NodeAndServiceName.service_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->service_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pjcore.NodeAndServiceName)
  return target;
}

int NodeAndServiceName::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3) {
    // optional string node_name = 1;
    if (has_node_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->node_name());
    }

    // optional string service_name = 2;
    if (has_service_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->service_name());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NodeAndServiceName::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const NodeAndServiceName* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NodeAndServiceName*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NodeAndServiceName::MergeFrom(const NodeAndServiceName& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_node_name()) {
      set_has_node_name();
      node_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_name_);
    }
    if (from.has_service_name()) {
      set_has_service_name();
      service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void NodeAndServiceName::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeAndServiceName::CopyFrom(const NodeAndServiceName& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeAndServiceName::IsInitialized() const {

  return true;
}

void NodeAndServiceName::Swap(NodeAndServiceName* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NodeAndServiceName::InternalSwap(NodeAndServiceName* other) {
  node_name_.Swap(&other->node_name_);
  service_name_.Swap(&other->service_name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NodeAndServiceName::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NodeAndServiceName_descriptor_;
  metadata.reflection = NodeAndServiceName_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HttpVersion::kMajorFieldNumber;
const int HttpVersion::kMinorFieldNumber;
#endif  // !_MSC_VER

HttpVersion::HttpVersion()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pjcore.HttpVersion)
}

void HttpVersion::InitAsDefaultInstance() {
}

HttpVersion::HttpVersion(const HttpVersion& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pjcore.HttpVersion)
}

void HttpVersion::SharedCtor() {
  _cached_size_ = 0;
  major_ = 0;
  minor_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HttpVersion::~HttpVersion() {
  // @@protoc_insertion_point(destructor:pjcore.HttpVersion)
  SharedDtor();
}

void HttpVersion::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HttpVersion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HttpVersion::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HttpVersion_descriptor_;
}

const HttpVersion& HttpVersion::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pjcore_2fhttp_2eproto();
  return *default_instance_;
}

HttpVersion* HttpVersion::default_instance_ = NULL;

HttpVersion* HttpVersion::New(::google::protobuf::Arena* arena) const {
  HttpVersion* n = new HttpVersion;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HttpVersion::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<HttpVersion*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(major_, minor_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool HttpVersion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pjcore.HttpVersion)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 major = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &major_)));
          set_has_major();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_minor;
        break;
      }

      // optional int32 minor = 2;
      case 2: {
        if (tag == 16) {
         parse_minor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &minor_)));
          set_has_minor();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pjcore.HttpVersion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pjcore.HttpVersion)
  return false;
#undef DO_
}

void HttpVersion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pjcore.HttpVersion)
  // optional int32 major = 1;
  if (has_major()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->major(), output);
  }

  // optional int32 minor = 2;
  if (has_minor()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->minor(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pjcore.HttpVersion)
}

::google::protobuf::uint8* HttpVersion::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pjcore.HttpVersion)
  // optional int32 major = 1;
  if (has_major()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->major(), target);
  }

  // optional int32 minor = 2;
  if (has_minor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->minor(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pjcore.HttpVersion)
  return target;
}

int HttpVersion::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3) {
    // optional int32 major = 1;
    if (has_major()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->major());
    }

    // optional int32 minor = 2;
    if (has_minor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->minor());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HttpVersion::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HttpVersion* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HttpVersion*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HttpVersion::MergeFrom(const HttpVersion& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_major()) {
      set_major(from.major());
    }
    if (from.has_minor()) {
      set_minor(from.minor());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void HttpVersion::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HttpVersion::CopyFrom(const HttpVersion& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HttpVersion::IsInitialized() const {

  return true;
}

void HttpVersion::Swap(HttpVersion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HttpVersion::InternalSwap(HttpVersion* other) {
  std::swap(major_, other->major_);
  std::swap(minor_, other->minor_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HttpVersion::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HttpVersion_descriptor_;
  metadata.reflection = HttpVersion_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HttpHeader::kNameFieldNumber;
const int HttpHeader::kValueFieldNumber;
#endif  // !_MSC_VER

HttpHeader::HttpHeader()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pjcore.HttpHeader)
}

void HttpHeader::InitAsDefaultInstance() {
}

HttpHeader::HttpHeader(const HttpHeader& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pjcore.HttpHeader)
}

void HttpHeader::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HttpHeader::~HttpHeader() {
  // @@protoc_insertion_point(destructor:pjcore.HttpHeader)
  SharedDtor();
}

void HttpHeader::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void HttpHeader::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HttpHeader::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HttpHeader_descriptor_;
}

const HttpHeader& HttpHeader::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pjcore_2fhttp_2eproto();
  return *default_instance_;
}

HttpHeader* HttpHeader::default_instance_ = NULL;

HttpHeader* HttpHeader::New(::google::protobuf::Arena* arena) const {
  HttpHeader* n = new HttpHeader;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HttpHeader::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_value()) {
      value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool HttpHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pjcore.HttpHeader)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pjcore.HttpHeader.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // optional string value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pjcore.HttpHeader.value");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pjcore.HttpHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pjcore.HttpHeader)
  return false;
#undef DO_
}

void HttpHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pjcore.HttpHeader)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pjcore.HttpHeader.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pjcore.HttpHeader.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pjcore.HttpHeader)
}

::google::protobuf::uint8* HttpHeader::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pjcore.HttpHeader)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pjcore.HttpHeader.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pjcore.HttpHeader.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pjcore.HttpHeader)
  return target;
}

int HttpHeader::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HttpHeader::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HttpHeader* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HttpHeader*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HttpHeader::MergeFrom(const HttpHeader& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_value()) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void HttpHeader::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HttpHeader::CopyFrom(const HttpHeader& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HttpHeader::IsInitialized() const {

  return true;
}

void HttpHeader::Swap(HttpHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HttpHeader::InternalSwap(HttpHeader* other) {
  name_.Swap(&other->name_);
  value_.Swap(&other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HttpHeader::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HttpHeader_descriptor_;
  metadata.reflection = HttpHeader_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HttpRequest::kMethodFieldNumber;
const int HttpRequest::kUrlFieldNumber;
const int HttpRequest::kParsedUrlFieldNumber;
const int HttpRequest::kHttpVersionFieldNumber;
const int HttpRequest::kHeadersFieldNumber;
const int HttpRequest::kContentFieldNumber;
const int HttpRequest::kShouldKeepAliveFieldNumber;
#endif  // !_MSC_VER

HttpRequest::HttpRequest()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pjcore.HttpRequest)
}

void HttpRequest::InitAsDefaultInstance() {
  parsed_url_ = const_cast< ::pjcore::ParsedUrl*>(&::pjcore::ParsedUrl::default_instance());
  http_version_ = const_cast< ::pjcore::HttpVersion*>(&::pjcore::HttpVersion::default_instance());
}

HttpRequest::HttpRequest(const HttpRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pjcore.HttpRequest)
}

void HttpRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  method_ = 0;
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parsed_url_ = NULL;
  http_version_ = NULL;
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  should_keep_alive_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HttpRequest::~HttpRequest() {
  // @@protoc_insertion_point(destructor:pjcore.HttpRequest)
  SharedDtor();
}

void HttpRequest::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete parsed_url_;
    delete http_version_;
  }
}

void HttpRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HttpRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HttpRequest_descriptor_;
}

const HttpRequest& HttpRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pjcore_2fhttp_2eproto();
  return *default_instance_;
}

HttpRequest* HttpRequest::default_instance_ = NULL;

HttpRequest* HttpRequest::New(::google::protobuf::Arena* arena) const {
  HttpRequest* n = new HttpRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HttpRequest::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<HttpRequest*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 111) {
    ZR_(method_, should_keep_alive_);
    if (has_url()) {
      url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_parsed_url()) {
      if (parsed_url_ != NULL) parsed_url_->::pjcore::ParsedUrl::Clear();
    }
    if (has_http_version()) {
      if (http_version_ != NULL) http_version_->::pjcore::HttpVersion::Clear();
    }
    if (has_content()) {
      content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  headers_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool HttpRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pjcore.HttpRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 method = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &method_)));
          set_has_method();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_url;
        break;
      }

      // optional string url = 2;
      case 2: {
        if (tag == 18) {
         parse_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pjcore.HttpRequest.url");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_parsed_url;
        break;
      }

      // optional .pjcore.ParsedUrl parsed_url = 3;
      case 3: {
        if (tag == 26) {
         parse_parsed_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_parsed_url()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_http_version;
        break;
      }

      // optional .pjcore.HttpVersion http_version = 4;
      case 4: {
        if (tag == 34) {
         parse_http_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_http_version()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_headers;
        break;
      }

      // repeated .pjcore.HttpHeader headers = 5;
      case 5: {
        if (tag == 42) {
         parse_headers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_headers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_headers;
        if (input->ExpectTag(50)) goto parse_content;
        break;
      }

      // optional bytes content = 6;
      case 6: {
        if (tag == 50) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_should_keep_alive;
        break;
      }

      // optional bool should_keep_alive = 7;
      case 7: {
        if (tag == 56) {
         parse_should_keep_alive:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &should_keep_alive_)));
          set_has_should_keep_alive();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pjcore.HttpRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pjcore.HttpRequest)
  return false;
#undef DO_
}

void HttpRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pjcore.HttpRequest)
  // optional int32 method = 1;
  if (has_method()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->method(), output);
  }

  // optional string url = 2;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pjcore.HttpRequest.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->url(), output);
  }

  // optional .pjcore.ParsedUrl parsed_url = 3;
  if (has_parsed_url()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->parsed_url_, output);
  }

  // optional .pjcore.HttpVersion http_version = 4;
  if (has_http_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->http_version_, output);
  }

  // repeated .pjcore.HttpHeader headers = 5;
  for (unsigned int i = 0, n = this->headers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->headers(i), output);
  }

  // optional bytes content = 6;
  if (has_content()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->content(), output);
  }

  // optional bool should_keep_alive = 7;
  if (has_should_keep_alive()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->should_keep_alive(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pjcore.HttpRequest)
}

::google::protobuf::uint8* HttpRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pjcore.HttpRequest)
  // optional int32 method = 1;
  if (has_method()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->method(), target);
  }

  // optional string url = 2;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pjcore.HttpRequest.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->url(), target);
  }

  // optional .pjcore.ParsedUrl parsed_url = 3;
  if (has_parsed_url()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, *this->parsed_url_, target);
  }

  // optional .pjcore.HttpVersion http_version = 4;
  if (has_http_version()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, *this->http_version_, target);
  }

  // repeated .pjcore.HttpHeader headers = 5;
  for (unsigned int i = 0, n = this->headers_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->headers(i), target);
  }

  // optional bytes content = 6;
  if (has_content()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->content(), target);
  }

  // optional bool should_keep_alive = 7;
  if (has_should_keep_alive()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->should_keep_alive(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pjcore.HttpRequest)
  return target;
}

int HttpRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 111) {
    // optional int32 method = 1;
    if (has_method()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->method());
    }

    // optional string url = 2;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional .pjcore.ParsedUrl parsed_url = 3;
    if (has_parsed_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->parsed_url_);
    }

    // optional .pjcore.HttpVersion http_version = 4;
    if (has_http_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->http_version_);
    }

    // optional bytes content = 6;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->content());
    }

    // optional bool should_keep_alive = 7;
    if (has_should_keep_alive()) {
      total_size += 1 + 1;
    }

  }
  // repeated .pjcore.HttpHeader headers = 5;
  total_size += 1 * this->headers_size();
  for (int i = 0; i < this->headers_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->headers(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HttpRequest::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HttpRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HttpRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HttpRequest::MergeFrom(const HttpRequest& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  headers_.MergeFrom(from.headers_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_method()) {
      set_method(from.method());
    }
    if (from.has_url()) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (from.has_parsed_url()) {
      mutable_parsed_url()->::pjcore::ParsedUrl::MergeFrom(from.parsed_url());
    }
    if (from.has_http_version()) {
      mutable_http_version()->::pjcore::HttpVersion::MergeFrom(from.http_version());
    }
    if (from.has_content()) {
      set_has_content();
      content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
    }
    if (from.has_should_keep_alive()) {
      set_should_keep_alive(from.should_keep_alive());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void HttpRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HttpRequest::CopyFrom(const HttpRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HttpRequest::IsInitialized() const {

  return true;
}

void HttpRequest::Swap(HttpRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HttpRequest::InternalSwap(HttpRequest* other) {
  std::swap(method_, other->method_);
  url_.Swap(&other->url_);
  std::swap(parsed_url_, other->parsed_url_);
  std::swap(http_version_, other->http_version_);
  headers_.UnsafeArenaSwap(&other->headers_);
  content_.Swap(&other->content_);
  std::swap(should_keep_alive_, other->should_keep_alive_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HttpRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HttpRequest_descriptor_;
  metadata.reflection = HttpRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HttpResponse::kHttpVersionFieldNumber;
const int HttpResponse::kStatusCodeFieldNumber;
const int HttpResponse::kHeadersFieldNumber;
const int HttpResponse::kContentFieldNumber;
const int HttpResponse::kShouldKeepAliveFieldNumber;
#endif  // !_MSC_VER

HttpResponse::HttpResponse()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pjcore.HttpResponse)
}

void HttpResponse::InitAsDefaultInstance() {
  http_version_ = const_cast< ::pjcore::HttpVersion*>(&::pjcore::HttpVersion::default_instance());
}

HttpResponse::HttpResponse(const HttpResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pjcore.HttpResponse)
}

void HttpResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  http_version_ = NULL;
  status_code_ = 100;
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  should_keep_alive_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HttpResponse::~HttpResponse() {
  // @@protoc_insertion_point(destructor:pjcore.HttpResponse)
  SharedDtor();
}

void HttpResponse::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete http_version_;
  }
}

void HttpResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HttpResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HttpResponse_descriptor_;
}

const HttpResponse& HttpResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pjcore_2fhttp_2eproto();
  return *default_instance_;
}

HttpResponse* HttpResponse::default_instance_ = NULL;

HttpResponse* HttpResponse::New(::google::protobuf::Arena* arena) const {
  HttpResponse* n = new HttpResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HttpResponse::Clear() {
  if (_has_bits_[0 / 32] & 27) {
    if (has_http_version()) {
      if (http_version_ != NULL) http_version_->::pjcore::HttpVersion::Clear();
    }
    status_code_ = 100;
    if (has_content()) {
      content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    should_keep_alive_ = false;
  }
  headers_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool HttpResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pjcore.HttpResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pjcore.HttpVersion http_version = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_http_version()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_status_code;
        break;
      }

      // optional .pjcore.HttpStatusCode status_code = 2;
      case 2: {
        if (tag == 16) {
         parse_status_code:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pjcore::HttpStatusCode_IsValid(value)) {
            set_status_code(static_cast< ::pjcore::HttpStatusCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_headers;
        break;
      }

      // repeated .pjcore.HttpHeader headers = 3;
      case 3: {
        if (tag == 26) {
         parse_headers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_headers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_headers;
        if (input->ExpectTag(34)) goto parse_content;
        break;
      }

      // optional bytes content = 4;
      case 4: {
        if (tag == 34) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_should_keep_alive;
        break;
      }

      // optional bool should_keep_alive = 5;
      case 5: {
        if (tag == 40) {
         parse_should_keep_alive:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &should_keep_alive_)));
          set_has_should_keep_alive();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pjcore.HttpResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pjcore.HttpResponse)
  return false;
#undef DO_
}

void HttpResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pjcore.HttpResponse)
  // optional .pjcore.HttpVersion http_version = 1;
  if (has_http_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->http_version_, output);
  }

  // optional .pjcore.HttpStatusCode status_code = 2;
  if (has_status_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status_code(), output);
  }

  // repeated .pjcore.HttpHeader headers = 3;
  for (unsigned int i = 0, n = this->headers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->headers(i), output);
  }

  // optional bytes content = 4;
  if (has_content()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->content(), output);
  }

  // optional bool should_keep_alive = 5;
  if (has_should_keep_alive()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->should_keep_alive(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pjcore.HttpResponse)
}

::google::protobuf::uint8* HttpResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pjcore.HttpResponse)
  // optional .pjcore.HttpVersion http_version = 1;
  if (has_http_version()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->http_version_, target);
  }

  // optional .pjcore.HttpStatusCode status_code = 2;
  if (has_status_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->status_code(), target);
  }

  // repeated .pjcore.HttpHeader headers = 3;
  for (unsigned int i = 0, n = this->headers_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->headers(i), target);
  }

  // optional bytes content = 4;
  if (has_content()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->content(), target);
  }

  // optional bool should_keep_alive = 5;
  if (has_should_keep_alive()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->should_keep_alive(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pjcore.HttpResponse)
  return target;
}

int HttpResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 27) {
    // optional .pjcore.HttpVersion http_version = 1;
    if (has_http_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->http_version_);
    }

    // optional .pjcore.HttpStatusCode status_code = 2;
    if (has_status_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status_code());
    }

    // optional bytes content = 4;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->content());
    }

    // optional bool should_keep_alive = 5;
    if (has_should_keep_alive()) {
      total_size += 1 + 1;
    }

  }
  // repeated .pjcore.HttpHeader headers = 3;
  total_size += 1 * this->headers_size();
  for (int i = 0; i < this->headers_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->headers(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HttpResponse::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HttpResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HttpResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HttpResponse::MergeFrom(const HttpResponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  headers_.MergeFrom(from.headers_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_http_version()) {
      mutable_http_version()->::pjcore::HttpVersion::MergeFrom(from.http_version());
    }
    if (from.has_status_code()) {
      set_status_code(from.status_code());
    }
    if (from.has_content()) {
      set_has_content();
      content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
    }
    if (from.has_should_keep_alive()) {
      set_should_keep_alive(from.should_keep_alive());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void HttpResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HttpResponse::CopyFrom(const HttpResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HttpResponse::IsInitialized() const {

  return true;
}

void HttpResponse::Swap(HttpResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HttpResponse::InternalSwap(HttpResponse* other) {
  std::swap(http_version_, other->http_version_);
  std::swap(status_code_, other->status_code_);
  headers_.UnsafeArenaSwap(&other->headers_);
  content_.Swap(&other->content_);
  std::swap(should_keep_alive_, other->should_keep_alive_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HttpResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HttpResponse_descriptor_;
  metadata.reflection = HttpResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HttpServerConfig::kPortFieldNumber;
const int HttpServerConfig::kBacklogFieldNumber;
#endif  // !_MSC_VER

HttpServerConfig::HttpServerConfig()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pjcore.HttpServerConfig)
}

void HttpServerConfig::InitAsDefaultInstance() {
}

HttpServerConfig::HttpServerConfig(const HttpServerConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pjcore.HttpServerConfig)
}

void HttpServerConfig::SharedCtor() {
  _cached_size_ = 0;
  port_ = 0;
  backlog_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HttpServerConfig::~HttpServerConfig() {
  // @@protoc_insertion_point(destructor:pjcore.HttpServerConfig)
  SharedDtor();
}

void HttpServerConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HttpServerConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HttpServerConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HttpServerConfig_descriptor_;
}

const HttpServerConfig& HttpServerConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pjcore_2fhttp_2eproto();
  return *default_instance_;
}

HttpServerConfig* HttpServerConfig::default_instance_ = NULL;

HttpServerConfig* HttpServerConfig::New(::google::protobuf::Arena* arena) const {
  HttpServerConfig* n = new HttpServerConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HttpServerConfig::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<HttpServerConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(port_, backlog_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool HttpServerConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pjcore.HttpServerConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 port = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
          set_has_port();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_backlog;
        break;
      }

      // optional int32 backlog = 2;
      case 2: {
        if (tag == 16) {
         parse_backlog:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &backlog_)));
          set_has_backlog();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pjcore.HttpServerConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pjcore.HttpServerConfig)
  return false;
#undef DO_
}

void HttpServerConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pjcore.HttpServerConfig)
  // optional int32 port = 1;
  if (has_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->port(), output);
  }

  // optional int32 backlog = 2;
  if (has_backlog()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->backlog(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pjcore.HttpServerConfig)
}

::google::protobuf::uint8* HttpServerConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pjcore.HttpServerConfig)
  // optional int32 port = 1;
  if (has_port()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->port(), target);
  }

  // optional int32 backlog = 2;
  if (has_backlog()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->backlog(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pjcore.HttpServerConfig)
  return target;
}

int HttpServerConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3) {
    // optional int32 port = 1;
    if (has_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->port());
    }

    // optional int32 backlog = 2;
    if (has_backlog()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->backlog());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HttpServerConfig::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HttpServerConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HttpServerConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HttpServerConfig::MergeFrom(const HttpServerConfig& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_port()) {
      set_port(from.port());
    }
    if (from.has_backlog()) {
      set_backlog(from.backlog());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void HttpServerConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HttpServerConfig::CopyFrom(const HttpServerConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HttpServerConfig::IsInitialized() const {

  return true;
}

void HttpServerConfig::Swap(HttpServerConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HttpServerConfig::InternalSwap(HttpServerConfig* other) {
  std::swap(port_, other->port_);
  std::swap(backlog_, other->backlog_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HttpServerConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HttpServerConfig_descriptor_;
  metadata.reflection = HttpServerConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

HttpClientConfig::HttpClientConfig()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pjcore.HttpClientConfig)
}

void HttpClientConfig::InitAsDefaultInstance() {
}

HttpClientConfig::HttpClientConfig(const HttpClientConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pjcore.HttpClientConfig)
}

void HttpClientConfig::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HttpClientConfig::~HttpClientConfig() {
  // @@protoc_insertion_point(destructor:pjcore.HttpClientConfig)
  SharedDtor();
}

void HttpClientConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HttpClientConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HttpClientConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HttpClientConfig_descriptor_;
}

const HttpClientConfig& HttpClientConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pjcore_2fhttp_2eproto();
  return *default_instance_;
}

HttpClientConfig* HttpClientConfig::default_instance_ = NULL;

HttpClientConfig* HttpClientConfig::New(::google::protobuf::Arena* arena) const {
  HttpClientConfig* n = new HttpClientConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HttpClientConfig::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool HttpClientConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pjcore.HttpClientConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pjcore.HttpClientConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pjcore.HttpClientConfig)
  return false;
#undef DO_
}

void HttpClientConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pjcore.HttpClientConfig)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pjcore.HttpClientConfig)
}

::google::protobuf::uint8* HttpClientConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pjcore.HttpClientConfig)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pjcore.HttpClientConfig)
  return target;
}

int HttpClientConfig::ByteSize() const {
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HttpClientConfig::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HttpClientConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HttpClientConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HttpClientConfig::MergeFrom(const HttpClientConfig& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void HttpClientConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HttpClientConfig::CopyFrom(const HttpClientConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HttpClientConfig::IsInitialized() const {

  return true;
}

void HttpClientConfig::Swap(HttpClientConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HttpClientConfig::InternalSwap(HttpClientConfig* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HttpClientConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HttpClientConfig_descriptor_;
  metadata.reflection = HttpClientConfig_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pjcore

// @@protoc_insertion_point(global_scope)
